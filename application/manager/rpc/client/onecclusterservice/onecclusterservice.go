// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: manager.proto

package onecclusterservice

import (
	"context"

	"github.com/yanshicheng/kube-onec/application/manager/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddOnecClusterReq         = pb.AddOnecClusterReq
	AddOnecClusterResp        = pb.AddOnecClusterResp
	AddOnecNodeAnnotationReq  = pb.AddOnecNodeAnnotationReq
	AddOnecNodeAnnotationResp = pb.AddOnecNodeAnnotationResp
	AddOnecNodeLabelReq       = pb.AddOnecNodeLabelReq
	AddOnecNodeLabelResp      = pb.AddOnecNodeLabelResp
	AddOnecNodeReq            = pb.AddOnecNodeReq
	AddOnecNodeResp           = pb.AddOnecNodeResp
	AddOnecNodeTaintReq       = pb.AddOnecNodeTaintReq
	AddOnecNodeTaintResp      = pb.AddOnecNodeTaintResp
	CancelForbidOnecNodeReq   = pb.CancelForbidOnecNodeReq
	CancelForbidOnecNodeResp  = pb.CancelForbidOnecNodeResp
	DelOnecClusterReq         = pb.DelOnecClusterReq
	DelOnecClusterResp        = pb.DelOnecClusterResp
	DelOnecNodeAnnotationReq  = pb.DelOnecNodeAnnotationReq
	DelOnecNodeAnnotationResp = pb.DelOnecNodeAnnotationResp
	DelOnecNodeLabelReq       = pb.DelOnecNodeLabelReq
	DelOnecNodeLabelResp      = pb.DelOnecNodeLabelResp
	DelOnecNodeReq            = pb.DelOnecNodeReq
	DelOnecNodeResp           = pb.DelOnecNodeResp
	DelOnecNodeTaintReq       = pb.DelOnecNodeTaintReq
	DelOnecNodeTaintResp      = pb.DelOnecNodeTaintResp
	ForbidOnecNodeReq         = pb.ForbidOnecNodeReq
	ForbidOnecNodeResp        = pb.ForbidOnecNodeResp
	GetOnecClusterByIdReq     = pb.GetOnecClusterByIdReq
	GetOnecClusterByIdResp    = pb.GetOnecClusterByIdResp
	GetOnecNodeByIdReq        = pb.GetOnecNodeByIdReq
	GetOnecNodeByIdResp       = pb.GetOnecNodeByIdResp
	OnecCluster               = pb.OnecCluster
	OnecNode                  = pb.OnecNode
	OtherInfo                 = pb.OtherInfo
	SearchOnecClusterReq      = pb.SearchOnecClusterReq
	SearchOnecClusterResp     = pb.SearchOnecClusterResp
	SearchOnecNodeReq         = pb.SearchOnecNodeReq
	SearchOnecNodeResp        = pb.SearchOnecNodeResp
	SyncOnecClusterReq        = pb.SyncOnecClusterReq
	SyncOnecClusterResp       = pb.SyncOnecClusterResp
	SyncOnecNodeReq           = pb.SyncOnecNodeReq
	SyncOnecNodeResp          = pb.SyncOnecNodeResp
	UpdateOnecClusterReq      = pb.UpdateOnecClusterReq
	UpdateOnecClusterResp     = pb.UpdateOnecClusterResp

	OnecClusterService interface {
		// -----------------------集群表，用于管理多个 Kubernetes 集群-----------------------
		AddOnecCluster(ctx context.Context, in *AddOnecClusterReq, opts ...grpc.CallOption) (*AddOnecClusterResp, error)
		UpdateOnecCluster(ctx context.Context, in *UpdateOnecClusterReq, opts ...grpc.CallOption) (*UpdateOnecClusterResp, error)
		DelOnecCluster(ctx context.Context, in *DelOnecClusterReq, opts ...grpc.CallOption) (*DelOnecClusterResp, error)
		GetOnecClusterById(ctx context.Context, in *GetOnecClusterByIdReq, opts ...grpc.CallOption) (*GetOnecClusterByIdResp, error)
		SearchOnecCluster(ctx context.Context, in *SearchOnecClusterReq, opts ...grpc.CallOption) (*SearchOnecClusterResp, error)
		// 同步集群信息
		SyncOnecCluster(ctx context.Context, in *SyncOnecClusterReq, opts ...grpc.CallOption) (*SyncOnecClusterResp, error)
		AddOnecNode(ctx context.Context, in *AddOnecNodeReq, opts ...grpc.CallOption) (*AddOnecNodeResp, error)
	}

	defaultOnecClusterService struct {
		cli zrpc.Client
	}
)

func NewOnecClusterService(cli zrpc.Client) OnecClusterService {
	return &defaultOnecClusterService{
		cli: cli,
	}
}

// -----------------------集群表，用于管理多个 Kubernetes 集群-----------------------
func (m *defaultOnecClusterService) AddOnecCluster(ctx context.Context, in *AddOnecClusterReq, opts ...grpc.CallOption) (*AddOnecClusterResp, error) {
	client := pb.NewOnecClusterServiceClient(m.cli.Conn())
	return client.AddOnecCluster(ctx, in, opts...)
}

func (m *defaultOnecClusterService) UpdateOnecCluster(ctx context.Context, in *UpdateOnecClusterReq, opts ...grpc.CallOption) (*UpdateOnecClusterResp, error) {
	client := pb.NewOnecClusterServiceClient(m.cli.Conn())
	return client.UpdateOnecCluster(ctx, in, opts...)
}

func (m *defaultOnecClusterService) DelOnecCluster(ctx context.Context, in *DelOnecClusterReq, opts ...grpc.CallOption) (*DelOnecClusterResp, error) {
	client := pb.NewOnecClusterServiceClient(m.cli.Conn())
	return client.DelOnecCluster(ctx, in, opts...)
}

func (m *defaultOnecClusterService) GetOnecClusterById(ctx context.Context, in *GetOnecClusterByIdReq, opts ...grpc.CallOption) (*GetOnecClusterByIdResp, error) {
	client := pb.NewOnecClusterServiceClient(m.cli.Conn())
	return client.GetOnecClusterById(ctx, in, opts...)
}

func (m *defaultOnecClusterService) SearchOnecCluster(ctx context.Context, in *SearchOnecClusterReq, opts ...grpc.CallOption) (*SearchOnecClusterResp, error) {
	client := pb.NewOnecClusterServiceClient(m.cli.Conn())
	return client.SearchOnecCluster(ctx, in, opts...)
}

// 同步集群信息
func (m *defaultOnecClusterService) SyncOnecCluster(ctx context.Context, in *SyncOnecClusterReq, opts ...grpc.CallOption) (*SyncOnecClusterResp, error) {
	client := pb.NewOnecClusterServiceClient(m.cli.Conn())
	return client.SyncOnecCluster(ctx, in, opts...)
}

func (m *defaultOnecClusterService) AddOnecNode(ctx context.Context, in *AddOnecNodeReq, opts ...grpc.CallOption) (*AddOnecNodeResp, error) {
	client := pb.NewOnecClusterServiceClient(m.cli.Conn())
	return client.AddOnecNode(ctx, in, opts...)
}
