// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: manager.proto

package server

import (
	"context"

	"github.com/yanshicheng/kube-onec/application/manager/rpc/internal/logic/onecclusterservice"
	"github.com/yanshicheng/kube-onec/application/manager/rpc/internal/svc"
	"github.com/yanshicheng/kube-onec/application/manager/rpc/pb"
)

type OnecClusterServiceServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedOnecClusterServiceServer
}

func NewOnecClusterServiceServer(svcCtx *svc.ServiceContext) *OnecClusterServiceServer {
	return &OnecClusterServiceServer{
		svcCtx: svcCtx,
	}
}

// -----------------------集群表，用于管理多个 Kubernetes 集群-----------------------
func (s *OnecClusterServiceServer) AddOnecCluster(ctx context.Context, in *pb.AddOnecClusterReq) (*pb.AddOnecClusterResp, error) {
	l := onecclusterservicelogic.NewAddOnecClusterLogic(ctx, s.svcCtx)
	return l.AddOnecCluster(in)
}

func (s *OnecClusterServiceServer) UpdateOnecCluster(ctx context.Context, in *pb.UpdateOnecClusterReq) (*pb.UpdateOnecClusterResp, error) {
	l := onecclusterservicelogic.NewUpdateOnecClusterLogic(ctx, s.svcCtx)
	return l.UpdateOnecCluster(in)
}

func (s *OnecClusterServiceServer) DelOnecCluster(ctx context.Context, in *pb.DelOnecClusterReq) (*pb.DelOnecClusterResp, error) {
	l := onecclusterservicelogic.NewDelOnecClusterLogic(ctx, s.svcCtx)
	return l.DelOnecCluster(in)
}

func (s *OnecClusterServiceServer) GetOnecClusterById(ctx context.Context, in *pb.GetOnecClusterByIdReq) (*pb.GetOnecClusterByIdResp, error) {
	l := onecclusterservicelogic.NewGetOnecClusterByIdLogic(ctx, s.svcCtx)
	return l.GetOnecClusterById(in)
}

func (s *OnecClusterServiceServer) SearchOnecCluster(ctx context.Context, in *pb.SearchOnecClusterReq) (*pb.SearchOnecClusterResp, error) {
	l := onecclusterservicelogic.NewSearchOnecClusterLogic(ctx, s.svcCtx)
	return l.SearchOnecCluster(in)
}

// 同步集群信息
func (s *OnecClusterServiceServer) SyncOnecCluster(ctx context.Context, in *pb.SyncOnecClusterReq) (*pb.SyncOnecClusterResp, error) {
	l := onecclusterservicelogic.NewSyncOnecClusterLogic(ctx, s.svcCtx)
	return l.SyncOnecCluster(in)
}

func (s *OnecClusterServiceServer) AddOnecNode(ctx context.Context, in *pb.AddOnecNodeReq) (*pb.AddOnecNodeResp, error) {
	l := onecclusterservicelogic.NewAddOnecNodeLogic(ctx, s.svcCtx)
	return l.AddOnecNode(in)
}
