// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: manager.proto

package server

import (
	"context"

	"github.com/yanshicheng/kube-onec/application/manager/rpc/internal/logic/onecnodeservice"
	"github.com/yanshicheng/kube-onec/application/manager/rpc/internal/svc"
	"github.com/yanshicheng/kube-onec/application/manager/rpc/pb"
)

type OnecNodeServiceServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedOnecNodeServiceServer
}

func NewOnecNodeServiceServer(svcCtx *svc.ServiceContext) *OnecNodeServiceServer {
	return &OnecNodeServiceServer{
		svcCtx: svcCtx,
	}
}

// -----------------------节点表，用于管理各集群中的节点信息-----------------------
func (s *OnecNodeServiceServer) DelOnecNode(ctx context.Context, in *pb.DelOnecNodeReq) (*pb.DelOnecNodeResp, error) {
	l := onecnodeservicelogic.NewDelOnecNodeLogic(ctx, s.svcCtx)
	return l.DelOnecNode(in)
}

func (s *OnecNodeServiceServer) GetOnecNodeById(ctx context.Context, in *pb.GetOnecNodeByIdReq) (*pb.GetOnecNodeByIdResp, error) {
	l := onecnodeservicelogic.NewGetOnecNodeByIdLogic(ctx, s.svcCtx)
	return l.GetOnecNodeById(in)
}

func (s *OnecNodeServiceServer) SearchOnecNode(ctx context.Context, in *pb.SearchOnecNodeReq) (*pb.SearchOnecNodeResp, error) {
	l := onecnodeservicelogic.NewSearchOnecNodeLogic(ctx, s.svcCtx)
	return l.SearchOnecNode(in)
}

// 节点添加标签
func (s *OnecNodeServiceServer) AddOnecNodeLabel(ctx context.Context, in *pb.AddOnecNodeLabelReq) (*pb.AddOnecNodeLabelResp, error) {
	l := onecnodeservicelogic.NewAddOnecNodeLabelLogic(ctx, s.svcCtx)
	return l.AddOnecNodeLabel(in)
}

// 节点删除标签
func (s *OnecNodeServiceServer) DelOnecNodeLabel(ctx context.Context, in *pb.DelOnecNodeLabelReq) (*pb.DelOnecNodeLabelResp, error) {
	l := onecnodeservicelogic.NewDelOnecNodeLabelLogic(ctx, s.svcCtx)
	return l.DelOnecNodeLabel(in)
}

// 节点添加注解
func (s *OnecNodeServiceServer) AddOnecNodeAnnotation(ctx context.Context, in *pb.AddOnecNodeAnnotationReq) (*pb.AddOnecNodeAnnotationResp, error) {
	l := onecnodeservicelogic.NewAddOnecNodeAnnotationLogic(ctx, s.svcCtx)
	return l.AddOnecNodeAnnotation(in)
}

// 节点删除注解
func (s *OnecNodeServiceServer) DelOnecNodeAnnotation(ctx context.Context, in *pb.DelOnecNodeAnnotationReq) (*pb.DelOnecNodeAnnotationResp, error) {
	l := onecnodeservicelogic.NewDelOnecNodeAnnotationLogic(ctx, s.svcCtx)
	return l.DelOnecNodeAnnotation(in)
}

// 禁止调度
func (s *OnecNodeServiceServer) ForbidScheduled(ctx context.Context, in *pb.ForbidScheduledReq) (*pb.ForbidScheduledResp, error) {
	l := onecnodeservicelogic.NewForbidScheduledLogic(ctx, s.svcCtx)
	return l.ForbidScheduled(in)
}

// 取消禁止调度
func (s *OnecNodeServiceServer) EnableScheduledNode(ctx context.Context, in *pb.EnableScheduledNodeReq) (*pb.EnableScheduledNodeResp, error) {
	l := onecnodeservicelogic.NewEnableScheduledNodeLogic(ctx, s.svcCtx)
	return l.EnableScheduledNode(in)
}

// 添加污点
func (s *OnecNodeServiceServer) AddOnecNodeTaint(ctx context.Context, in *pb.AddOnecNodeTaintReq) (*pb.AddOnecNodeTaintResp, error) {
	l := onecnodeservicelogic.NewAddOnecNodeTaintLogic(ctx, s.svcCtx)
	return l.AddOnecNodeTaint(in)
}

// 删除污点
func (s *OnecNodeServiceServer) DelOnecNodeTaint(ctx context.Context, in *pb.DelOnecNodeTaintReq) (*pb.DelOnecNodeTaintResp, error) {
	l := onecnodeservicelogic.NewDelOnecNodeTaintLogic(ctx, s.svcCtx)
	return l.DelOnecNodeTaint(in)
}

// 同步节点信息
func (s *OnecNodeServiceServer) SyncOnecNode(ctx context.Context, in *pb.SyncOnecNodeReq) (*pb.SyncOnecNodeResp, error) {
	l := onecnodeservicelogic.NewSyncOnecNodeLogic(ctx, s.svcCtx)
	return l.SyncOnecNode(in)
}

// 驱逐节点pod
func (s *OnecNodeServiceServer) EvictNodePod(ctx context.Context, in *pb.EvictNodePodReq) (*pb.EvictNodePodResp, error) {
	l := onecnodeservicelogic.NewEvictNodePodLogic(ctx, s.svcCtx)
	return l.EvictNodePod(in)
}

func (s *OnecNodeServiceServer) SearchOnecNodeLabelList(ctx context.Context, in *pb.SearchOnecNodeLabelListReq) (*pb.SearchOnecNodeLabelListResp, error) {
	l := onecnodeservicelogic.NewSearchOnecNodeLabelListLogic(ctx, s.svcCtx)
	return l.SearchOnecNodeLabelList(in)
}

func (s *OnecNodeServiceServer) SearchOnecNodeAnnotationList(ctx context.Context, in *pb.SearchOnecNodeAnnotationListReq) (*pb.SearchOnecNodeAnnotationListResp, error) {
	l := onecnodeservicelogic.NewSearchOnecNodeAnnotationListLogic(ctx, s.svcCtx)
	return l.SearchOnecNodeAnnotationList(in)
}

func (s *OnecNodeServiceServer) SearchOnecNodeTaintList(ctx context.Context, in *pb.SearchOnecNodeTaintListReq) (*pb.SearchOnecNodeTaintListResp, error) {
	l := onecnodeservicelogic.NewSearchOnecNodeTaintListLogic(ctx, s.svcCtx)
	return l.SearchOnecNodeTaintList(in)
}
