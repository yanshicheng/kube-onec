syntax = "proto3";

option go_package ="github.com/yanshicheng/kube-onec/application/portal/rpc/pb";

package pb;

// ------------------------------------ 
// Messages and Services
// ------------------------------------ 

//--------------------------------字典表--------------------------------
message SysDict {
  uint64 id = 1; //自增主键
  string dictName = 2; //字典名称
  string dictCode = 3; //字典编码
  string description = 4; //描述
  int64 isDisabled = 5; //是否禁用，false禁用，true不禁用
  int64 type = 6; //字典类型0为string,1为number
  string createBy = 7; //创建人
  string updateBy = 8; //更新人
  int64 createTime = 9; //创建时间
  int64 updateTime = 10; //最后修改时间
}

message AddSysDictReq {
  string dictName = 1; //字典名称
  string dictCode = 2; //字典编码
  string description = 3; //描述
  int64 isDisabled = 4; //是否禁用，false禁用，true不禁用
  int64 type = 5; //字典类型0为string,1为number
  string createBy = 6; //创建人
  string updateBy = 7; //更新人
}

message AddSysDictResp {
}

message UpdateSysDictReq {
  uint64 id = 1; //自增主键
  string dictName = 2; //字典名称
  string dictCode = 3; //字典编码
  string description = 4; //描述
  int64 isDisabled = 5; //是否禁用，false禁用，true不禁用
  int64 type = 6; //字典类型0为string,1为number
  string updateBy = 7; //更新人
}

message UpdateSysDictResp {
}

message DelSysDictReq {
  uint64 id = 1; //id
}

message DelSysDictResp {
}

message GetSysDictByIdReq {
  uint64 id = 1; //id
}

message GetSysDictByIdResp {
  SysDict data = 1; //sysDict
}

message SearchSysDictReq {
  uint64 page = 1; //page
  uint64 pageSize = 2; //pageSize
  string orderStr = 3; //orderStr
  bool isAsc = 4; //isAsc
  string dictName = 5; //字典名称
  string dictCode = 6; //字典编码
  string description = 7; //描述
  int64 isDisabled = 8; //是否禁用，false禁用，true不禁用
  int64 type = 9; //字典类型0为string,1为number
  string createBy = 10; //创建人
  string updateBy = 11; //更新人
}

message SearchSysDictResp {
  repeated SysDict data = 1; //sysDict
  uint64 total = 2; //total
}

service SysDictService {
	//-----------------------字典表----------------------- 
	 rpc AddSysDict(AddSysDictReq) returns (AddSysDictResp);
	 rpc UpdateSysDict(UpdateSysDictReq) returns (UpdateSysDictResp);
	 rpc DelSysDict(DelSysDictReq) returns (DelSysDictResp);
	 rpc GetSysDictById(GetSysDictByIdReq) returns (GetSysDictByIdResp);
	 rpc SearchSysDict(SearchSysDictReq) returns (SearchSysDictResp);
}

//--------------------------------字典数据表--------------------------------
message SysDictItem {
  uint64 id = 1; //自增主键
  uint64 dictId = 2; //字典ID，关联 sys_dict 表
  string itemText = 3; //字典项文本
  string itemValue = 4; //字典项值
  string description = 5; //描述
  int64 sortOrder = 6; //排序
  int64 isDisabled = 7; //是否禁用，false禁用，true不禁用
  string createBy = 8; //创建人
  string updateBy = 9; //更新人
  int64 createTime = 10; //创建时间
  int64 updateTime = 11; //最后修改时间
}

message AddSysDictItemReq {
  uint64 dictId = 1; //字典ID，关联 sys_dict 表
  string itemText = 2; //字典项文本
  string itemValue = 3; //字典项值
  string description = 4; //描述
  int64 sortOrder = 5; //排序
  int64 isDisabled = 6; //是否禁用，false禁用，true不禁用
  string createBy = 7; //创建人
  string updateBy = 8; //更新人
}

message AddSysDictItemResp {
}

message UpdateSysDictItemReq {
  uint64 id = 1; //自增主键
  uint64 dictId = 2; //字典ID，关联 sys_dict 表
  string itemText = 3; //字典项文本
  string itemValue = 4; //字典项值
  string description = 5; //描述
  int64 sortOrder = 6; //排序
  int64 isDisabled = 7; //是否禁用，false禁用，true不禁用
  string updateBy = 8; //更新人
}

message UpdateSysDictItemResp {
}

message DelSysDictItemReq {
  uint64 id = 1; //id
}

message DelSysDictItemResp {
}

message GetSysDictItemByIdReq {
  uint64 id = 1; //id
}

message GetSysDictItemByIdResp {
  SysDictItem data = 1; //sysDictItem
}

message SearchSysDictItemReq {
  uint64 page = 1; //page
  uint64 pageSize = 2; //pageSize
  string orderStr = 3; //orderStr
  bool isAsc = 4; //isAsc
  uint64 dictId = 5; //字典ID，关联 sys_dict 表
  string itemText = 6; //字典项文本
  string itemValue = 7; //字典项值
  string description = 8; //描述
  int64 sortOrder = 9; //排序
  int64 isDisabled = 10; //是否禁用，false禁用，true不禁用
  string createBy = 11; //创建人
  string updateBy = 12; //更新人
}

message SearchSysDictItemResp {
  repeated SysDictItem data = 1; //sysDictItem
  uint64 total = 2; //total
}

service SysDictItemService {
	//-----------------------字典数据表----------------------- 
	 rpc AddSysDictItem(AddSysDictItemReq) returns (AddSysDictItemResp);
	 rpc UpdateSysDictItem(UpdateSysDictItemReq) returns (UpdateSysDictItemResp);
	 rpc DelSysDictItem(DelSysDictItemReq) returns (DelSysDictItemResp);
	 rpc GetSysDictItemById(GetSysDictItemByIdReq) returns (GetSysDictItemByIdResp);
	 rpc SearchSysDictItem(SearchSysDictItemReq) returns (SearchSysDictItemResp);
}

//--------------------------------菜单表--------------------------------
message SysMenu {
  uint64 id = 1; //主键ID
  string component = 2; //组件名称
  string name = 3; //菜单名称
  string path = 4; //路由路径
  string redirect = 5; //重定向路径
  uint64 parentId = 6; //父级ID
  int64 type = 7; //类型（1. 目录，2. 菜单，3. 按钮）
  int64 isEnable = 8; //是否启用（0. 禁用，1. 启用）
  string code = 9; //权限码
  string activeIcon = 10; //激活图标
  string activePath = 11; //当前激活的菜单路径
  int64 affixTab = 12; //是否固定标签页
  int64 affixTabOrder = 13; //固定标签页的顺序
  string badge = 14; //徽标
  SysMenuBadgeType badgeType = 15; //徽标类型
  string badgeVariants = 16; //徽标颜色
  int64 hideChildrenInMenu = 17; //当前路由的子级在菜单中不展现
  int64 hideInBreadcrumb = 18; //当前路由在面包屑中不展现
  int64 hideInMenu = 19; //当前路由在菜单中不展现
  int64 hideInTab = 20; //当前路由在标签页不展现
  string icon = 21; //图标
  string iframeSrc = 22; //iframe地址
  int64 ignoreAccess = 23; //忽略权限，直接可以访问
  int64 keepAlive = 24; //开启KeepAlive缓存
  string link = 25; //外链-跳转路径
  int64 loaded = 26; //路由是否已经加载过
  int64 maxNumOfOpenTab = 27; //标签页最大打开数量
  int64 menuVisibleWithForbidden = 28; //菜单可以看到，但是访问会被重定向到403
  int64 openInNewWindow = 29; //在新窗口打开
  int64 orderNum = 30; //用于路由->菜单排序
  string query = 31; //菜单所携带的参数
  string title = 32; //标题名称
}

message AddSysMenuReq {
  string component = 1; //组件名称
  string name = 2; //菜单名称
  string path = 3; //路由路径
  string redirect = 4; //重定向路径
  uint64 parentId = 5; //父级ID
  int64 type = 6; //类型（1. 目录，2. 菜单，3. 按钮）
  int64 isEnable = 7; //是否启用（0. 禁用，1. 启用）
  string code = 8; //权限码
  string activeIcon = 9; //激活图标
  string activePath = 10; //当前激活的菜单路径
  int64 affixTab = 11; //是否固定标签页
  int64 affixTabOrder = 12; //固定标签页的顺序
  string badge = 13; //徽标
  SysMenuBadgeType badgeType = 14; //徽标类型
  string badgeVariants = 15; //徽标颜色
  int64 hideChildrenInMenu = 16; //当前路由的子级在菜单中不展现
  int64 hideInBreadcrumb = 17; //当前路由在面包屑中不展现
  int64 hideInMenu = 18; //当前路由在菜单中不展现
  int64 hideInTab = 19; //当前路由在标签页不展现
  string icon = 20; //图标
  string iframeSrc = 21; //iframe地址
  int64 ignoreAccess = 22; //忽略权限，直接可以访问
  int64 keepAlive = 23; //开启KeepAlive缓存
  string link = 24; //外链-跳转路径
  int64 loaded = 25; //路由是否已经加载过
  int64 maxNumOfOpenTab = 26; //标签页最大打开数量
  int64 menuVisibleWithForbidden = 27; //菜单可以看到，但是访问会被重定向到403
  int64 openInNewWindow = 28; //在新窗口打开
  int64 orderNum = 29; //用于路由->菜单排序
  string query = 30; //菜单所携带的参数
  string title = 31; //标题名称
}

message AddSysMenuResp {
}

message UpdateSysMenuReq {
  uint64 id = 1; //主键ID
  string component = 2; //组件名称
  string name = 3; //菜单名称
  string path = 4; //路由路径
  string redirect = 5; //重定向路径
  uint64 parentId = 6; //父级ID
  int64 type = 7; //类型（1. 目录，2. 菜单，3. 按钮）
  int64 isEnable = 8; //是否启用（0. 禁用，1. 启用）
  string code = 9; //权限码
  string activeIcon = 10; //激活图标
  string activePath = 11; //当前激活的菜单路径
  int64 affixTab = 12; //是否固定标签页
  int64 affixTabOrder = 13; //固定标签页的顺序
  string badge = 14; //徽标
  SysMenuBadgeType badgeType = 15; //徽标类型
  string badgeVariants = 16; //徽标颜色
  int64 hideChildrenInMenu = 17; //当前路由的子级在菜单中不展现
  int64 hideInBreadcrumb = 18; //当前路由在面包屑中不展现
  int64 hideInMenu = 19; //当前路由在菜单中不展现
  int64 hideInTab = 20; //当前路由在标签页不展现
  string icon = 21; //图标
  string iframeSrc = 22; //iframe地址
  int64 ignoreAccess = 23; //忽略权限，直接可以访问
  int64 keepAlive = 24; //开启KeepAlive缓存
  string link = 25; //外链-跳转路径
  int64 loaded = 26; //路由是否已经加载过
  int64 maxNumOfOpenTab = 27; //标签页最大打开数量
  int64 menuVisibleWithForbidden = 28; //菜单可以看到，但是访问会被重定向到403
  int64 openInNewWindow = 29; //在新窗口打开
  int64 orderNum = 30; //用于路由->菜单排序
  string query = 31; //菜单所携带的参数
  string title = 32; //标题名称
}

message UpdateSysMenuResp {
}

message DelSysMenuReq {
  uint64 id = 1; //id
}

message DelSysMenuResp {
}

message GetSysMenuByIdReq {
  uint64 id = 1; //id
}

message GetSysMenuByIdResp {
  SysMenu data = 1; //sysMenu
}

message SearchSysMenuReq {
  uint64 page = 1; //page
  uint64 pageSize = 2; //pageSize
  string orderStr = 3; //orderStr
  bool isAsc = 4; //isAsc
  string component = 5; //组件名称
  string name = 6; //菜单名称
  string path = 7; //路由路径
  string redirect = 8; //重定向路径
  uint64 parentId = 9; //父级ID
  int64 type = 10; //类型（1. 目录，2. 菜单，3. 按钮）
  int64 isEnable = 11; //是否启用（0. 禁用，1. 启用）
  string code = 12; //权限码
  string activeIcon = 13; //激活图标
  string activePath = 14; //当前激活的菜单路径
  int64 affixTab = 15; //是否固定标签页
  int64 affixTabOrder = 16; //固定标签页的顺序
  string badge = 17; //徽标
  SysMenuBadgeType badgeType = 18; //徽标类型
  string badgeVariants = 19; //徽标颜色
  int64 hideChildrenInMenu = 20; //当前路由的子级在菜单中不展现
  int64 hideInBreadcrumb = 21; //当前路由在面包屑中不展现
  int64 hideInMenu = 22; //当前路由在菜单中不展现
  int64 hideInTab = 23; //当前路由在标签页不展现
  string icon = 24; //图标
  string iframeSrc = 25; //iframe地址
  int64 ignoreAccess = 26; //忽略权限，直接可以访问
  int64 keepAlive = 27; //开启KeepAlive缓存
  string link = 28; //外链-跳转路径
  int64 loaded = 29; //路由是否已经加载过
  int64 maxNumOfOpenTab = 30; //标签页最大打开数量
  int64 menuVisibleWithForbidden = 31; //菜单可以看到，但是访问会被重定向到403
  int64 openInNewWindow = 32; //在新窗口打开
  int64 orderNum = 33; //用于路由->菜单排序
  string query = 34; //菜单所携带的参数
  string title = 35; //标题名称
}

message SearchSysMenuResp {
  repeated SysMenu data = 1; //sysMenu
  uint64 total = 2; //total
}

service SysMenuService {
	//-----------------------菜单表----------------------- 
	 rpc AddSysMenu(AddSysMenuReq) returns (AddSysMenuResp);
	 rpc UpdateSysMenu(UpdateSysMenuReq) returns (UpdateSysMenuResp);
	 rpc DelSysMenu(DelSysMenuReq) returns (DelSysMenuResp);
	 rpc GetSysMenuById(GetSysMenuByIdReq) returns (GetSysMenuByIdResp);
	 rpc SearchSysMenu(SearchSysMenuReq) returns (SearchSysMenuResp);
}

//--------------------------------组织表--------------------------------
message SysOrganization {
  uint64 id = 1; //自增主键
  string name = 2; //团队名称
  uint64 parentId = 3; //父级组织的 ID，根级为 NULL
  int64 level = 4; //组织层级，从 0 开始
  string description = 5; //组织描述
  int64 createTime = 6; //创建时间
  int64 updateTime = 7; //最后修改时间
}

message AddSysOrganizationReq {
  string name = 1; //团队名称
  uint64 parentId = 2; //父级组织的 ID，根级为 NULL
  int64 level = 3; //组织层级，从 0 开始
  string description = 4; //组织描述
}

message AddSysOrganizationResp {
}

message UpdateSysOrganizationReq {
  uint64 id = 1; //自增主键
  string name = 2; //团队名称
  uint64 parentId = 3; //父级组织的 ID，根级为 NULL
  int64 level = 4; //组织层级，从 0 开始
  string description = 5; //组织描述
}

message UpdateSysOrganizationResp {
}

message DelSysOrganizationReq {
  uint64 id = 1; //id
}

message DelSysOrganizationResp {
}

message GetSysOrganizationByIdReq {
  uint64 id = 1; //id
}

message GetSysOrganizationByIdResp {
  SysOrganization data = 1; //sysOrganization
}

message SearchSysOrganizationReq {
  uint64 page = 1; //page
  uint64 pageSize = 2; //pageSize
  string orderStr = 3; //orderStr
  bool isAsc = 4; //isAsc
  string name = 5; //团队名称
  uint64 parentId = 6; //父级组织的 ID，根级为 NULL
  int64 level = 7; //组织层级，从 0 开始
  string description = 8; //组织描述
}

message SearchSysOrganizationResp {
  repeated SysOrganization data = 1; //sysOrganization
  uint64 total = 2; //total
}

service SysOrganizationService {
	//-----------------------组织表----------------------- 
	 rpc AddSysOrganization(AddSysOrganizationReq) returns (AddSysOrganizationResp);
	 rpc UpdateSysOrganization(UpdateSysOrganizationReq) returns (UpdateSysOrganizationResp);
	 rpc DelSysOrganization(DelSysOrganizationReq) returns (DelSysOrganizationResp);
	 rpc GetSysOrganizationById(GetSysOrganizationByIdReq) returns (GetSysOrganizationByIdResp);
	 rpc SearchSysOrganization(SearchSysOrganizationReq) returns (SearchSysOrganizationResp);
}

//--------------------------------权限表--------------------------------
message SysPermission {
  uint64 id = 1; //自增主键
  uint64 parentId = 2; //父权限ID
  string name = 3; //权限名称
  string uri = 4; //权限对应的资源URI或路径
  string action = 5; //对资源执行的操作
  int64 level = 6; //权限层级
  int64 createTime = 7; //创建时间
  int64 updateTime = 8; //最后修改时间
}

message AddSysPermissionReq {
  uint64 parentId = 1; //父权限ID
  string name = 2; //权限名称
  string uri = 3; //权限对应的资源URI或路径
  string action = 4; //对资源执行的操作
  int64 level = 5; //权限层级
}

message AddSysPermissionResp {
}

message UpdateSysPermissionReq {
  uint64 id = 1; //自增主键
  uint64 parentId = 2; //父权限ID
  string name = 3; //权限名称
  string uri = 4; //权限对应的资源URI或路径
  string action = 5; //对资源执行的操作
  int64 level = 6; //权限层级
}

message UpdateSysPermissionResp {
}

message DelSysPermissionReq {
  uint64 id = 1; //id
}

message DelSysPermissionResp {
}

message GetSysPermissionByIdReq {
  uint64 id = 1; //id
}

message GetSysPermissionByIdResp {
  SysPermission data = 1; //sysPermission
}

message SearchSysPermissionReq {
  uint64 page = 1; //page
  uint64 pageSize = 2; //pageSize
  string orderStr = 3; //orderStr
  bool isAsc = 4; //isAsc
  uint64 parentId = 5; //父权限ID
  string name = 6; //权限名称
  string uri = 7; //权限对应的资源URI或路径
  string action = 8; //对资源执行的操作
  int64 level = 9; //权限层级
}

message SearchSysPermissionResp {
  repeated SysPermission data = 1; //sysPermission
  uint64 total = 2; //total
}

service SysPermissionService {
	//-----------------------权限表----------------------- 
	 rpc AddSysPermission(AddSysPermissionReq) returns (AddSysPermissionResp);
	 rpc UpdateSysPermission(UpdateSysPermissionReq) returns (UpdateSysPermissionResp);
	 rpc DelSysPermission(DelSysPermissionReq) returns (DelSysPermissionResp);
	 rpc GetSysPermissionById(GetSysPermissionByIdReq) returns (GetSysPermissionByIdResp);
	 rpc SearchSysPermission(SearchSysPermissionReq) returns (SearchSysPermissionResp);
}

//--------------------------------职位表--------------------------------
message SysPosition {
  uint64 id = 1; //自增主键
  string name = 2; //职位名称
  int64 createTime = 3; //创建时间
  int64 updateTime = 4; //最后修改时间
}

message AddSysPositionReq {
  string name = 1; //职位名称
}

message AddSysPositionResp {
}

message UpdateSysPositionReq {
  uint64 id = 1; //自增主键
  string name = 2; //职位名称
}

message UpdateSysPositionResp {
}

message DelSysPositionReq {
  uint64 id = 1; //id
}

message DelSysPositionResp {
}

message GetSysPositionByIdReq {
  uint64 id = 1; //id
}

message GetSysPositionByIdResp {
  SysPosition data = 1; //sysPosition
}

message SearchSysPositionReq {
  uint64 page = 1; //page
  uint64 pageSize = 2; //pageSize
  string orderStr = 3; //orderStr
  bool isAsc = 4; //isAsc
  string name = 5; //职位名称
}

message SearchSysPositionResp {
  repeated SysPosition data = 1; //sysPosition
  uint64 total = 2; //total
}

service SysPositionService {
	//-----------------------职位表----------------------- 
	 rpc AddSysPosition(AddSysPositionReq) returns (AddSysPositionResp);
	 rpc UpdateSysPosition(UpdateSysPositionReq) returns (UpdateSysPositionResp);
	 rpc DelSysPosition(DelSysPositionReq) returns (DelSysPositionResp);
	 rpc GetSysPositionById(GetSysPositionByIdReq) returns (GetSysPositionByIdResp);
	 rpc SearchSysPosition(SearchSysPositionReq) returns (SearchSysPositionResp);
}

//--------------------------------角色表--------------------------------
message SysRole {
  uint64 id = 1; //自增主键
  string roleName = 2; //角色名称
  string roleCode = 3; //角色编码
  string description = 4; //描述
  string createBy = 5; //创建人
  string updateBy = 6; //更新人
  int64 createTime = 7; //创建时间
  int64 updateTime = 8; //最后修改时间
}

message AddSysRoleReq {
  string roleName = 1; //角色名称
  string roleCode = 2; //角色编码
  string description = 3; //描述
  string createBy = 4; //创建人
  string updateBy = 5; //更新人
}

message AddSysRoleResp {
}

message UpdateSysRoleReq {
  uint64 id = 1; //自增主键
  string roleName = 2; //角色名称
  string roleCode = 3; //角色编码
  string description = 4; //描述
  string updateBy = 5; //更新人
}

message UpdateSysRoleResp {
}

message DelSysRoleReq {
  uint64 id = 1; //id
}

message DelSysRoleResp {
}

message GetSysRoleByIdReq {
  uint64 id = 1; //id
}

message GetSysRoleByIdResp {
  SysRole data = 1; //sysRole
}

message SearchSysRoleReq {
  uint64 page = 1; //page
  uint64 pageSize = 2; //pageSize
  string orderStr = 3; //orderStr
  bool isAsc = 4; //isAsc
  string roleName = 5; //角色名称
  string roleCode = 6; //角色编码
  string description = 7; //描述
  string createBy = 8; //创建人
  string updateBy = 9; //更新人
}

message SearchSysRoleResp {
  repeated SysRole data = 1; //sysRole
  uint64 total = 2; //total
}

service SysRoleService {
	//-----------------------角色表----------------------- 
	 rpc AddSysRole(AddSysRoleReq) returns (AddSysRoleResp);
	 rpc UpdateSysRole(UpdateSysRoleReq) returns (UpdateSysRoleResp);
	 rpc DelSysRole(DelSysRoleReq) returns (DelSysRoleResp);
	 rpc GetSysRoleById(GetSysRoleByIdReq) returns (GetSysRoleByIdResp);
	 rpc SearchSysRole(SearchSysRoleReq) returns (SearchSysRoleResp);
}

//--------------------------------角色与菜单关联表--------------------------------
message SysRoleMenu {
  uint64 id = 1; //自增主键
  uint64 roleId = 2; //角色ID，关联 sys_role 表
  uint64 menuId = 3; //菜单ID，关联 sys_menu 表
  int64 createTime = 4; //创建时间
  int64 updateTime = 5; //最后修改时间
}

message AddSysRoleMenuReq {
  uint64 roleId = 1; //角色ID，关联 sys_role 表
  uint64 menuId = 2; //菜单ID，关联 sys_menu 表
}

message AddSysRoleMenuResp {
}

message UpdateSysRoleMenuReq {
  uint64 id = 1; //自增主键
  uint64 roleId = 2; //角色ID，关联 sys_role 表
  uint64 menuId = 3; //菜单ID，关联 sys_menu 表
}

message UpdateSysRoleMenuResp {
}

message DelSysRoleMenuReq {
  uint64 id = 1; //id
}

message DelSysRoleMenuResp {
}

message GetSysRoleMenuByIdReq {
  uint64 id = 1; //id
}

message GetSysRoleMenuByIdResp {
  SysRoleMenu data = 1; //sysRoleMenu
}

message SearchSysRoleMenuReq {
  uint64 page = 1; //page
  uint64 pageSize = 2; //pageSize
  string orderStr = 3; //orderStr
  bool isAsc = 4; //isAsc
  uint64 roleId = 5; //角色ID，关联 sys_role 表
  uint64 menuId = 6; //菜单ID，关联 sys_menu 表
}

message SearchSysRoleMenuResp {
  repeated SysRoleMenu data = 1; //sysRoleMenu
  uint64 total = 2; //total
}

service SysRoleMenuService {
	//-----------------------角色与菜单关联表----------------------- 
	 rpc AddSysRoleMenu(AddSysRoleMenuReq) returns (AddSysRoleMenuResp);
	 rpc UpdateSysRoleMenu(UpdateSysRoleMenuReq) returns (UpdateSysRoleMenuResp);
	 rpc DelSysRoleMenu(DelSysRoleMenuReq) returns (DelSysRoleMenuResp);
	 rpc GetSysRoleMenuById(GetSysRoleMenuByIdReq) returns (GetSysRoleMenuByIdResp);
	 rpc SearchSysRoleMenu(SearchSysRoleMenuReq) returns (SearchSysRoleMenuResp);
}

//--------------------------------角色与权限的关联表--------------------------------
message SysRolePermission {
  uint64 id = 1; //自增主键
  uint64 roleId = 2; //角色ID，关联 sys_role 表
  uint64 permissionId = 3; //权限ID，关联 sys_permission 表
  int64 createTime = 4; //创建时间
  int64 updateTime = 5; //最后修改时间
}

message AddSysRolePermissionReq {
  uint64 roleId = 1; //角色ID，关联 sys_role 表
  uint64 permissionId = 2; //权限ID，关联 sys_permission 表
}

message AddSysRolePermissionResp {
}

message UpdateSysRolePermissionReq {
  uint64 id = 1; //自增主键
  uint64 roleId = 2; //角色ID，关联 sys_role 表
  uint64 permissionId = 3; //权限ID，关联 sys_permission 表
}

message UpdateSysRolePermissionResp {
}

message DelSysRolePermissionReq {
  uint64 id = 1; //id
}

message DelSysRolePermissionResp {
}

message GetSysRolePermissionByIdReq {
  uint64 id = 1; //id
}

message GetSysRolePermissionByIdResp {
  SysRolePermission data = 1; //sysRolePermission
}

message SearchSysRolePermissionReq {
  uint64 page = 1; //page
  uint64 pageSize = 2; //pageSize
  string orderStr = 3; //orderStr
  bool isAsc = 4; //isAsc
  uint64 roleId = 5; //角色ID，关联 sys_role 表
  uint64 permissionId = 6; //权限ID，关联 sys_permission 表
}

message SearchSysRolePermissionResp {
  repeated SysRolePermission data = 1; //sysRolePermission
  uint64 total = 2; //total
}

service SysRolePermissionService {
	//-----------------------角色与权限的关联表----------------------- 
	 rpc AddSysRolePermission(AddSysRolePermissionReq) returns (AddSysRolePermissionResp);
	 rpc UpdateSysRolePermission(UpdateSysRolePermissionReq) returns (UpdateSysRolePermissionResp);
	 rpc DelSysRolePermission(DelSysRolePermissionReq) returns (DelSysRolePermissionResp);
	 rpc GetSysRolePermissionById(GetSysRolePermissionByIdReq) returns (GetSysRolePermissionByIdResp);
	 rpc SearchSysRolePermission(SearchSysRolePermissionReq) returns (SearchSysRolePermissionResp);
}

//--------------------------------账号信息表--------------------------------
message SysUser {
  uint64 id = 1; //自增主键
  string userName = 2; //用户姓名
  string account = 3; //用户账号，唯一标识
  string password = 4; //用户密码，需加密存储
  string icon = 5; //用户头像URL
  string mobile = 6; //用户手机号
  string email = 7; //用户邮箱地址
  string workNumber = 8; //用户工号
  int64 hireDate = 9; //入职日期
  int64 IsResetPassword = 10; //是否需要重置密码,false否true是
  int64 isDisabled = 11; //是否禁用,false否true是
  int64 isLeave = 12; //是否离职,false否true是
  uint64 positionId = 13; //职位ID，关联职位表
  uint64 organizationId = 14; //组织ID，关联组织表
  int64 lastLoginTime = 15; //上次登录时间
  int64 createTime = 16; //创建时间
  int64 updateTime = 17; //最后修改时间
}

message AddSysUserReq {
  string userName = 1; //用户姓名
  string account = 2; //用户账号，唯一标识
  string password = 3; //用户密码，需加密存储
  string icon = 4; //用户头像URL
  string mobile = 5; //用户手机号
  string email = 6; //用户邮箱地址
  string workNumber = 7; //用户工号
  int64 hireDate = 8; //入职日期
  int64 IsResetPassword = 9; //是否需要重置密码,false否true是
  int64 isDisabled = 10; //是否禁用,false否true是
  int64 isLeave = 11; //是否离职,false否true是
  uint64 positionId = 12; //职位ID，关联职位表
  uint64 organizationId = 13; //组织ID，关联组织表
  int64 lastLoginTime = 14; //上次登录时间
}

message AddSysUserResp {
}

message UpdateSysUserReq {
  uint64 id = 1; //自增主键
  string userName = 2; //用户姓名
  string account = 3; //用户账号，唯一标识
  string password = 4; //用户密码，需加密存储
  string icon = 5; //用户头像URL
  string mobile = 6; //用户手机号
  string email = 7; //用户邮箱地址
  string workNumber = 8; //用户工号
  int64 hireDate = 9; //入职日期
  int64 IsResetPassword = 10; //是否需要重置密码,false否true是
  int64 isDisabled = 11; //是否禁用,false否true是
  int64 isLeave = 12; //是否离职,false否true是
  uint64 positionId = 13; //职位ID，关联职位表
  uint64 organizationId = 14; //组织ID，关联组织表
  int64 lastLoginTime = 15; //上次登录时间
}

message UpdateSysUserResp {
}

message DelSysUserReq {
  uint64 id = 1; //id
}

message DelSysUserResp {
}

message GetSysUserByIdReq {
  uint64 id = 1; //id
}

message GetSysUserByIdResp {
  SysUser data = 1; //sysUser
}

message SearchSysUserReq {
  uint64 page = 1; //page
  uint64 pageSize = 2; //pageSize
  string orderStr = 3; //orderStr
  bool isAsc = 4; //isAsc
  string userName = 5; //用户姓名
  string account = 6; //用户账号，唯一标识
  string password = 7; //用户密码，需加密存储
  string icon = 8; //用户头像URL
  string mobile = 9; //用户手机号
  string email = 10; //用户邮箱地址
  string workNumber = 11; //用户工号
  int64 hireDate = 12; //入职日期
  int64 IsResetPassword = 13; //是否需要重置密码,false否true是
  int64 isDisabled = 14; //是否禁用,false否true是
  int64 isLeave = 15; //是否离职,false否true是
  uint64 positionId = 16; //职位ID，关联职位表
  uint64 organizationId = 17; //组织ID，关联组织表
  int64 lastLoginTime = 18; //上次登录时间
}

message SearchSysUserResp {
  repeated SysUser data = 1; //sysUser
  uint64 total = 2; //total
}

service SysUserService {
	//-----------------------账号信息表----------------------- 
	 rpc AddSysUser(AddSysUserReq) returns (AddSysUserResp);
	 rpc UpdateSysUser(UpdateSysUserReq) returns (UpdateSysUserResp);
	 rpc DelSysUser(DelSysUserReq) returns (DelSysUserResp);
	 rpc GetSysUserById(GetSysUserByIdReq) returns (GetSysUserByIdResp);
	 rpc SearchSysUser(SearchSysUserReq) returns (SearchSysUserResp);
}

//--------------------------------用户与角色关联表--------------------------------
message SysUserRole {
  uint64 id = 1; //自增主键
  uint64 userId = 2; //用户ID，关联 sys_user 表
  uint64 roleId = 3; //角色ID，关联 sys_role 表
  int64 createTime = 4; //创建时间
  int64 updateTime = 5; //最后修改时间
}

message AddSysUserRoleReq {
  uint64 userId = 1; //用户ID，关联 sys_user 表
  uint64 roleId = 2; //角色ID，关联 sys_role 表
}

message AddSysUserRoleResp {
}

message UpdateSysUserRoleReq {
  uint64 id = 1; //自增主键
  uint64 userId = 2; //用户ID，关联 sys_user 表
  uint64 roleId = 3; //角色ID，关联 sys_role 表
}

message UpdateSysUserRoleResp {
}

message DelSysUserRoleReq {
  uint64 id = 1; //id
}

message DelSysUserRoleResp {
}

message GetSysUserRoleByIdReq {
  uint64 id = 1; //id
}

message GetSysUserRoleByIdResp {
  SysUserRole data = 1; //sysUserRole
}

message SearchSysUserRoleReq {
  uint64 page = 1; //page
  uint64 pageSize = 2; //pageSize
  string orderStr = 3; //orderStr
  bool isAsc = 4; //isAsc
  uint64 userId = 5; //用户ID，关联 sys_user 表
  uint64 roleId = 6; //角色ID，关联 sys_role 表
}

message SearchSysUserRoleResp {
  repeated SysUserRole data = 1; //sysUserRole
  uint64 total = 2; //total
}

service SysUserRoleService {
	//-----------------------用户与角色关联表----------------------- 
	 rpc AddSysUserRole(AddSysUserRoleReq) returns (AddSysUserRoleResp);
	 rpc UpdateSysUserRole(UpdateSysUserRoleReq) returns (UpdateSysUserRoleResp);
	 rpc DelSysUserRole(DelSysUserRoleReq) returns (DelSysUserRoleResp);
	 rpc GetSysUserRoleById(GetSysUserRoleByIdReq) returns (GetSysUserRoleByIdResp);
	 rpc SearchSysUserRole(SearchSysUserRoleReq) returns (SearchSysUserRoleResp);
}

// ------------------------------------ 
// Enums
// ------------------------------------ 

// 徽标类型 
enum SysMenuBadgeType {
  DOT = 0;
  NORMAL = 1;
}


