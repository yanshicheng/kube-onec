// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.19.4
// source: portal.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 徽标类型 dot|normal
type SysMenuBadgeType int32

const (
	SysMenuBadgeType_M SysMenuBadgeType = 0
)

// Enum value maps for SysMenuBadgeType.
var (
	SysMenuBadgeType_name = map[int32]string{
		0: "M",
	}
	SysMenuBadgeType_value = map[string]int32{
		"M": 0,
	}
)

func (x SysMenuBadgeType) Enum() *SysMenuBadgeType {
	p := new(SysMenuBadgeType)
	*p = x
	return p
}

func (x SysMenuBadgeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SysMenuBadgeType) Descriptor() protoreflect.EnumDescriptor {
	return file_portal_proto_enumTypes[0].Descriptor()
}

func (SysMenuBadgeType) Type() protoreflect.EnumType {
	return &file_portal_proto_enumTypes[0]
}

func (x SysMenuBadgeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SysMenuBadgeType.Descriptor instead.
func (SysMenuBadgeType) EnumDescriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{0}
}

// --------------------------------账号信息表--------------------------------
type SysUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                           //自增主键
	UserName        string `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`                //用户姓名
	Account         string `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`                  //用户账号，唯一标识
	Icon            string `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`                        //用户头像URL
	Mobile          string `protobuf:"bytes,5,opt,name=mobile,proto3" json:"mobile,omitempty"`                    //用户手机号
	Email           string `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`                      //用户邮箱地址
	WorkNumber      string `protobuf:"bytes,7,opt,name=workNumber,proto3" json:"workNumber,omitempty"`            //用户工号
	HireDate        int64  `protobuf:"varint,8,opt,name=hireDate,proto3" json:"hireDate,omitempty"`               //入职日期
	IsResetPassword int64  `protobuf:"varint,9,opt,name=IsResetPassword,proto3" json:"IsResetPassword,omitempty"` //是否需要重置密码，0 否，1 是
	IsDisabled      int64  `protobuf:"varint,10,opt,name=isDisabled,proto3" json:"isDisabled,omitempty"`          //是否禁用，0 否，1 是
	IsLeave         int64  `protobuf:"varint,11,opt,name=isLeave,proto3" json:"isLeave,omitempty"`                //是否离职，0 否，1 是
	PositionId      uint64 `protobuf:"varint,12,opt,name=positionId,proto3" json:"positionId,omitempty"`          //职位ID，关联职位表
	OrganizationId  uint64 `protobuf:"varint,13,opt,name=organizationId,proto3" json:"organizationId,omitempty"`  //组织ID，关联组织表
	LastLoginTime   int64  `protobuf:"varint,14,opt,name=lastLoginTime,proto3" json:"lastLoginTime,omitempty"`    //上次登录时间
	CreatedAt       int64  `protobuf:"varint,15,opt,name=createdAt,proto3" json:"createdAt,omitempty"`            //创建时间
	UpdatedAt       int64  `protobuf:"varint,16,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`            //最后修改时间
}

func (x *SysUser) Reset() {
	*x = SysUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysUser) ProtoMessage() {}

func (x *SysUser) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysUser.ProtoReflect.Descriptor instead.
func (*SysUser) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{0}
}

func (x *SysUser) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysUser) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *SysUser) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *SysUser) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *SysUser) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *SysUser) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SysUser) GetWorkNumber() string {
	if x != nil {
		return x.WorkNumber
	}
	return ""
}

func (x *SysUser) GetHireDate() int64 {
	if x != nil {
		return x.HireDate
	}
	return 0
}

func (x *SysUser) GetIsResetPassword() int64 {
	if x != nil {
		return x.IsResetPassword
	}
	return 0
}

func (x *SysUser) GetIsDisabled() int64 {
	if x != nil {
		return x.IsDisabled
	}
	return 0
}

func (x *SysUser) GetIsLeave() int64 {
	if x != nil {
		return x.IsLeave
	}
	return 0
}

func (x *SysUser) GetPositionId() uint64 {
	if x != nil {
		return x.PositionId
	}
	return 0
}

func (x *SysUser) GetOrganizationId() uint64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

func (x *SysUser) GetLastLoginTime() int64 {
	if x != nil {
		return x.LastLoginTime
	}
	return 0
}

func (x *SysUser) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SysUser) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type AddSysUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName       string `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName,omitempty"`              //用户姓名
	Account        string `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`                //用户账号，唯一标识
	Mobile         string `protobuf:"bytes,3,opt,name=mobile,proto3" json:"mobile,omitempty"`                  //用户手机号
	Email          string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`                    //用户邮箱地址
	WorkNumber     string `protobuf:"bytes,5,opt,name=workNumber,proto3" json:"workNumber,omitempty"`          //用户工号
	HireDate       int64  `protobuf:"varint,6,opt,name=hireDate,proto3" json:"hireDate,omitempty"`             //入职日期
	PositionId     uint64 `protobuf:"varint,7,opt,name=positionId,proto3" json:"positionId,omitempty"`         //职位ID，关联职位表
	OrganizationId uint64 `protobuf:"varint,8,opt,name=organizationId,proto3" json:"organizationId,omitempty"` //组织ID，关联组织表
}

func (x *AddSysUserReq) Reset() {
	*x = AddSysUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSysUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSysUserReq) ProtoMessage() {}

func (x *AddSysUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSysUserReq.ProtoReflect.Descriptor instead.
func (*AddSysUserReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{1}
}

func (x *AddSysUserReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *AddSysUserReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *AddSysUserReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *AddSysUserReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AddSysUserReq) GetWorkNumber() string {
	if x != nil {
		return x.WorkNumber
	}
	return ""
}

func (x *AddSysUserReq) GetHireDate() int64 {
	if x != nil {
		return x.HireDate
	}
	return 0
}

func (x *AddSysUserReq) GetPositionId() uint64 {
	if x != nil {
		return x.PositionId
	}
	return 0
}

func (x *AddSysUserReq) GetOrganizationId() uint64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

type AddSysUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddSysUserResp) Reset() {
	*x = AddSysUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSysUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSysUserResp) ProtoMessage() {}

func (x *AddSysUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSysUserResp.ProtoReflect.Descriptor instead.
func (*AddSysUserResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{2}
}

type UpdateSysUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`            //自增主键
	UserName string `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"` //用户姓名
	Mobile   string `protobuf:"bytes,3,opt,name=mobile,proto3" json:"mobile,omitempty"`     //用户手机号
	Email    string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`       //用户邮箱地址
}

func (x *UpdateSysUserReq) Reset() {
	*x = UpdateSysUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSysUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSysUserReq) ProtoMessage() {}

func (x *UpdateSysUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSysUserReq.ProtoReflect.Descriptor instead.
func (*UpdateSysUserReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateSysUserReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateSysUserReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UpdateSysUserReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *UpdateSysUserReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type UpdateSysUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateSysUserResp) Reset() {
	*x = UpdateSysUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSysUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSysUserResp) ProtoMessage() {}

func (x *UpdateSysUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSysUserResp.ProtoReflect.Descriptor instead.
func (*UpdateSysUserResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{4}
}

type DelSysUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *DelSysUserReq) Reset() {
	*x = DelSysUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelSysUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelSysUserReq) ProtoMessage() {}

func (x *DelSysUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelSysUserReq.ProtoReflect.Descriptor instead.
func (*DelSysUserReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{5}
}

func (x *DelSysUserReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DelSysUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelSysUserResp) Reset() {
	*x = DelSysUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelSysUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelSysUserResp) ProtoMessage() {}

func (x *DelSysUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelSysUserResp.ProtoReflect.Descriptor instead.
func (*DelSysUserResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{6}
}

type GetSysUserByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *GetSysUserByIdReq) Reset() {
	*x = GetSysUserByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSysUserByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSysUserByIdReq) ProtoMessage() {}

func (x *GetSysUserByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSysUserByIdReq.ProtoReflect.Descriptor instead.
func (*GetSysUserByIdReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{7}
}

func (x *GetSysUserByIdReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetSysUserByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *SysUser `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetSysUserByIdResp) Reset() {
	*x = GetSysUserByIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSysUserByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSysUserByIdResp) ProtoMessage() {}

func (x *GetSysUserByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSysUserByIdResp.ProtoReflect.Descriptor instead.
func (*GetSysUserByIdResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{8}
}

func (x *GetSysUserByIdResp) GetData() *SysUser {
	if x != nil {
		return x.Data
	}
	return nil
}

type SearchSysUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page               uint64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`                              //page
	PageSize           uint64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`                      //pageSize
	OrderStr           string `protobuf:"bytes,3,opt,name=orderStr,proto3" json:"orderStr,omitempty"`                       //orderStr
	IsAsc              bool   `protobuf:"varint,4,opt,name=isAsc,proto3" json:"isAsc,omitempty"`                            //isAsc
	UserName           string `protobuf:"bytes,5,opt,name=userName,proto3" json:"userName,omitempty"`                       //用户姓名
	Account            string `protobuf:"bytes,6,opt,name=account,proto3" json:"account,omitempty"`                         //用户账号，唯一标识
	Mobile             string `protobuf:"bytes,7,opt,name=mobile,proto3" json:"mobile,omitempty"`                           //用户手机号
	Email              string `protobuf:"bytes,8,opt,name=email,proto3" json:"email,omitempty"`                             //用户邮箱地址
	WorkNumber         string `protobuf:"bytes,9,opt,name=workNumber,proto3" json:"workNumber,omitempty"`                   //用户工号
	HireDate           int64  `protobuf:"varint,10,opt,name=hireDate,proto3" json:"hireDate,omitempty"`                     //入职日期
	IsDisabled         int64  `protobuf:"varint,11,opt,name=isDisabled,proto3" json:"isDisabled,omitempty"`                 //是否禁用，0 否，1 是
	IsLeave            int64  `protobuf:"varint,12,opt,name=isLeave,proto3" json:"isLeave,omitempty"`                       //是否离职，0 否，1 是
	PositionId         uint64 `protobuf:"varint,13,opt,name=positionId,proto3" json:"positionId,omitempty"`                 //职位ID，关联职位表
	OrganizationId     uint64 `protobuf:"varint,14,opt,name=organizationId,proto3" json:"organizationId,omitempty"`         //组织ID，关联组织表
	StartLastLoginTime int64  `protobuf:"varint,15,opt,name=startLastLoginTime,proto3" json:"startLastLoginTime,omitempty"` //上次登录时间
	EndLastLoginTime   int64  `protobuf:"varint,16,opt,name=EndLastLoginTime,proto3" json:"EndLastLoginTime,omitempty"`     //上次登录时间
}

func (x *SearchSysUserReq) Reset() {
	*x = SearchSysUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSysUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSysUserReq) ProtoMessage() {}

func (x *SearchSysUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSysUserReq.ProtoReflect.Descriptor instead.
func (*SearchSysUserReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{9}
}

func (x *SearchSysUserReq) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchSysUserReq) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *SearchSysUserReq) GetOrderStr() string {
	if x != nil {
		return x.OrderStr
	}
	return ""
}

func (x *SearchSysUserReq) GetIsAsc() bool {
	if x != nil {
		return x.IsAsc
	}
	return false
}

func (x *SearchSysUserReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *SearchSysUserReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *SearchSysUserReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *SearchSysUserReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SearchSysUserReq) GetWorkNumber() string {
	if x != nil {
		return x.WorkNumber
	}
	return ""
}

func (x *SearchSysUserReq) GetHireDate() int64 {
	if x != nil {
		return x.HireDate
	}
	return 0
}

func (x *SearchSysUserReq) GetIsDisabled() int64 {
	if x != nil {
		return x.IsDisabled
	}
	return 0
}

func (x *SearchSysUserReq) GetIsLeave() int64 {
	if x != nil {
		return x.IsLeave
	}
	return 0
}

func (x *SearchSysUserReq) GetPositionId() uint64 {
	if x != nil {
		return x.PositionId
	}
	return 0
}

func (x *SearchSysUserReq) GetOrganizationId() uint64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

func (x *SearchSysUserReq) GetStartLastLoginTime() int64 {
	if x != nil {
		return x.StartLastLoginTime
	}
	return 0
}

func (x *SearchSysUserReq) GetEndLastLoginTime() int64 {
	if x != nil {
		return x.EndLastLoginTime
	}
	return 0
}

type SearchSysUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  []*SysUser `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`    //sysUser
	Total uint64     `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` //total
}

func (x *SearchSysUserResp) Reset() {
	*x = SearchSysUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSysUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSysUserResp) ProtoMessage() {}

func (x *SearchSysUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSysUserResp.ProtoReflect.Descriptor instead.
func (*SearchSysUserResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{10}
}

func (x *SearchSysUserResp) GetData() []*SysUser {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SearchSysUserResp) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ResetPasswordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *ResetPasswordReq) Reset() {
	*x = ResetPasswordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetPasswordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPasswordReq) ProtoMessage() {}

func (x *ResetPasswordReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPasswordReq.ProtoReflect.Descriptor instead.
func (*ResetPasswordReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{11}
}

func (x *ResetPasswordReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ResetPasswordResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResetPasswordResp) Reset() {
	*x = ResetPasswordResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetPasswordResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPasswordResp) ProtoMessage() {}

func (x *ResetPasswordResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPasswordResp.ProtoReflect.Descriptor instead.
func (*ResetPasswordResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{12}
}

// 禁用或者恢复账号
type FrozenAccountsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
	IsDisabled int64  `protobuf:"varint,2,opt,name=isDisabled,proto3" json:"isDisabled,omitempty"`
}

func (x *FrozenAccountsReq) Reset() {
	*x = FrozenAccountsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrozenAccountsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrozenAccountsReq) ProtoMessage() {}

func (x *FrozenAccountsReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrozenAccountsReq.ProtoReflect.Descriptor instead.
func (*FrozenAccountsReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{13}
}

func (x *FrozenAccountsReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FrozenAccountsReq) GetIsDisabled() int64 {
	if x != nil {
		return x.IsDisabled
	}
	return 0
}

type FrozenAccountsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FrozenAccountsResp) Reset() {
	*x = FrozenAccountsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrozenAccountsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrozenAccountsResp) ProtoMessage() {}

func (x *FrozenAccountsResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrozenAccountsResp.ProtoReflect.Descriptor instead.
func (*FrozenAccountsResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{14}
}

type ChangePasswordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                          //id
	OldPassword     string `protobuf:"bytes,2,opt,name=oldPassword,proto3" json:"oldPassword,omitempty"`         //旧密码
	NewPassword     string `protobuf:"bytes,3,opt,name=newPassword,proto3" json:"newPassword,omitempty"`         //新密码
	ConfirmPassword string `protobuf:"bytes,4,opt,name=confirmPassword,proto3" json:"confirmPassword,omitempty"` // 确认密码
}

func (x *ChangePasswordReq) Reset() {
	*x = ChangePasswordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangePasswordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePasswordReq) ProtoMessage() {}

func (x *ChangePasswordReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePasswordReq.ProtoReflect.Descriptor instead.
func (*ChangePasswordReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{15}
}

func (x *ChangePasswordReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ChangePasswordReq) GetOldPassword() string {
	if x != nil {
		return x.OldPassword
	}
	return ""
}

func (x *ChangePasswordReq) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

func (x *ChangePasswordReq) GetConfirmPassword() string {
	if x != nil {
		return x.ConfirmPassword
	}
	return ""
}

type ChangePasswordResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ChangePasswordResp) Reset() {
	*x = ChangePasswordResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangePasswordResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePasswordResp) ProtoMessage() {}

func (x *ChangePasswordResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePasswordResp.ProtoReflect.Descriptor instead.
func (*ChangePasswordResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{16}
}

type UpdateGlobalSysUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                         //自增主键
	UserName       string `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`              //用户姓名
	Mobile         string `protobuf:"bytes,3,opt,name=mobile,proto3" json:"mobile,omitempty"`                  //用户手机号
	Email          string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`                    //用户邮箱地址
	WorkNumber     string `protobuf:"bytes,5,opt,name=workNumber,proto3" json:"workNumber,omitempty"`          //用户工号
	HireDate       int64  `protobuf:"varint,6,opt,name=hireDate,proto3" json:"hireDate,omitempty"`             //入职日期
	PositionId     uint64 `protobuf:"varint,7,opt,name=positionId,proto3" json:"positionId,omitempty"`         //职位ID，关联职位表
	OrganizationId uint64 `protobuf:"varint,8,opt,name=organizationId,proto3" json:"organizationId,omitempty"` //组织ID，关联组织表
}

func (x *UpdateGlobalSysUserReq) Reset() {
	*x = UpdateGlobalSysUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGlobalSysUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGlobalSysUserReq) ProtoMessage() {}

func (x *UpdateGlobalSysUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGlobalSysUserReq.ProtoReflect.Descriptor instead.
func (*UpdateGlobalSysUserReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateGlobalSysUserReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateGlobalSysUserReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UpdateGlobalSysUserReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *UpdateGlobalSysUserReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateGlobalSysUserReq) GetWorkNumber() string {
	if x != nil {
		return x.WorkNumber
	}
	return ""
}

func (x *UpdateGlobalSysUserReq) GetHireDate() int64 {
	if x != nil {
		return x.HireDate
	}
	return 0
}

func (x *UpdateGlobalSysUserReq) GetPositionId() uint64 {
	if x != nil {
		return x.PositionId
	}
	return 0
}

func (x *UpdateGlobalSysUserReq) GetOrganizationId() uint64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

type UpdateGlobalSysUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateGlobalSysUserResp) Reset() {
	*x = UpdateGlobalSysUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGlobalSysUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGlobalSysUserResp) ProtoMessage() {}

func (x *UpdateGlobalSysUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGlobalSysUserResp.ProtoReflect.Descriptor instead.
func (*UpdateGlobalSysUserResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{18}
}

// 离职message
type LeaveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *LeaveReq) Reset() {
	*x = LeaveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveReq) ProtoMessage() {}

func (x *LeaveReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveReq.ProtoReflect.Descriptor instead.
func (*LeaveReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{19}
}

func (x *LeaveReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type LeaveResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LeaveResp) Reset() {
	*x = LeaveResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveResp) ProtoMessage() {}

func (x *LeaveResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveResp.ProtoReflect.Descriptor instead.
func (*LeaveResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{20}
}

// 用户绑定角色
type BindRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                  //id
	RoleIds []uint64 `protobuf:"varint,2,rep,packed,name=roleIds,proto3" json:"roleIds,omitempty"` //角色ID数组
}

func (x *BindRoleReq) Reset() {
	*x = BindRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindRoleReq) ProtoMessage() {}

func (x *BindRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindRoleReq.ProtoReflect.Descriptor instead.
func (*BindRoleReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{21}
}

func (x *BindRoleReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BindRoleReq) GetRoleIds() []uint64 {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

type BindRoleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BindRoleResp) Reset() {
	*x = BindRoleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindRoleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindRoleResp) ProtoMessage() {}

func (x *BindRoleResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindRoleResp.ProtoReflect.Descriptor instead.
func (*BindRoleResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{22}
}

// 通过用户ID查询角色
type GetRoleByUserIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *GetRoleByUserIdReq) Reset() {
	*x = GetRoleByUserIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleByUserIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleByUserIdReq) ProtoMessage() {}

func (x *GetRoleByUserIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleByUserIdReq.ProtoReflect.Descriptor instead.
func (*GetRoleByUserIdReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{23}
}

func (x *GetRoleByUserIdReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetRoleByUserIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleIds   []uint64 `protobuf:"varint,1,rep,packed,name=roleIds,proto3" json:"roleIds,omitempty"` //roleIds
	RoleNames []string `protobuf:"bytes,2,rep,name=roleNames,proto3" json:"roleNames,omitempty"`
}

func (x *GetRoleByUserIdResp) Reset() {
	*x = GetRoleByUserIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleByUserIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleByUserIdResp) ProtoMessage() {}

func (x *GetRoleByUserIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleByUserIdResp.ProtoReflect.Descriptor instead.
func (*GetRoleByUserIdResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{24}
}

func (x *GetRoleByUserIdResp) GetRoleIds() []uint64 {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

func (x *GetRoleByUserIdResp) GetRoleNames() []string {
	if x != nil {
		return x.RoleNames
	}
	return nil
}

// 用户详情
type GetUserInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"` //id
}

func (x *GetUserInfoReq) Reset() {
	*x = GetUserInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoReq) ProtoMessage() {}

func (x *GetUserInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoReq.ProtoReflect.Descriptor instead.
func (*GetUserInfoReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{25}
}

func (x *GetUserInfoReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

type GetUserInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                //自增主键
	UserName         string   `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`     //用户姓名
	Account          string   `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`       //用户账号，唯一标识
	Icon             string   `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`             //用户头像URL
	Mobile           string   `protobuf:"bytes,5,opt,name=mobile,proto3" json:"mobile,omitempty"`         //用户手机号
	Email            string   `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`           //用户邮箱地址
	WorkNumber       string   `protobuf:"bytes,7,opt,name=workNumber,proto3" json:"workNumber,omitempty"` //用户工号
	HireDate         int64    `protobuf:"varint,8,opt,name=hireDate,proto3" json:"hireDate,omitempty"`    //入职日期
	PositionName     string   `protobuf:"bytes,9,opt,name=positionName,proto3" json:"positionName,omitempty"`
	OrganizationName string   `protobuf:"bytes,10,opt,name=organizationName,proto3" json:"organizationName,omitempty"`
	RoleNames        []string `protobuf:"bytes,11,rep,name=roleNames,proto3" json:"roleNames,omitempty"`
	LastLoginTime    int64    `protobuf:"varint,12,opt,name=lastLoginTime,proto3" json:"lastLoginTime,omitempty"` //上次登录时间
	CreatedAt        int64    `protobuf:"varint,13,opt,name=createdAt,proto3" json:"createdAt,omitempty"`         //创建时间
	UpdatedAt        int64    `protobuf:"varint,14,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`         //最后修改时间
}

func (x *GetUserInfoResp) Reset() {
	*x = GetUserInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoResp) ProtoMessage() {}

func (x *GetUserInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoResp.ProtoReflect.Descriptor instead.
func (*GetUserInfoResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{26}
}

func (x *GetUserInfoResp) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetUserInfoResp) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *GetUserInfoResp) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *GetUserInfoResp) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *GetUserInfoResp) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *GetUserInfoResp) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetUserInfoResp) GetWorkNumber() string {
	if x != nil {
		return x.WorkNumber
	}
	return ""
}

func (x *GetUserInfoResp) GetHireDate() int64 {
	if x != nil {
		return x.HireDate
	}
	return 0
}

func (x *GetUserInfoResp) GetPositionName() string {
	if x != nil {
		return x.PositionName
	}
	return ""
}

func (x *GetUserInfoResp) GetOrganizationName() string {
	if x != nil {
		return x.OrganizationName
	}
	return ""
}

func (x *GetUserInfoResp) GetRoleNames() []string {
	if x != nil {
		return x.RoleNames
	}
	return nil
}

func (x *GetUserInfoResp) GetLastLoginTime() int64 {
	if x != nil {
		return x.LastLoginTime
	}
	return 0
}

func (x *GetUserInfoResp) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *GetUserInfoResp) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

// 修改头像
type UpdateIconReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`    //id
	Icon string `protobuf:"bytes,2,opt,name=icon,proto3" json:"icon,omitempty"` //icon
}

func (x *UpdateIconReq) Reset() {
	*x = UpdateIconReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIconReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIconReq) ProtoMessage() {}

func (x *UpdateIconReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIconReq.ProtoReflect.Descriptor instead.
func (*UpdateIconReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{27}
}

func (x *UpdateIconReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateIconReq) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type UpdateIconResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateIconResp) Reset() {
	*x = UpdateIconResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIconResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIconResp) ProtoMessage() {}

func (x *UpdateIconResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIconResp.ProtoReflect.Descriptor instead.
func (*UpdateIconResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{28}
}

// --------------------------------菜单表--------------------------------
type SysMenu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                       uint64           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                              //主键ID
	Component                string           `protobuf:"bytes,2,opt,name=component,proto3" json:"component,omitempty"`                                 //组件名称
	Name                     string           `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                                           //菜单名称
	Path                     string           `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`                                           //路由路径
	Redirect                 string           `protobuf:"bytes,5,opt,name=redirect,proto3" json:"redirect,omitempty"`                                   //重定向路径
	ParentId                 uint64           `protobuf:"varint,6,opt,name=parentId,proto3" json:"parentId,omitempty"`                                  //父级ID
	Type                     int64            `protobuf:"varint,7,opt,name=type,proto3" json:"type,omitempty"`                                          //类型（1. 目录，2. 菜单，3. 按钮）
	IsEnable                 int64            `protobuf:"varint,8,opt,name=isEnable,proto3" json:"isEnable,omitempty"`                                  //是否启用（0. 禁用，1. 启用）
	Code                     string           `protobuf:"bytes,9,opt,name=code,proto3" json:"code,omitempty"`                                           //权限码
	ActiveIcon               string           `protobuf:"bytes,10,opt,name=activeIcon,proto3" json:"activeIcon,omitempty"`                              //激活图标
	ActivePath               string           `protobuf:"bytes,11,opt,name=activePath,proto3" json:"activePath,omitempty"`                              //当前激活的菜单路径
	AffixTab                 int64            `protobuf:"varint,12,opt,name=affixTab,proto3" json:"affixTab,omitempty"`                                 //是否固定标签页
	AffixTabOrder            int64            `protobuf:"varint,13,opt,name=affixTabOrder,proto3" json:"affixTabOrder,omitempty"`                       //固定标签页的顺序
	Badge                    string           `protobuf:"bytes,14,opt,name=badge,proto3" json:"badge,omitempty"`                                        //徽标
	BadgeType                SysMenuBadgeType `protobuf:"varint,15,opt,name=badgeType,proto3,enum=pb.SysMenuBadgeType" json:"badgeType,omitempty"`      //徽标类型
	BadgeVariants            string           `protobuf:"bytes,16,opt,name=badgeVariants,proto3" json:"badgeVariants,omitempty"`                        //徽标颜色
	HideChildrenInMenu       int64            `protobuf:"varint,17,opt,name=hideChildrenInMenu,proto3" json:"hideChildrenInMenu,omitempty"`             //当前路由的子级在菜单中不展现
	HideInBreadcrumb         int64            `protobuf:"varint,18,opt,name=hideInBreadcrumb,proto3" json:"hideInBreadcrumb,omitempty"`                 //当前路由在面包屑中不展现
	HideInMenu               int64            `protobuf:"varint,19,opt,name=hideInMenu,proto3" json:"hideInMenu,omitempty"`                             //当前路由在菜单中不展现
	HideInTab                int64            `protobuf:"varint,20,opt,name=hideInTab,proto3" json:"hideInTab,omitempty"`                               //当前路由在标签页不展现
	Icon                     string           `protobuf:"bytes,21,opt,name=icon,proto3" json:"icon,omitempty"`                                          //图标
	IframeSrc                string           `protobuf:"bytes,22,opt,name=iframeSrc,proto3" json:"iframeSrc,omitempty"`                                //iframe地址
	IgnoreAccess             int64            `protobuf:"varint,23,opt,name=ignoreAccess,proto3" json:"ignoreAccess,omitempty"`                         //忽略权限，直接可以访问
	KeepAlive                int64            `protobuf:"varint,24,opt,name=keepAlive,proto3" json:"keepAlive,omitempty"`                               //开启KeepAlive缓存
	Link                     string           `protobuf:"bytes,25,opt,name=link,proto3" json:"link,omitempty"`                                          //外链-跳转路径
	Loaded                   int64            `protobuf:"varint,26,opt,name=loaded,proto3" json:"loaded,omitempty"`                                     //路由是否已经加载过
	MaxNumOfOpenTab          int64            `protobuf:"varint,27,opt,name=maxNumOfOpenTab,proto3" json:"maxNumOfOpenTab,omitempty"`                   //标签页最大打开数量
	MenuVisibleWithForbidden int64            `protobuf:"varint,28,opt,name=menuVisibleWithForbidden,proto3" json:"menuVisibleWithForbidden,omitempty"` //菜单可以看到，但是访问会被重定向到403
	OpenInNewWindow          int64            `protobuf:"varint,29,opt,name=openInNewWindow,proto3" json:"openInNewWindow,omitempty"`                   //在新窗口打开
	OrderNum                 int64            `protobuf:"varint,30,opt,name=orderNum,proto3" json:"orderNum,omitempty"`                                 //用于路由->菜单排序
	Query                    string           `protobuf:"bytes,31,opt,name=query,proto3" json:"query,omitempty"`                                        //菜单所携带的参数
	Title                    string           `protobuf:"bytes,32,opt,name=title,proto3" json:"title,omitempty"`                                        //标题名称
}

func (x *SysMenu) Reset() {
	*x = SysMenu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysMenu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysMenu) ProtoMessage() {}

func (x *SysMenu) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysMenu.ProtoReflect.Descriptor instead.
func (*SysMenu) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{29}
}

func (x *SysMenu) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysMenu) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *SysMenu) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SysMenu) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SysMenu) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *SysMenu) GetParentId() uint64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *SysMenu) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *SysMenu) GetIsEnable() int64 {
	if x != nil {
		return x.IsEnable
	}
	return 0
}

func (x *SysMenu) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SysMenu) GetActiveIcon() string {
	if x != nil {
		return x.ActiveIcon
	}
	return ""
}

func (x *SysMenu) GetActivePath() string {
	if x != nil {
		return x.ActivePath
	}
	return ""
}

func (x *SysMenu) GetAffixTab() int64 {
	if x != nil {
		return x.AffixTab
	}
	return 0
}

func (x *SysMenu) GetAffixTabOrder() int64 {
	if x != nil {
		return x.AffixTabOrder
	}
	return 0
}

func (x *SysMenu) GetBadge() string {
	if x != nil {
		return x.Badge
	}
	return ""
}

func (x *SysMenu) GetBadgeType() SysMenuBadgeType {
	if x != nil {
		return x.BadgeType
	}
	return SysMenuBadgeType_M
}

func (x *SysMenu) GetBadgeVariants() string {
	if x != nil {
		return x.BadgeVariants
	}
	return ""
}

func (x *SysMenu) GetHideChildrenInMenu() int64 {
	if x != nil {
		return x.HideChildrenInMenu
	}
	return 0
}

func (x *SysMenu) GetHideInBreadcrumb() int64 {
	if x != nil {
		return x.HideInBreadcrumb
	}
	return 0
}

func (x *SysMenu) GetHideInMenu() int64 {
	if x != nil {
		return x.HideInMenu
	}
	return 0
}

func (x *SysMenu) GetHideInTab() int64 {
	if x != nil {
		return x.HideInTab
	}
	return 0
}

func (x *SysMenu) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *SysMenu) GetIframeSrc() string {
	if x != nil {
		return x.IframeSrc
	}
	return ""
}

func (x *SysMenu) GetIgnoreAccess() int64 {
	if x != nil {
		return x.IgnoreAccess
	}
	return 0
}

func (x *SysMenu) GetKeepAlive() int64 {
	if x != nil {
		return x.KeepAlive
	}
	return 0
}

func (x *SysMenu) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *SysMenu) GetLoaded() int64 {
	if x != nil {
		return x.Loaded
	}
	return 0
}

func (x *SysMenu) GetMaxNumOfOpenTab() int64 {
	if x != nil {
		return x.MaxNumOfOpenTab
	}
	return 0
}

func (x *SysMenu) GetMenuVisibleWithForbidden() int64 {
	if x != nil {
		return x.MenuVisibleWithForbidden
	}
	return 0
}

func (x *SysMenu) GetOpenInNewWindow() int64 {
	if x != nil {
		return x.OpenInNewWindow
	}
	return 0
}

func (x *SysMenu) GetOrderNum() int64 {
	if x != nil {
		return x.OrderNum
	}
	return 0
}

func (x *SysMenu) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SysMenu) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type AddSysMenuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Component                string           `protobuf:"bytes,1,opt,name=component,proto3" json:"component,omitempty"`                                 //组件名称
	Name                     string           `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                           //菜单名称
	Path                     string           `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`                                           //路由路径
	Redirect                 string           `protobuf:"bytes,4,opt,name=redirect,proto3" json:"redirect,omitempty"`                                   //重定向路径
	ParentId                 uint64           `protobuf:"varint,5,opt,name=parentId,proto3" json:"parentId,omitempty"`                                  //父级ID
	Type                     int64            `protobuf:"varint,6,opt,name=type,proto3" json:"type,omitempty"`                                          //类型（1. 目录，2. 菜单，3. 按钮）
	IsEnable                 int64            `protobuf:"varint,7,opt,name=isEnable,proto3" json:"isEnable,omitempty"`                                  //是否启用（0. 禁用，1. 启用）
	Code                     string           `protobuf:"bytes,8,opt,name=code,proto3" json:"code,omitempty"`                                           //权限码
	ActiveIcon               string           `protobuf:"bytes,9,opt,name=activeIcon,proto3" json:"activeIcon,omitempty"`                               //激活图标
	ActivePath               string           `protobuf:"bytes,10,opt,name=activePath,proto3" json:"activePath,omitempty"`                              //当前激活的菜单路径
	AffixTab                 int64            `protobuf:"varint,11,opt,name=affixTab,proto3" json:"affixTab,omitempty"`                                 //是否固定标签页
	AffixTabOrder            int64            `protobuf:"varint,12,opt,name=affixTabOrder,proto3" json:"affixTabOrder,omitempty"`                       //固定标签页的顺序
	Badge                    string           `protobuf:"bytes,13,opt,name=badge,proto3" json:"badge,omitempty"`                                        //徽标
	BadgeType                SysMenuBadgeType `protobuf:"varint,14,opt,name=badgeType,proto3,enum=pb.SysMenuBadgeType" json:"badgeType,omitempty"`      //徽标类型
	BadgeVariants            string           `protobuf:"bytes,15,opt,name=badgeVariants,proto3" json:"badgeVariants,omitempty"`                        //徽标颜色
	HideChildrenInMenu       int64            `protobuf:"varint,16,opt,name=hideChildrenInMenu,proto3" json:"hideChildrenInMenu,omitempty"`             //当前路由的子级在菜单中不展现
	HideInBreadcrumb         int64            `protobuf:"varint,17,opt,name=hideInBreadcrumb,proto3" json:"hideInBreadcrumb,omitempty"`                 //当前路由在面包屑中不展现
	HideInMenu               int64            `protobuf:"varint,18,opt,name=hideInMenu,proto3" json:"hideInMenu,omitempty"`                             //当前路由在菜单中不展现
	HideInTab                int64            `protobuf:"varint,19,opt,name=hideInTab,proto3" json:"hideInTab,omitempty"`                               //当前路由在标签页不展现
	Icon                     string           `protobuf:"bytes,20,opt,name=icon,proto3" json:"icon,omitempty"`                                          //图标
	IframeSrc                string           `protobuf:"bytes,21,opt,name=iframeSrc,proto3" json:"iframeSrc,omitempty"`                                //iframe地址
	IgnoreAccess             int64            `protobuf:"varint,22,opt,name=ignoreAccess,proto3" json:"ignoreAccess,omitempty"`                         //忽略权限，直接可以访问
	KeepAlive                int64            `protobuf:"varint,23,opt,name=keepAlive,proto3" json:"keepAlive,omitempty"`                               //开启KeepAlive缓存
	Link                     string           `protobuf:"bytes,24,opt,name=link,proto3" json:"link,omitempty"`                                          //外链-跳转路径
	Loaded                   int64            `protobuf:"varint,25,opt,name=loaded,proto3" json:"loaded,omitempty"`                                     //路由是否已经加载过
	MaxNumOfOpenTab          int64            `protobuf:"varint,26,opt,name=maxNumOfOpenTab,proto3" json:"maxNumOfOpenTab,omitempty"`                   //标签页最大打开数量
	MenuVisibleWithForbidden int64            `protobuf:"varint,27,opt,name=menuVisibleWithForbidden,proto3" json:"menuVisibleWithForbidden,omitempty"` //菜单可以看到，但是访问会被重定向到403
	OpenInNewWindow          int64            `protobuf:"varint,28,opt,name=openInNewWindow,proto3" json:"openInNewWindow,omitempty"`                   //在新窗口打开
	OrderNum                 int64            `protobuf:"varint,29,opt,name=orderNum,proto3" json:"orderNum,omitempty"`                                 //用于路由->菜单排序
	Query                    string           `protobuf:"bytes,30,opt,name=query,proto3" json:"query,omitempty"`                                        //菜单所携带的参数
	Title                    string           `protobuf:"bytes,31,opt,name=title,proto3" json:"title,omitempty"`                                        //标题名称
}

func (x *AddSysMenuReq) Reset() {
	*x = AddSysMenuReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSysMenuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSysMenuReq) ProtoMessage() {}

func (x *AddSysMenuReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSysMenuReq.ProtoReflect.Descriptor instead.
func (*AddSysMenuReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{30}
}

func (x *AddSysMenuReq) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *AddSysMenuReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddSysMenuReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *AddSysMenuReq) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *AddSysMenuReq) GetParentId() uint64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *AddSysMenuReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *AddSysMenuReq) GetIsEnable() int64 {
	if x != nil {
		return x.IsEnable
	}
	return 0
}

func (x *AddSysMenuReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AddSysMenuReq) GetActiveIcon() string {
	if x != nil {
		return x.ActiveIcon
	}
	return ""
}

func (x *AddSysMenuReq) GetActivePath() string {
	if x != nil {
		return x.ActivePath
	}
	return ""
}

func (x *AddSysMenuReq) GetAffixTab() int64 {
	if x != nil {
		return x.AffixTab
	}
	return 0
}

func (x *AddSysMenuReq) GetAffixTabOrder() int64 {
	if x != nil {
		return x.AffixTabOrder
	}
	return 0
}

func (x *AddSysMenuReq) GetBadge() string {
	if x != nil {
		return x.Badge
	}
	return ""
}

func (x *AddSysMenuReq) GetBadgeType() SysMenuBadgeType {
	if x != nil {
		return x.BadgeType
	}
	return SysMenuBadgeType_M
}

func (x *AddSysMenuReq) GetBadgeVariants() string {
	if x != nil {
		return x.BadgeVariants
	}
	return ""
}

func (x *AddSysMenuReq) GetHideChildrenInMenu() int64 {
	if x != nil {
		return x.HideChildrenInMenu
	}
	return 0
}

func (x *AddSysMenuReq) GetHideInBreadcrumb() int64 {
	if x != nil {
		return x.HideInBreadcrumb
	}
	return 0
}

func (x *AddSysMenuReq) GetHideInMenu() int64 {
	if x != nil {
		return x.HideInMenu
	}
	return 0
}

func (x *AddSysMenuReq) GetHideInTab() int64 {
	if x != nil {
		return x.HideInTab
	}
	return 0
}

func (x *AddSysMenuReq) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *AddSysMenuReq) GetIframeSrc() string {
	if x != nil {
		return x.IframeSrc
	}
	return ""
}

func (x *AddSysMenuReq) GetIgnoreAccess() int64 {
	if x != nil {
		return x.IgnoreAccess
	}
	return 0
}

func (x *AddSysMenuReq) GetKeepAlive() int64 {
	if x != nil {
		return x.KeepAlive
	}
	return 0
}

func (x *AddSysMenuReq) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *AddSysMenuReq) GetLoaded() int64 {
	if x != nil {
		return x.Loaded
	}
	return 0
}

func (x *AddSysMenuReq) GetMaxNumOfOpenTab() int64 {
	if x != nil {
		return x.MaxNumOfOpenTab
	}
	return 0
}

func (x *AddSysMenuReq) GetMenuVisibleWithForbidden() int64 {
	if x != nil {
		return x.MenuVisibleWithForbidden
	}
	return 0
}

func (x *AddSysMenuReq) GetOpenInNewWindow() int64 {
	if x != nil {
		return x.OpenInNewWindow
	}
	return 0
}

func (x *AddSysMenuReq) GetOrderNum() int64 {
	if x != nil {
		return x.OrderNum
	}
	return 0
}

func (x *AddSysMenuReq) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *AddSysMenuReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type AddSysMenuResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddSysMenuResp) Reset() {
	*x = AddSysMenuResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSysMenuResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSysMenuResp) ProtoMessage() {}

func (x *AddSysMenuResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSysMenuResp.ProtoReflect.Descriptor instead.
func (*AddSysMenuResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{31}
}

type UpdateSysMenuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                       uint64           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                              //主键ID
	Component                string           `protobuf:"bytes,2,opt,name=component,proto3" json:"component,omitempty"`                                 //组件名称
	Name                     string           `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                                           //菜单名称
	Path                     string           `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`                                           //路由路径
	Redirect                 string           `protobuf:"bytes,5,opt,name=redirect,proto3" json:"redirect,omitempty"`                                   //重定向路径
	ParentId                 uint64           `protobuf:"varint,6,opt,name=parentId,proto3" json:"parentId,omitempty"`                                  //父级ID
	Type                     int64            `protobuf:"varint,7,opt,name=type,proto3" json:"type,omitempty"`                                          //类型（1. 目录，2. 菜单，3. 按钮）
	IsEnable                 int64            `protobuf:"varint,8,opt,name=isEnable,proto3" json:"isEnable,omitempty"`                                  //是否启用（0. 禁用，1. 启用）
	Code                     string           `protobuf:"bytes,9,opt,name=code,proto3" json:"code,omitempty"`                                           //权限码
	ActiveIcon               string           `protobuf:"bytes,10,opt,name=activeIcon,proto3" json:"activeIcon,omitempty"`                              //激活图标
	ActivePath               string           `protobuf:"bytes,11,opt,name=activePath,proto3" json:"activePath,omitempty"`                              //当前激活的菜单路径
	AffixTab                 int64            `protobuf:"varint,12,opt,name=affixTab,proto3" json:"affixTab,omitempty"`                                 //是否固定标签页
	AffixTabOrder            int64            `protobuf:"varint,13,opt,name=affixTabOrder,proto3" json:"affixTabOrder,omitempty"`                       //固定标签页的顺序
	Badge                    string           `protobuf:"bytes,14,opt,name=badge,proto3" json:"badge,omitempty"`                                        //徽标
	BadgeType                SysMenuBadgeType `protobuf:"varint,15,opt,name=badgeType,proto3,enum=pb.SysMenuBadgeType" json:"badgeType,omitempty"`      //徽标类型
	BadgeVariants            string           `protobuf:"bytes,16,opt,name=badgeVariants,proto3" json:"badgeVariants,omitempty"`                        //徽标颜色
	HideChildrenInMenu       int64            `protobuf:"varint,17,opt,name=hideChildrenInMenu,proto3" json:"hideChildrenInMenu,omitempty"`             //当前路由的子级在菜单中不展现
	HideInBreadcrumb         int64            `protobuf:"varint,18,opt,name=hideInBreadcrumb,proto3" json:"hideInBreadcrumb,omitempty"`                 //当前路由在面包屑中不展现
	HideInMenu               int64            `protobuf:"varint,19,opt,name=hideInMenu,proto3" json:"hideInMenu,omitempty"`                             //当前路由在菜单中不展现
	HideInTab                int64            `protobuf:"varint,20,opt,name=hideInTab,proto3" json:"hideInTab,omitempty"`                               //当前路由在标签页不展现
	Icon                     string           `protobuf:"bytes,21,opt,name=icon,proto3" json:"icon,omitempty"`                                          //图标
	IframeSrc                string           `protobuf:"bytes,22,opt,name=iframeSrc,proto3" json:"iframeSrc,omitempty"`                                //iframe地址
	IgnoreAccess             int64            `protobuf:"varint,23,opt,name=ignoreAccess,proto3" json:"ignoreAccess,omitempty"`                         //忽略权限，直接可以访问
	KeepAlive                int64            `protobuf:"varint,24,opt,name=keepAlive,proto3" json:"keepAlive,omitempty"`                               //开启KeepAlive缓存
	Link                     string           `protobuf:"bytes,25,opt,name=link,proto3" json:"link,omitempty"`                                          //外链-跳转路径
	Loaded                   int64            `protobuf:"varint,26,opt,name=loaded,proto3" json:"loaded,omitempty"`                                     //路由是否已经加载过
	MaxNumOfOpenTab          int64            `protobuf:"varint,27,opt,name=maxNumOfOpenTab,proto3" json:"maxNumOfOpenTab,omitempty"`                   //标签页最大打开数量
	MenuVisibleWithForbidden int64            `protobuf:"varint,28,opt,name=menuVisibleWithForbidden,proto3" json:"menuVisibleWithForbidden,omitempty"` //菜单可以看到，但是访问会被重定向到403
	OpenInNewWindow          int64            `protobuf:"varint,29,opt,name=openInNewWindow,proto3" json:"openInNewWindow,omitempty"`                   //在新窗口打开
	OrderNum                 int64            `protobuf:"varint,30,opt,name=orderNum,proto3" json:"orderNum,omitempty"`                                 //用于路由->菜单排序
	Query                    string           `protobuf:"bytes,31,opt,name=query,proto3" json:"query,omitempty"`                                        //菜单所携带的参数
	Title                    string           `protobuf:"bytes,32,opt,name=title,proto3" json:"title,omitempty"`                                        //标题名称
}

func (x *UpdateSysMenuReq) Reset() {
	*x = UpdateSysMenuReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSysMenuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSysMenuReq) ProtoMessage() {}

func (x *UpdateSysMenuReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSysMenuReq.ProtoReflect.Descriptor instead.
func (*UpdateSysMenuReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{32}
}

func (x *UpdateSysMenuReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateSysMenuReq) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *UpdateSysMenuReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateSysMenuReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *UpdateSysMenuReq) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *UpdateSysMenuReq) GetParentId() uint64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *UpdateSysMenuReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UpdateSysMenuReq) GetIsEnable() int64 {
	if x != nil {
		return x.IsEnable
	}
	return 0
}

func (x *UpdateSysMenuReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UpdateSysMenuReq) GetActiveIcon() string {
	if x != nil {
		return x.ActiveIcon
	}
	return ""
}

func (x *UpdateSysMenuReq) GetActivePath() string {
	if x != nil {
		return x.ActivePath
	}
	return ""
}

func (x *UpdateSysMenuReq) GetAffixTab() int64 {
	if x != nil {
		return x.AffixTab
	}
	return 0
}

func (x *UpdateSysMenuReq) GetAffixTabOrder() int64 {
	if x != nil {
		return x.AffixTabOrder
	}
	return 0
}

func (x *UpdateSysMenuReq) GetBadge() string {
	if x != nil {
		return x.Badge
	}
	return ""
}

func (x *UpdateSysMenuReq) GetBadgeType() SysMenuBadgeType {
	if x != nil {
		return x.BadgeType
	}
	return SysMenuBadgeType_M
}

func (x *UpdateSysMenuReq) GetBadgeVariants() string {
	if x != nil {
		return x.BadgeVariants
	}
	return ""
}

func (x *UpdateSysMenuReq) GetHideChildrenInMenu() int64 {
	if x != nil {
		return x.HideChildrenInMenu
	}
	return 0
}

func (x *UpdateSysMenuReq) GetHideInBreadcrumb() int64 {
	if x != nil {
		return x.HideInBreadcrumb
	}
	return 0
}

func (x *UpdateSysMenuReq) GetHideInMenu() int64 {
	if x != nil {
		return x.HideInMenu
	}
	return 0
}

func (x *UpdateSysMenuReq) GetHideInTab() int64 {
	if x != nil {
		return x.HideInTab
	}
	return 0
}

func (x *UpdateSysMenuReq) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *UpdateSysMenuReq) GetIframeSrc() string {
	if x != nil {
		return x.IframeSrc
	}
	return ""
}

func (x *UpdateSysMenuReq) GetIgnoreAccess() int64 {
	if x != nil {
		return x.IgnoreAccess
	}
	return 0
}

func (x *UpdateSysMenuReq) GetKeepAlive() int64 {
	if x != nil {
		return x.KeepAlive
	}
	return 0
}

func (x *UpdateSysMenuReq) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *UpdateSysMenuReq) GetLoaded() int64 {
	if x != nil {
		return x.Loaded
	}
	return 0
}

func (x *UpdateSysMenuReq) GetMaxNumOfOpenTab() int64 {
	if x != nil {
		return x.MaxNumOfOpenTab
	}
	return 0
}

func (x *UpdateSysMenuReq) GetMenuVisibleWithForbidden() int64 {
	if x != nil {
		return x.MenuVisibleWithForbidden
	}
	return 0
}

func (x *UpdateSysMenuReq) GetOpenInNewWindow() int64 {
	if x != nil {
		return x.OpenInNewWindow
	}
	return 0
}

func (x *UpdateSysMenuReq) GetOrderNum() int64 {
	if x != nil {
		return x.OrderNum
	}
	return 0
}

func (x *UpdateSysMenuReq) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *UpdateSysMenuReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type UpdateSysMenuResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateSysMenuResp) Reset() {
	*x = UpdateSysMenuResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSysMenuResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSysMenuResp) ProtoMessage() {}

func (x *UpdateSysMenuResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSysMenuResp.ProtoReflect.Descriptor instead.
func (*UpdateSysMenuResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{33}
}

type DelSysMenuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *DelSysMenuReq) Reset() {
	*x = DelSysMenuReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelSysMenuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelSysMenuReq) ProtoMessage() {}

func (x *DelSysMenuReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelSysMenuReq.ProtoReflect.Descriptor instead.
func (*DelSysMenuReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{34}
}

func (x *DelSysMenuReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DelSysMenuResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelSysMenuResp) Reset() {
	*x = DelSysMenuResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelSysMenuResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelSysMenuResp) ProtoMessage() {}

func (x *DelSysMenuResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelSysMenuResp.ProtoReflect.Descriptor instead.
func (*DelSysMenuResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{35}
}

type GetSysMenuByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *GetSysMenuByIdReq) Reset() {
	*x = GetSysMenuByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSysMenuByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSysMenuByIdReq) ProtoMessage() {}

func (x *GetSysMenuByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSysMenuByIdReq.ProtoReflect.Descriptor instead.
func (*GetSysMenuByIdReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{36}
}

func (x *GetSysMenuByIdReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetSysMenuByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *SysMenu `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"` //sysMenu
}

func (x *GetSysMenuByIdResp) Reset() {
	*x = GetSysMenuByIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSysMenuByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSysMenuByIdResp) ProtoMessage() {}

func (x *GetSysMenuByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSysMenuByIdResp.ProtoReflect.Descriptor instead.
func (*GetSysMenuByIdResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{37}
}

func (x *GetSysMenuByIdResp) GetData() *SysMenu {
	if x != nil {
		return x.Data
	}
	return nil
}

type SearchSysMenuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page                     uint64           `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`                                          //page
	PageSize                 uint64           `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`                                  //pageSize
	OrderStr                 string           `protobuf:"bytes,3,opt,name=orderStr,proto3" json:"orderStr,omitempty"`                                   //orderStr
	IsAsc                    bool             `protobuf:"varint,4,opt,name=isAsc,proto3" json:"isAsc,omitempty"`                                        //isAsc
	Component                string           `protobuf:"bytes,5,opt,name=component,proto3" json:"component,omitempty"`                                 //组件名称
	Name                     string           `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`                                           //菜单名称
	Path                     string           `protobuf:"bytes,7,opt,name=path,proto3" json:"path,omitempty"`                                           //路由路径
	Redirect                 string           `protobuf:"bytes,8,opt,name=redirect,proto3" json:"redirect,omitempty"`                                   //重定向路径
	ParentId                 uint64           `protobuf:"varint,9,opt,name=parentId,proto3" json:"parentId,omitempty"`                                  //父级ID
	Type                     int64            `protobuf:"varint,10,opt,name=type,proto3" json:"type,omitempty"`                                         //类型（1. 目录，2. 菜单，3. 按钮）
	IsEnable                 int64            `protobuf:"varint,11,opt,name=isEnable,proto3" json:"isEnable,omitempty"`                                 //是否启用（0. 禁用，1. 启用）
	Code                     string           `protobuf:"bytes,12,opt,name=code,proto3" json:"code,omitempty"`                                          //权限码
	ActiveIcon               string           `protobuf:"bytes,13,opt,name=activeIcon,proto3" json:"activeIcon,omitempty"`                              //激活图标
	ActivePath               string           `protobuf:"bytes,14,opt,name=activePath,proto3" json:"activePath,omitempty"`                              //当前激活的菜单路径
	AffixTab                 int64            `protobuf:"varint,15,opt,name=affixTab,proto3" json:"affixTab,omitempty"`                                 //是否固定标签页
	AffixTabOrder            int64            `protobuf:"varint,16,opt,name=affixTabOrder,proto3" json:"affixTabOrder,omitempty"`                       //固定标签页的顺序
	Badge                    string           `protobuf:"bytes,17,opt,name=badge,proto3" json:"badge,omitempty"`                                        //徽标
	BadgeType                SysMenuBadgeType `protobuf:"varint,18,opt,name=badgeType,proto3,enum=pb.SysMenuBadgeType" json:"badgeType,omitempty"`      //徽标类型
	BadgeVariants            string           `protobuf:"bytes,19,opt,name=badgeVariants,proto3" json:"badgeVariants,omitempty"`                        //徽标颜色
	HideChildrenInMenu       int64            `protobuf:"varint,20,opt,name=hideChildrenInMenu,proto3" json:"hideChildrenInMenu,omitempty"`             //当前路由的子级在菜单中不展现
	HideInBreadcrumb         int64            `protobuf:"varint,21,opt,name=hideInBreadcrumb,proto3" json:"hideInBreadcrumb,omitempty"`                 //当前路由在面包屑中不展现
	HideInMenu               int64            `protobuf:"varint,22,opt,name=hideInMenu,proto3" json:"hideInMenu,omitempty"`                             //当前路由在菜单中不展现
	HideInTab                int64            `protobuf:"varint,23,opt,name=hideInTab,proto3" json:"hideInTab,omitempty"`                               //当前路由在标签页不展现
	Icon                     string           `protobuf:"bytes,24,opt,name=icon,proto3" json:"icon,omitempty"`                                          //图标
	IframeSrc                string           `protobuf:"bytes,25,opt,name=iframeSrc,proto3" json:"iframeSrc,omitempty"`                                //iframe地址
	IgnoreAccess             int64            `protobuf:"varint,26,opt,name=ignoreAccess,proto3" json:"ignoreAccess,omitempty"`                         //忽略权限，直接可以访问
	KeepAlive                int64            `protobuf:"varint,27,opt,name=keepAlive,proto3" json:"keepAlive,omitempty"`                               //开启KeepAlive缓存
	Link                     string           `protobuf:"bytes,28,opt,name=link,proto3" json:"link,omitempty"`                                          //外链-跳转路径
	Loaded                   int64            `protobuf:"varint,29,opt,name=loaded,proto3" json:"loaded,omitempty"`                                     //路由是否已经加载过
	MaxNumOfOpenTab          int64            `protobuf:"varint,30,opt,name=maxNumOfOpenTab,proto3" json:"maxNumOfOpenTab,omitempty"`                   //标签页最大打开数量
	MenuVisibleWithForbidden int64            `protobuf:"varint,31,opt,name=menuVisibleWithForbidden,proto3" json:"menuVisibleWithForbidden,omitempty"` //菜单可以看到，但是访问会被重定向到403
	OpenInNewWindow          int64            `protobuf:"varint,32,opt,name=openInNewWindow,proto3" json:"openInNewWindow,omitempty"`                   //在新窗口打开
	OrderNum                 int64            `protobuf:"varint,33,opt,name=orderNum,proto3" json:"orderNum,omitempty"`                                 //用于路由->菜单排序
	Query                    string           `protobuf:"bytes,34,opt,name=query,proto3" json:"query,omitempty"`                                        //菜单所携带的参数
	Title                    string           `protobuf:"bytes,35,opt,name=title,proto3" json:"title,omitempty"`                                        //标题名称
}

func (x *SearchSysMenuReq) Reset() {
	*x = SearchSysMenuReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSysMenuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSysMenuReq) ProtoMessage() {}

func (x *SearchSysMenuReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSysMenuReq.ProtoReflect.Descriptor instead.
func (*SearchSysMenuReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{38}
}

func (x *SearchSysMenuReq) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchSysMenuReq) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *SearchSysMenuReq) GetOrderStr() string {
	if x != nil {
		return x.OrderStr
	}
	return ""
}

func (x *SearchSysMenuReq) GetIsAsc() bool {
	if x != nil {
		return x.IsAsc
	}
	return false
}

func (x *SearchSysMenuReq) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *SearchSysMenuReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SearchSysMenuReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SearchSysMenuReq) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *SearchSysMenuReq) GetParentId() uint64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *SearchSysMenuReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *SearchSysMenuReq) GetIsEnable() int64 {
	if x != nil {
		return x.IsEnable
	}
	return 0
}

func (x *SearchSysMenuReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SearchSysMenuReq) GetActiveIcon() string {
	if x != nil {
		return x.ActiveIcon
	}
	return ""
}

func (x *SearchSysMenuReq) GetActivePath() string {
	if x != nil {
		return x.ActivePath
	}
	return ""
}

func (x *SearchSysMenuReq) GetAffixTab() int64 {
	if x != nil {
		return x.AffixTab
	}
	return 0
}

func (x *SearchSysMenuReq) GetAffixTabOrder() int64 {
	if x != nil {
		return x.AffixTabOrder
	}
	return 0
}

func (x *SearchSysMenuReq) GetBadge() string {
	if x != nil {
		return x.Badge
	}
	return ""
}

func (x *SearchSysMenuReq) GetBadgeType() SysMenuBadgeType {
	if x != nil {
		return x.BadgeType
	}
	return SysMenuBadgeType_M
}

func (x *SearchSysMenuReq) GetBadgeVariants() string {
	if x != nil {
		return x.BadgeVariants
	}
	return ""
}

func (x *SearchSysMenuReq) GetHideChildrenInMenu() int64 {
	if x != nil {
		return x.HideChildrenInMenu
	}
	return 0
}

func (x *SearchSysMenuReq) GetHideInBreadcrumb() int64 {
	if x != nil {
		return x.HideInBreadcrumb
	}
	return 0
}

func (x *SearchSysMenuReq) GetHideInMenu() int64 {
	if x != nil {
		return x.HideInMenu
	}
	return 0
}

func (x *SearchSysMenuReq) GetHideInTab() int64 {
	if x != nil {
		return x.HideInTab
	}
	return 0
}

func (x *SearchSysMenuReq) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *SearchSysMenuReq) GetIframeSrc() string {
	if x != nil {
		return x.IframeSrc
	}
	return ""
}

func (x *SearchSysMenuReq) GetIgnoreAccess() int64 {
	if x != nil {
		return x.IgnoreAccess
	}
	return 0
}

func (x *SearchSysMenuReq) GetKeepAlive() int64 {
	if x != nil {
		return x.KeepAlive
	}
	return 0
}

func (x *SearchSysMenuReq) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *SearchSysMenuReq) GetLoaded() int64 {
	if x != nil {
		return x.Loaded
	}
	return 0
}

func (x *SearchSysMenuReq) GetMaxNumOfOpenTab() int64 {
	if x != nil {
		return x.MaxNumOfOpenTab
	}
	return 0
}

func (x *SearchSysMenuReq) GetMenuVisibleWithForbidden() int64 {
	if x != nil {
		return x.MenuVisibleWithForbidden
	}
	return 0
}

func (x *SearchSysMenuReq) GetOpenInNewWindow() int64 {
	if x != nil {
		return x.OpenInNewWindow
	}
	return 0
}

func (x *SearchSysMenuReq) GetOrderNum() int64 {
	if x != nil {
		return x.OrderNum
	}
	return 0
}

func (x *SearchSysMenuReq) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchSysMenuReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type SearchSysMenuResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  []*SysMenu `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`    //sysMenu
	Total uint64     `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` //total
}

func (x *SearchSysMenuResp) Reset() {
	*x = SearchSysMenuResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSysMenuResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSysMenuResp) ProtoMessage() {}

func (x *SearchSysMenuResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSysMenuResp.ProtoReflect.Descriptor instead.
func (*SearchSysMenuResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{39}
}

func (x *SearchSysMenuResp) GetData() []*SysMenu {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SearchSysMenuResp) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 获取菜单树请求
type GetMenuTreeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"` // 角色ID
}

func (x *GetMenuTreeReq) Reset() {
	*x = GetMenuTreeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMenuTreeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMenuTreeReq) ProtoMessage() {}

func (x *GetMenuTreeReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMenuTreeReq.ProtoReflect.Descriptor instead.
func (*GetMenuTreeReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{40}
}

func (x *GetMenuTreeReq) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 获取菜单树响应
type GetMenuTreeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Menus []*MenuNode `protobuf:"bytes,1,rep,name=menus,proto3" json:"menus,omitempty"` // 菜单树
}

func (x *GetMenuTreeResp) Reset() {
	*x = GetMenuTreeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMenuTreeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMenuTreeResp) ProtoMessage() {}

func (x *GetMenuTreeResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMenuTreeResp.ProtoReflect.Descriptor instead.
func (*GetMenuTreeResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{41}
}

func (x *GetMenuTreeResp) GetMenus() []*MenuNode {
	if x != nil {
		return x.Menus
	}
	return nil
}

// 菜单节点定义
type MenuNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`              // 主键ID
	ParentId  uint64      `protobuf:"varint,2,opt,name=parentId,proto3" json:"parentId,omitempty"`  // 父级ID
	Path      string      `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`           // 路由路径
	Redirect  string      `protobuf:"bytes,4,opt,name=redirect,proto3" json:"redirect,omitempty"`   // 重定向路径
	Component string      `protobuf:"bytes,5,opt,name=component,proto3" json:"component,omitempty"` // 组件名称
	Name      string      `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`           // 菜单名称
	Meta      *RouteMeta  `protobuf:"bytes,7,opt,name=meta,proto3" json:"meta,omitempty"`           // Meta 信息
	Children  []*MenuNode `protobuf:"bytes,8,rep,name=children,proto3" json:"children,omitempty"`   // 子菜单
}

func (x *MenuNode) Reset() {
	*x = MenuNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuNode) ProtoMessage() {}

func (x *MenuNode) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuNode.ProtoReflect.Descriptor instead.
func (*MenuNode) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{42}
}

func (x *MenuNode) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MenuNode) GetParentId() uint64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *MenuNode) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *MenuNode) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *MenuNode) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *MenuNode) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MenuNode) GetMeta() *RouteMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *MenuNode) GetChildren() []*MenuNode {
	if x != nil {
		return x.Children
	}
	return nil
}

// Meta 定义 (对应前端的 RouteMeta)
type RouteMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActiveIcon               string            `protobuf:"bytes,1,opt,name=activeIcon,proto3" json:"activeIcon,omitempty"`                                                                                // 激活图标
	ActivePath               string            `protobuf:"bytes,2,opt,name=activePath,proto3" json:"activePath,omitempty"`                                                                                // 当前激活的菜单路径
	AffixTab                 int64             `protobuf:"varint,3,opt,name=affixTab,proto3" json:"affixTab,omitempty"`                                                                                   // 是否固定标签页
	AffixTabOrder            int64             `protobuf:"varint,4,opt,name=affixTabOrder,proto3" json:"affixTabOrder,omitempty"`                                                                         // 固定标签页的顺序
	Authority                []string          `protobuf:"bytes,5,rep,name=authority,proto3" json:"authority,omitempty"`                                                                                  // 需要特定角色标识才可以访问
	Badge                    string            `protobuf:"bytes,6,opt,name=badge,proto3" json:"badge,omitempty"`                                                                                          // 徽标
	BadgeType                string            `protobuf:"bytes,7,opt,name=badgeType,proto3" json:"badgeType,omitempty"`                                                                                  // 徽标类型
	BadgeVariants            string            `protobuf:"bytes,8,opt,name=badgeVariants,proto3" json:"badgeVariants,omitempty"`                                                                          // 徽标颜色
	HideChildrenInMenu       int64             `protobuf:"varint,9,opt,name=hideChildrenInMenu,proto3" json:"hideChildrenInMenu,omitempty"`                                                               // 当前路由的子级在菜单中不展现
	HideInBreadcrumb         int64             `protobuf:"varint,10,opt,name=hideInBreadcrumb,proto3" json:"hideInBreadcrumb,omitempty"`                                                                  // 当前路由在面包屑中不展现
	HideInMenu               int64             `protobuf:"varint,11,opt,name=hideInMenu,proto3" json:"hideInMenu,omitempty"`                                                                              // 当前路由在菜单中不展现
	HideInTab                int64             `protobuf:"varint,12,opt,name=hideInTab,proto3" json:"hideInTab,omitempty"`                                                                                // 当前路由在标签页不展现
	Icon                     string            `protobuf:"bytes,13,opt,name=icon,proto3" json:"icon,omitempty"`                                                                                           // 图标
	IframeSrc                string            `protobuf:"bytes,14,opt,name=iframeSrc,proto3" json:"iframeSrc,omitempty"`                                                                                 // iframe 地址
	IgnoreAccess             int64             `protobuf:"varint,15,opt,name=ignoreAccess,proto3" json:"ignoreAccess,omitempty"`                                                                          // 忽略权限，直接可以访问
	KeepAlive                int64             `protobuf:"varint,16,opt,name=keepAlive,proto3" json:"keepAlive,omitempty"`                                                                                // 开启KeepAlive缓存
	Link                     string            `protobuf:"bytes,17,opt,name=link,proto3" json:"link,omitempty"`                                                                                           // 外链-跳转路径
	Loaded                   int64             `protobuf:"varint,18,opt,name=loaded,proto3" json:"loaded,omitempty"`                                                                                      // 路由是否已经加载过
	MaxNumOfOpenTab          int64             `protobuf:"varint,19,opt,name=maxNumOfOpenTab,proto3" json:"maxNumOfOpenTab,omitempty"`                                                                    // 标签页最大打开数量
	MenuVisibleWithForbidden int64             `protobuf:"varint,20,opt,name=menuVisibleWithForbidden,proto3" json:"menuVisibleWithForbidden,omitempty"`                                                  // 菜单可以看到，但是访问会被重定向到403
	OpenInNewWindow          int64             `protobuf:"varint,21,opt,name=openInNewWindow,proto3" json:"openInNewWindow,omitempty"`                                                                    // 在新窗口打开
	Order                    int64             `protobuf:"varint,22,opt,name=order,proto3" json:"order,omitempty"`                                                                                        // 菜单排序
	Query                    map[string]string `protobuf:"bytes,23,rep,name=query,proto3" json:"query,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 菜单所携带的参数
	Title                    string            `protobuf:"bytes,24,opt,name=title,proto3" json:"title,omitempty"`                                                                                         // 标题名称
}

func (x *RouteMeta) Reset() {
	*x = RouteMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RouteMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteMeta) ProtoMessage() {}

func (x *RouteMeta) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteMeta.ProtoReflect.Descriptor instead.
func (*RouteMeta) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{43}
}

func (x *RouteMeta) GetActiveIcon() string {
	if x != nil {
		return x.ActiveIcon
	}
	return ""
}

func (x *RouteMeta) GetActivePath() string {
	if x != nil {
		return x.ActivePath
	}
	return ""
}

func (x *RouteMeta) GetAffixTab() int64 {
	if x != nil {
		return x.AffixTab
	}
	return 0
}

func (x *RouteMeta) GetAffixTabOrder() int64 {
	if x != nil {
		return x.AffixTabOrder
	}
	return 0
}

func (x *RouteMeta) GetAuthority() []string {
	if x != nil {
		return x.Authority
	}
	return nil
}

func (x *RouteMeta) GetBadge() string {
	if x != nil {
		return x.Badge
	}
	return ""
}

func (x *RouteMeta) GetBadgeType() string {
	if x != nil {
		return x.BadgeType
	}
	return ""
}

func (x *RouteMeta) GetBadgeVariants() string {
	if x != nil {
		return x.BadgeVariants
	}
	return ""
}

func (x *RouteMeta) GetHideChildrenInMenu() int64 {
	if x != nil {
		return x.HideChildrenInMenu
	}
	return 0
}

func (x *RouteMeta) GetHideInBreadcrumb() int64 {
	if x != nil {
		return x.HideInBreadcrumb
	}
	return 0
}

func (x *RouteMeta) GetHideInMenu() int64 {
	if x != nil {
		return x.HideInMenu
	}
	return 0
}

func (x *RouteMeta) GetHideInTab() int64 {
	if x != nil {
		return x.HideInTab
	}
	return 0
}

func (x *RouteMeta) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *RouteMeta) GetIframeSrc() string {
	if x != nil {
		return x.IframeSrc
	}
	return ""
}

func (x *RouteMeta) GetIgnoreAccess() int64 {
	if x != nil {
		return x.IgnoreAccess
	}
	return 0
}

func (x *RouteMeta) GetKeepAlive() int64 {
	if x != nil {
		return x.KeepAlive
	}
	return 0
}

func (x *RouteMeta) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *RouteMeta) GetLoaded() int64 {
	if x != nil {
		return x.Loaded
	}
	return 0
}

func (x *RouteMeta) GetMaxNumOfOpenTab() int64 {
	if x != nil {
		return x.MaxNumOfOpenTab
	}
	return 0
}

func (x *RouteMeta) GetMenuVisibleWithForbidden() int64 {
	if x != nil {
		return x.MenuVisibleWithForbidden
	}
	return 0
}

func (x *RouteMeta) GetOpenInNewWindow() int64 {
	if x != nil {
		return x.OpenInNewWindow
	}
	return 0
}

func (x *RouteMeta) GetOrder() int64 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *RouteMeta) GetQuery() map[string]string {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *RouteMeta) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

// --------------------------------组织表--------------------------------
type SysOrganization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                  //自增主键
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`               //团队名称
	ParentId    uint64 `protobuf:"varint,3,opt,name=parentId,proto3" json:"parentId,omitempty"`      //父级组织的 ID，根级为 NULL
	Level       int64  `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`            //组织层级，从 0 开始
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"` //组织描述
	CreatedAt   int64  `protobuf:"varint,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`    //创建时间
	UpdatedAt   int64  `protobuf:"varint,7,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`    //最后修改时间
}

func (x *SysOrganization) Reset() {
	*x = SysOrganization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysOrganization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysOrganization) ProtoMessage() {}

func (x *SysOrganization) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysOrganization.ProtoReflect.Descriptor instead.
func (*SysOrganization) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{44}
}

func (x *SysOrganization) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysOrganization) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SysOrganization) GetParentId() uint64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *SysOrganization) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *SysOrganization) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SysOrganization) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SysOrganization) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type AddSysOrganizationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`          //团队名称
	ParentId    uint64 `protobuf:"varint,2,opt,name=parentId,proto3" json:"parentId,omitempty"` //父级组织的 ID，根级为 NULL
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *AddSysOrganizationReq) Reset() {
	*x = AddSysOrganizationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSysOrganizationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSysOrganizationReq) ProtoMessage() {}

func (x *AddSysOrganizationReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSysOrganizationReq.ProtoReflect.Descriptor instead.
func (*AddSysOrganizationReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{45}
}

func (x *AddSysOrganizationReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddSysOrganizationReq) GetParentId() uint64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *AddSysOrganizationReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type AddSysOrganizationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddSysOrganizationResp) Reset() {
	*x = AddSysOrganizationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSysOrganizationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSysOrganizationResp) ProtoMessage() {}

func (x *AddSysOrganizationResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSysOrganizationResp.ProtoReflect.Descriptor instead.
func (*AddSysOrganizationResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{46}
}

type UpdateSysOrganizationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                  //自增主键
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`               //团队名称
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"` //组织描述
}

func (x *UpdateSysOrganizationReq) Reset() {
	*x = UpdateSysOrganizationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSysOrganizationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSysOrganizationReq) ProtoMessage() {}

func (x *UpdateSysOrganizationReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSysOrganizationReq.ProtoReflect.Descriptor instead.
func (*UpdateSysOrganizationReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{47}
}

func (x *UpdateSysOrganizationReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateSysOrganizationReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateSysOrganizationReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type UpdateSysOrganizationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateSysOrganizationResp) Reset() {
	*x = UpdateSysOrganizationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSysOrganizationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSysOrganizationResp) ProtoMessage() {}

func (x *UpdateSysOrganizationResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSysOrganizationResp.ProtoReflect.Descriptor instead.
func (*UpdateSysOrganizationResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{48}
}

type DelSysOrganizationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *DelSysOrganizationReq) Reset() {
	*x = DelSysOrganizationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelSysOrganizationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelSysOrganizationReq) ProtoMessage() {}

func (x *DelSysOrganizationReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelSysOrganizationReq.ProtoReflect.Descriptor instead.
func (*DelSysOrganizationReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{49}
}

func (x *DelSysOrganizationReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DelSysOrganizationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelSysOrganizationResp) Reset() {
	*x = DelSysOrganizationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelSysOrganizationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelSysOrganizationResp) ProtoMessage() {}

func (x *DelSysOrganizationResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelSysOrganizationResp.ProtoReflect.Descriptor instead.
func (*DelSysOrganizationResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{50}
}

type GetSysOrganizationByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *GetSysOrganizationByIdReq) Reset() {
	*x = GetSysOrganizationByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSysOrganizationByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSysOrganizationByIdReq) ProtoMessage() {}

func (x *GetSysOrganizationByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSysOrganizationByIdReq.ProtoReflect.Descriptor instead.
func (*GetSysOrganizationByIdReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{51}
}

func (x *GetSysOrganizationByIdReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetSysOrganizationByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *SysOrganization `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"` //sysOrganization
}

func (x *GetSysOrganizationByIdResp) Reset() {
	*x = GetSysOrganizationByIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSysOrganizationByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSysOrganizationByIdResp) ProtoMessage() {}

func (x *GetSysOrganizationByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSysOrganizationByIdResp.ProtoReflect.Descriptor instead.
func (*GetSysOrganizationByIdResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{52}
}

func (x *GetSysOrganizationByIdResp) GetData() *SysOrganization {
	if x != nil {
		return x.Data
	}
	return nil
}

type SearchSysOrganizationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderStr    string `protobuf:"bytes,1,opt,name=orderStr,proto3" json:"orderStr,omitempty"`       //orderStr
	IsAsc       bool   `protobuf:"varint,2,opt,name=isAsc,proto3" json:"isAsc,omitempty"`            //isAsc
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`               //团队名称
	ParentId    uint64 `protobuf:"varint,4,opt,name=parentId,proto3" json:"parentId,omitempty"`      //父级组织的 ID，根级为 NULL
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"` //组织描述
}

func (x *SearchSysOrganizationReq) Reset() {
	*x = SearchSysOrganizationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSysOrganizationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSysOrganizationReq) ProtoMessage() {}

func (x *SearchSysOrganizationReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSysOrganizationReq.ProtoReflect.Descriptor instead.
func (*SearchSysOrganizationReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{53}
}

func (x *SearchSysOrganizationReq) GetOrderStr() string {
	if x != nil {
		return x.OrderStr
	}
	return ""
}

func (x *SearchSysOrganizationReq) GetIsAsc() bool {
	if x != nil {
		return x.IsAsc
	}
	return false
}

func (x *SearchSysOrganizationReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SearchSysOrganizationReq) GetParentId() uint64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *SearchSysOrganizationReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type SearchSysOrganizationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*SysOrganizationSearch `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"` //sysOrganization
}

func (x *SearchSysOrganizationResp) Reset() {
	*x = SearchSysOrganizationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSysOrganizationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSysOrganizationResp) ProtoMessage() {}

func (x *SearchSysOrganizationResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSysOrganizationResp.ProtoReflect.Descriptor instead.
func (*SearchSysOrganizationResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{54}
}

func (x *SearchSysOrganizationResp) GetData() []*SysOrganizationSearch {
	if x != nil {
		return x.Data
	}
	return nil
}

type SysOrganizationSearch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string                   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ParentId    uint64                   `protobuf:"varint,3,opt,name=parentId,proto3" json:"parentId,omitempty"`
	Level       int64                    `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`
	Description string                   `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt   int64                    `protobuf:"varint,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt   int64                    `protobuf:"varint,7,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Children    []*SysOrganizationSearch `protobuf:"bytes,8,rep,name=children,proto3" json:"children,omitempty"` // children
}

func (x *SysOrganizationSearch) Reset() {
	*x = SysOrganizationSearch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysOrganizationSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysOrganizationSearch) ProtoMessage() {}

func (x *SysOrganizationSearch) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysOrganizationSearch.ProtoReflect.Descriptor instead.
func (*SysOrganizationSearch) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{55}
}

func (x *SysOrganizationSearch) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysOrganizationSearch) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SysOrganizationSearch) GetParentId() uint64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *SysOrganizationSearch) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *SysOrganizationSearch) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SysOrganizationSearch) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SysOrganizationSearch) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *SysOrganizationSearch) GetChildren() []*SysOrganizationSearch {
	if x != nil {
		return x.Children
	}
	return nil
}

type GetOrganizationTreeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetOrganizationTreeReq) Reset() {
	*x = GetOrganizationTreeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationTreeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationTreeReq) ProtoMessage() {}

func (x *GetOrganizationTreeReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationTreeReq.ProtoReflect.Descriptor instead.
func (*GetOrganizationTreeReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{56}
}

// --------------------------------权限表--------------------------------
type SysPermission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`             //自增主键
	ParentId  uint64 `protobuf:"varint,2,opt,name=parentId,proto3" json:"parentId,omitempty"` //父权限ID
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`          //权限名称
	Uri       string `protobuf:"bytes,4,opt,name=uri,proto3" json:"uri,omitempty"`            //权限对应的资源URI或路径
	Action    string `protobuf:"bytes,5,opt,name=action,proto3" json:"action,omitempty"`      //对资源执行的操作
	Level     uint64 `protobuf:"varint,6,opt,name=level,proto3" json:"level,omitempty"`
	CreatedAt int64  `protobuf:"varint,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"` //创建时间
	UpdatedAt int64  `protobuf:"varint,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"` //最后修改时间
}

func (x *SysPermission) Reset() {
	*x = SysPermission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysPermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysPermission) ProtoMessage() {}

func (x *SysPermission) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysPermission.ProtoReflect.Descriptor instead.
func (*SysPermission) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{57}
}

func (x *SysPermission) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysPermission) GetParentId() uint64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *SysPermission) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SysPermission) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *SysPermission) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *SysPermission) GetLevel() uint64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *SysPermission) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SysPermission) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type AddSysPermissionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentId uint64 `protobuf:"varint,1,opt,name=parentId,proto3" json:"parentId,omitempty"` //父权限ID
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`          //权限名称
	Uri      string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`            //权限对应的资源URI或路径
	Action   string `protobuf:"bytes,4,opt,name=action,proto3" json:"action,omitempty"`      //对资源执行的操作
}

func (x *AddSysPermissionReq) Reset() {
	*x = AddSysPermissionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSysPermissionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSysPermissionReq) ProtoMessage() {}

func (x *AddSysPermissionReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSysPermissionReq.ProtoReflect.Descriptor instead.
func (*AddSysPermissionReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{58}
}

func (x *AddSysPermissionReq) GetParentId() uint64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *AddSysPermissionReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddSysPermissionReq) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *AddSysPermissionReq) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type AddSysPermissionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddSysPermissionResp) Reset() {
	*x = AddSysPermissionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSysPermissionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSysPermissionResp) ProtoMessage() {}

func (x *AddSysPermissionResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSysPermissionResp.ProtoReflect.Descriptor instead.
func (*AddSysPermissionResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{59}
}

type UpdateSysPermissionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`        //自增主键
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`     //权限名称
	Uri    string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`       //权限对应的资源URI或路径
	Action string `protobuf:"bytes,4,opt,name=action,proto3" json:"action,omitempty"` //对资源执行的操作
}

func (x *UpdateSysPermissionReq) Reset() {
	*x = UpdateSysPermissionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSysPermissionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSysPermissionReq) ProtoMessage() {}

func (x *UpdateSysPermissionReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSysPermissionReq.ProtoReflect.Descriptor instead.
func (*UpdateSysPermissionReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{60}
}

func (x *UpdateSysPermissionReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateSysPermissionReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateSysPermissionReq) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *UpdateSysPermissionReq) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type UpdateSysPermissionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateSysPermissionResp) Reset() {
	*x = UpdateSysPermissionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSysPermissionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSysPermissionResp) ProtoMessage() {}

func (x *UpdateSysPermissionResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSysPermissionResp.ProtoReflect.Descriptor instead.
func (*UpdateSysPermissionResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{61}
}

type DelSysPermissionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *DelSysPermissionReq) Reset() {
	*x = DelSysPermissionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelSysPermissionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelSysPermissionReq) ProtoMessage() {}

func (x *DelSysPermissionReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelSysPermissionReq.ProtoReflect.Descriptor instead.
func (*DelSysPermissionReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{62}
}

func (x *DelSysPermissionReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DelSysPermissionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelSysPermissionResp) Reset() {
	*x = DelSysPermissionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelSysPermissionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelSysPermissionResp) ProtoMessage() {}

func (x *DelSysPermissionResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelSysPermissionResp.ProtoReflect.Descriptor instead.
func (*DelSysPermissionResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{63}
}

type GetSysPermissionByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *GetSysPermissionByIdReq) Reset() {
	*x = GetSysPermissionByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSysPermissionByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSysPermissionByIdReq) ProtoMessage() {}

func (x *GetSysPermissionByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSysPermissionByIdReq.ProtoReflect.Descriptor instead.
func (*GetSysPermissionByIdReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{64}
}

func (x *GetSysPermissionByIdReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetSysPermissionByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *SysPermission `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"` //sysPermission
}

func (x *GetSysPermissionByIdResp) Reset() {
	*x = GetSysPermissionByIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSysPermissionByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSysPermissionByIdResp) ProtoMessage() {}

func (x *GetSysPermissionByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSysPermissionByIdResp.ProtoReflect.Descriptor instead.
func (*GetSysPermissionByIdResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{65}
}

func (x *GetSysPermissionByIdResp) GetData() *SysPermission {
	if x != nil {
		return x.Data
	}
	return nil
}

type SearchSysPermissionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     uint64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`         //page
	PageSize uint64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"` //pageSize
	OrderStr string `protobuf:"bytes,3,opt,name=orderStr,proto3" json:"orderStr,omitempty"`  //orderStr
	IsAsc    bool   `protobuf:"varint,4,opt,name=isAsc,proto3" json:"isAsc,omitempty"`       //isAsc
	ParentId uint64 `protobuf:"varint,5,opt,name=parentId,proto3" json:"parentId,omitempty"` //父权限ID
	Name     string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`          //权限名称
	Uri      string `protobuf:"bytes,7,opt,name=uri,proto3" json:"uri,omitempty"`            //权限对应的资源URI或路径
	Action   string `protobuf:"bytes,8,opt,name=action,proto3" json:"action,omitempty"`      //对资源执行的操作
}

func (x *SearchSysPermissionReq) Reset() {
	*x = SearchSysPermissionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSysPermissionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSysPermissionReq) ProtoMessage() {}

func (x *SearchSysPermissionReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSysPermissionReq.ProtoReflect.Descriptor instead.
func (*SearchSysPermissionReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{66}
}

func (x *SearchSysPermissionReq) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchSysPermissionReq) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *SearchSysPermissionReq) GetOrderStr() string {
	if x != nil {
		return x.OrderStr
	}
	return ""
}

func (x *SearchSysPermissionReq) GetIsAsc() bool {
	if x != nil {
		return x.IsAsc
	}
	return false
}

func (x *SearchSysPermissionReq) GetParentId() uint64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *SearchSysPermissionReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SearchSysPermissionReq) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *SearchSysPermissionReq) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type SearchSysPermissionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  []*SysPermission `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`    //sysPermission
	Total uint64           `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` //total
}

func (x *SearchSysPermissionResp) Reset() {
	*x = SearchSysPermissionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSysPermissionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSysPermissionResp) ProtoMessage() {}

func (x *SearchSysPermissionResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSysPermissionResp.ProtoReflect.Descriptor instead.
func (*SearchSysPermissionResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{67}
}

func (x *SearchSysPermissionResp) GetData() []*SysPermission {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SearchSysPermissionResp) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 获取三级树状权限树
type GetSysPermissionTreeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetSysPermissionTreeReq) Reset() {
	*x = GetSysPermissionTreeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSysPermissionTreeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSysPermissionTreeReq) ProtoMessage() {}

func (x *GetSysPermissionTreeReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSysPermissionTreeReq.ProtoReflect.Descriptor instead.
func (*GetSysPermissionTreeReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{68}
}

type GetSysPermissionTreeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*SysPermissionTree `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"` // 权限树数据
}

func (x *GetSysPermissionTreeResp) Reset() {
	*x = GetSysPermissionTreeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSysPermissionTreeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSysPermissionTreeResp) ProtoMessage() {}

func (x *GetSysPermissionTreeResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSysPermissionTreeResp.ProtoReflect.Descriptor instead.
func (*GetSysPermissionTreeResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{69}
}

func (x *GetSysPermissionTreeResp) GetData() []*SysPermissionTree {
	if x != nil {
		return x.Data
	}
	return nil
}

// 权限树节点
type SysPermissionTree struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint64               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`            // 权限ID
	Name     string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`         // 权限名称
	Children []*SysPermissionTree `protobuf:"bytes,3,rep,name=children,proto3" json:"children,omitempty"` // 子权限
}

func (x *SysPermissionTree) Reset() {
	*x = SysPermissionTree{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysPermissionTree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysPermissionTree) ProtoMessage() {}

func (x *SysPermissionTree) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysPermissionTree.ProtoReflect.Descriptor instead.
func (*SysPermissionTree) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{70}
}

func (x *SysPermissionTree) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysPermissionTree) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SysPermissionTree) GetChildren() []*SysPermissionTree {
	if x != nil {
		return x.Children
	}
	return nil
}

// --------------------------------职位表--------------------------------
type SysPosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`               //自增主键
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`            //职位名称
	CreatedAt int64  `protobuf:"varint,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"` //创建时间
	UpdatedAt int64  `protobuf:"varint,5,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"` //最后修改时间
}

func (x *SysPosition) Reset() {
	*x = SysPosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysPosition) ProtoMessage() {}

func (x *SysPosition) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysPosition.ProtoReflect.Descriptor instead.
func (*SysPosition) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{71}
}

func (x *SysPosition) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysPosition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SysPosition) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SysPosition) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type AddSysPositionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` //职位名称
}

func (x *AddSysPositionReq) Reset() {
	*x = AddSysPositionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSysPositionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSysPositionReq) ProtoMessage() {}

func (x *AddSysPositionReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSysPositionReq.ProtoReflect.Descriptor instead.
func (*AddSysPositionReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{72}
}

func (x *AddSysPositionReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AddSysPositionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddSysPositionResp) Reset() {
	*x = AddSysPositionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSysPositionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSysPositionResp) ProtoMessage() {}

func (x *AddSysPositionResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSysPositionResp.ProtoReflect.Descriptor instead.
func (*AddSysPositionResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{73}
}

type UpdateSysPositionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`    //自增主键
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` //职位名称
}

func (x *UpdateSysPositionReq) Reset() {
	*x = UpdateSysPositionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSysPositionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSysPositionReq) ProtoMessage() {}

func (x *UpdateSysPositionReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSysPositionReq.ProtoReflect.Descriptor instead.
func (*UpdateSysPositionReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{74}
}

func (x *UpdateSysPositionReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateSysPositionReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpdateSysPositionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateSysPositionResp) Reset() {
	*x = UpdateSysPositionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSysPositionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSysPositionResp) ProtoMessage() {}

func (x *UpdateSysPositionResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSysPositionResp.ProtoReflect.Descriptor instead.
func (*UpdateSysPositionResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{75}
}

type DelSysPositionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *DelSysPositionReq) Reset() {
	*x = DelSysPositionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelSysPositionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelSysPositionReq) ProtoMessage() {}

func (x *DelSysPositionReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelSysPositionReq.ProtoReflect.Descriptor instead.
func (*DelSysPositionReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{76}
}

func (x *DelSysPositionReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DelSysPositionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelSysPositionResp) Reset() {
	*x = DelSysPositionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelSysPositionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelSysPositionResp) ProtoMessage() {}

func (x *DelSysPositionResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelSysPositionResp.ProtoReflect.Descriptor instead.
func (*DelSysPositionResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{77}
}

type GetSysPositionByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *GetSysPositionByIdReq) Reset() {
	*x = GetSysPositionByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSysPositionByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSysPositionByIdReq) ProtoMessage() {}

func (x *GetSysPositionByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSysPositionByIdReq.ProtoReflect.Descriptor instead.
func (*GetSysPositionByIdReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{78}
}

func (x *GetSysPositionByIdReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetSysPositionByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *SysPosition `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"` //sysPosition
}

func (x *GetSysPositionByIdResp) Reset() {
	*x = GetSysPositionByIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSysPositionByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSysPositionByIdResp) ProtoMessage() {}

func (x *GetSysPositionByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSysPositionByIdResp.ProtoReflect.Descriptor instead.
func (*GetSysPositionByIdResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{79}
}

func (x *GetSysPositionByIdResp) GetData() *SysPosition {
	if x != nil {
		return x.Data
	}
	return nil
}

type SearchSysPositionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     uint64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`         //page
	PageSize uint64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"` //pageSize
	OrderStr string `protobuf:"bytes,3,opt,name=orderStr,proto3" json:"orderStr,omitempty"`  //orderStr
	IsAsc    bool   `protobuf:"varint,4,opt,name=isAsc,proto3" json:"isAsc,omitempty"`       //isAsc
	Name     string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`          //职位名称
}

func (x *SearchSysPositionReq) Reset() {
	*x = SearchSysPositionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSysPositionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSysPositionReq) ProtoMessage() {}

func (x *SearchSysPositionReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSysPositionReq.ProtoReflect.Descriptor instead.
func (*SearchSysPositionReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{80}
}

func (x *SearchSysPositionReq) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchSysPositionReq) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *SearchSysPositionReq) GetOrderStr() string {
	if x != nil {
		return x.OrderStr
	}
	return ""
}

func (x *SearchSysPositionReq) GetIsAsc() bool {
	if x != nil {
		return x.IsAsc
	}
	return false
}

func (x *SearchSysPositionReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SearchSysPositionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  []*SysPosition `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`    //sysPosition
	Total uint64         `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` //total
}

func (x *SearchSysPositionResp) Reset() {
	*x = SearchSysPositionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSysPositionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSysPositionResp) ProtoMessage() {}

func (x *SearchSysPositionResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSysPositionResp.ProtoReflect.Descriptor instead.
func (*SearchSysPositionResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{81}
}

func (x *SearchSysPositionResp) GetData() []*SysPosition {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SearchSysPositionResp) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 通过职务id查询用户列表
type SearchSysPositionByUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SearchSysPositionByUserReq) Reset() {
	*x = SearchSysPositionByUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSysPositionByUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSysPositionByUserReq) ProtoMessage() {}

func (x *SearchSysPositionByUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSysPositionByUserReq.ProtoReflect.Descriptor instead.
func (*SearchSysPositionByUserReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{82}
}

func (x *SearchSysPositionByUserReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type SearchSysPositionByUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*SysUser `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"` //sysUser
}

func (x *SearchSysPositionByUserResp) Reset() {
	*x = SearchSysPositionByUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSysPositionByUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSysPositionByUserResp) ProtoMessage() {}

func (x *SearchSysPositionByUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSysPositionByUserResp.ProtoReflect.Descriptor instead.
func (*SearchSysPositionByUserResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{83}
}

func (x *SearchSysPositionByUserResp) GetData() []*SysUser {
	if x != nil {
		return x.Data
	}
	return nil
}

// --------------------------------角色表--------------------------------
type SysRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`            //自增主键
	RoleName    string `protobuf:"bytes,2,opt,name=roleName,proto3" json:"roleName,omitempty"` //角色名称
	RoleCode    string `protobuf:"bytes,3,opt,name=roleCode,proto3" json:"roleCode,omitempty"`
	CreatedAt   int64  `protobuf:"varint,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"`    //创建时间
	UpdatedAt   int64  `protobuf:"varint,5,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`    //最后修改时间
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"` //描述
	CreatedBy   string `protobuf:"bytes,7,opt,name=createdBy,proto3" json:"createdBy,omitempty"`     //创建人
	UpdatedBy   string `protobuf:"bytes,8,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`     //更新人
}

func (x *SysRole) Reset() {
	*x = SysRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysRole) ProtoMessage() {}

func (x *SysRole) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysRole.ProtoReflect.Descriptor instead.
func (*SysRole) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{84}
}

func (x *SysRole) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysRole) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *SysRole) GetRoleCode() string {
	if x != nil {
		return x.RoleCode
	}
	return ""
}

func (x *SysRole) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SysRole) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *SysRole) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SysRole) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *SysRole) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

type AddSysRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleName    string `protobuf:"bytes,1,opt,name=roleName,proto3" json:"roleName,omitempty"` //角色名称
	RoleCode    string `protobuf:"bytes,2,opt,name=roleCode,proto3" json:"roleCode,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"` //描述
	CreatedBy   string `protobuf:"bytes,4,opt,name=createdBy,proto3" json:"createdBy,omitempty"`     //创建人
	UpdatedBy   string `protobuf:"bytes,5,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`     //更新人
}

func (x *AddSysRoleReq) Reset() {
	*x = AddSysRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSysRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSysRoleReq) ProtoMessage() {}

func (x *AddSysRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSysRoleReq.ProtoReflect.Descriptor instead.
func (*AddSysRoleReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{85}
}

func (x *AddSysRoleReq) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *AddSysRoleReq) GetRoleCode() string {
	if x != nil {
		return x.RoleCode
	}
	return ""
}

func (x *AddSysRoleReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddSysRoleReq) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *AddSysRoleReq) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

type AddSysRoleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddSysRoleResp) Reset() {
	*x = AddSysRoleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSysRoleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSysRoleResp) ProtoMessage() {}

func (x *AddSysRoleResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSysRoleResp.ProtoReflect.Descriptor instead.
func (*AddSysRoleResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{86}
}

type UpdateSysRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                  //自增主键
	RoleName    string `protobuf:"bytes,2,opt,name=roleName,proto3" json:"roleName,omitempty"`       //角色名称
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"` //描述
	UpdatedBy   string `protobuf:"bytes,4,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`     //更新人
}

func (x *UpdateSysRoleReq) Reset() {
	*x = UpdateSysRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSysRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSysRoleReq) ProtoMessage() {}

func (x *UpdateSysRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSysRoleReq.ProtoReflect.Descriptor instead.
func (*UpdateSysRoleReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{87}
}

func (x *UpdateSysRoleReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateSysRoleReq) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *UpdateSysRoleReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateSysRoleReq) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

type UpdateSysRoleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateSysRoleResp) Reset() {
	*x = UpdateSysRoleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSysRoleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSysRoleResp) ProtoMessage() {}

func (x *UpdateSysRoleResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSysRoleResp.ProtoReflect.Descriptor instead.
func (*UpdateSysRoleResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{88}
}

type DelSysRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *DelSysRoleReq) Reset() {
	*x = DelSysRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelSysRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelSysRoleReq) ProtoMessage() {}

func (x *DelSysRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelSysRoleReq.ProtoReflect.Descriptor instead.
func (*DelSysRoleReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{89}
}

func (x *DelSysRoleReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DelSysRoleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelSysRoleResp) Reset() {
	*x = DelSysRoleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelSysRoleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelSysRoleResp) ProtoMessage() {}

func (x *DelSysRoleResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelSysRoleResp.ProtoReflect.Descriptor instead.
func (*DelSysRoleResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{90}
}

type GetSysRoleByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *GetSysRoleByIdReq) Reset() {
	*x = GetSysRoleByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSysRoleByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSysRoleByIdReq) ProtoMessage() {}

func (x *GetSysRoleByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSysRoleByIdReq.ProtoReflect.Descriptor instead.
func (*GetSysRoleByIdReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{91}
}

func (x *GetSysRoleByIdReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetSysRoleByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *SysRole `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"` //sysRole
}

func (x *GetSysRoleByIdResp) Reset() {
	*x = GetSysRoleByIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSysRoleByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSysRoleByIdResp) ProtoMessage() {}

func (x *GetSysRoleByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSysRoleByIdResp.ProtoReflect.Descriptor instead.
func (*GetSysRoleByIdResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{92}
}

func (x *GetSysRoleByIdResp) GetData() *SysRole {
	if x != nil {
		return x.Data
	}
	return nil
}

type SearchSysRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page        uint64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`         //page
	PageSize    uint64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"` //pageSize
	OrderStr    string `protobuf:"bytes,3,opt,name=orderStr,proto3" json:"orderStr,omitempty"`  //orderStr
	IsAsc       bool   `protobuf:"varint,4,opt,name=isAsc,proto3" json:"isAsc,omitempty"`       //isAsc
	RoleName    string `protobuf:"bytes,5,opt,name=roleName,proto3" json:"roleName,omitempty"`  //角色名称
	RoleCode    string `protobuf:"bytes,6,opt,name=roleCode,proto3" json:"roleCode,omitempty"`
	Description string `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"` //描述
	CreatedBy   string `protobuf:"bytes,8,opt,name=createdBy,proto3" json:"createdBy,omitempty"`     //创建人
	UpdatedBy   string `protobuf:"bytes,9,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`     //更新人
}

func (x *SearchSysRoleReq) Reset() {
	*x = SearchSysRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSysRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSysRoleReq) ProtoMessage() {}

func (x *SearchSysRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSysRoleReq.ProtoReflect.Descriptor instead.
func (*SearchSysRoleReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{93}
}

func (x *SearchSysRoleReq) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchSysRoleReq) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *SearchSysRoleReq) GetOrderStr() string {
	if x != nil {
		return x.OrderStr
	}
	return ""
}

func (x *SearchSysRoleReq) GetIsAsc() bool {
	if x != nil {
		return x.IsAsc
	}
	return false
}

func (x *SearchSysRoleReq) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *SearchSysRoleReq) GetRoleCode() string {
	if x != nil {
		return x.RoleCode
	}
	return ""
}

func (x *SearchSysRoleReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SearchSysRoleReq) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *SearchSysRoleReq) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

type SearchSysRoleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  []*SysRole `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`    //sysRole
	Total uint64     `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` //total
}

func (x *SearchSysRoleResp) Reset() {
	*x = SearchSysRoleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSysRoleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSysRoleResp) ProtoMessage() {}

func (x *SearchSysRoleResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSysRoleResp.ProtoReflect.Descriptor instead.
func (*SearchSysRoleResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{94}
}

func (x *SearchSysRoleResp) GetData() []*SysRole {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SearchSysRoleResp) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 角色绑定权限
type BindRolePermissionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId        uint64   `protobuf:"varint,1,opt,name=roleId,proto3" json:"roleId,omitempty"`                      //角色ID
	PermissionIds []uint64 `protobuf:"varint,2,rep,packed,name=permissionIds,proto3" json:"permissionIds,omitempty"` //权限ID列表
}

func (x *BindRolePermissionReq) Reset() {
	*x = BindRolePermissionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindRolePermissionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindRolePermissionReq) ProtoMessage() {}

func (x *BindRolePermissionReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindRolePermissionReq.ProtoReflect.Descriptor instead.
func (*BindRolePermissionReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{95}
}

func (x *BindRolePermissionReq) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *BindRolePermissionReq) GetPermissionIds() []uint64 {
	if x != nil {
		return x.PermissionIds
	}
	return nil
}

type BindRolePermissionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BindRolePermissionResp) Reset() {
	*x = BindRolePermissionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindRolePermissionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindRolePermissionResp) ProtoMessage() {}

func (x *BindRolePermissionResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindRolePermissionResp.ProtoReflect.Descriptor instead.
func (*BindRolePermissionResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{96}
}

// 查询角色权限
type SearchRolePermissionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId uint64 `protobuf:"varint,1,opt,name=roleId,proto3" json:"roleId,omitempty"` //角色ID
}

func (x *SearchRolePermissionReq) Reset() {
	*x = SearchRolePermissionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRolePermissionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRolePermissionReq) ProtoMessage() {}

func (x *SearchRolePermissionReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRolePermissionReq.ProtoReflect.Descriptor instead.
func (*SearchRolePermissionReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{97}
}

func (x *SearchRolePermissionReq) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

type SearchRolePermissionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []uint64 `protobuf:"varint,1,rep,packed,name=data,proto3" json:"data,omitempty"` //permissionIds // TODO
}

func (x *SearchRolePermissionResp) Reset() {
	*x = SearchRolePermissionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRolePermissionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRolePermissionResp) ProtoMessage() {}

func (x *SearchRolePermissionResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRolePermissionResp.ProtoReflect.Descriptor instead.
func (*SearchRolePermissionResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{98}
}

func (x *SearchRolePermissionResp) GetData() []uint64 {
	if x != nil {
		return x.Data
	}
	return nil
}

// 角色绑定菜单
type BindRoleMenuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId  uint64   `protobuf:"varint,1,opt,name=roleId,proto3" json:"roleId,omitempty"`
	MenuIds []uint64 `protobuf:"varint,2,rep,packed,name=menuIds,proto3" json:"menuIds,omitempty"`
}

func (x *BindRoleMenuReq) Reset() {
	*x = BindRoleMenuReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindRoleMenuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindRoleMenuReq) ProtoMessage() {}

func (x *BindRoleMenuReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindRoleMenuReq.ProtoReflect.Descriptor instead.
func (*BindRoleMenuReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{99}
}

func (x *BindRoleMenuReq) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *BindRoleMenuReq) GetMenuIds() []uint64 {
	if x != nil {
		return x.MenuIds
	}
	return nil
}

type BindRoleMenuResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BindRoleMenuResp) Reset() {
	*x = BindRoleMenuResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindRoleMenuResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindRoleMenuResp) ProtoMessage() {}

func (x *BindRoleMenuResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindRoleMenuResp.ProtoReflect.Descriptor instead.
func (*BindRoleMenuResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{100}
}

type SearchRoleMenuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId uint64 `protobuf:"varint,1,opt,name=roleId,proto3" json:"roleId,omitempty"`
}

func (x *SearchRoleMenuReq) Reset() {
	*x = SearchRoleMenuReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRoleMenuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRoleMenuReq) ProtoMessage() {}

func (x *SearchRoleMenuReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRoleMenuReq.ProtoReflect.Descriptor instead.
func (*SearchRoleMenuReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{101}
}

func (x *SearchRoleMenuReq) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

type SearchRoleMenuResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []uint64 `protobuf:"varint,1,rep,packed,name=data,proto3" json:"data,omitempty"` //menuIds // TODO
}

func (x *SearchRoleMenuResp) Reset() {
	*x = SearchRoleMenuResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRoleMenuResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRoleMenuResp) ProtoMessage() {}

func (x *SearchRoleMenuResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRoleMenuResp.ProtoReflect.Descriptor instead.
func (*SearchRoleMenuResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{102}
}

func (x *SearchRoleMenuResp) GetData() []uint64 {
	if x != nil {
		return x.Data
	}
	return nil
}

// 查询权限IDS
type SearchRolePermissionIdsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId uint64 `protobuf:"varint,1,opt,name=roleId,proto3" json:"roleId,omitempty"`
}

func (x *SearchRolePermissionIdsReq) Reset() {
	*x = SearchRolePermissionIdsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRolePermissionIdsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRolePermissionIdsReq) ProtoMessage() {}

func (x *SearchRolePermissionIdsReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRolePermissionIdsReq.ProtoReflect.Descriptor instead.
func (*SearchRolePermissionIdsReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{103}
}

func (x *SearchRolePermissionIdsReq) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

type SearchRolePermissionIdsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []uint64 `protobuf:"varint,1,rep,packed,name=data,proto3" json:"data,omitempty"` //permissionIds // TODO
}

func (x *SearchRolePermissionIdsResp) Reset() {
	*x = SearchRolePermissionIdsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRolePermissionIdsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRolePermissionIdsResp) ProtoMessage() {}

func (x *SearchRolePermissionIdsResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRolePermissionIdsResp.ProtoReflect.Descriptor instead.
func (*SearchRolePermissionIdsResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{104}
}

func (x *SearchRolePermissionIdsResp) GetData() []uint64 {
	if x != nil {
		return x.Data
	}
	return nil
}

// 获取令牌的请求消息
type GetTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account  string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`   // 账号
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"` // 密码
}

func (x *GetTokenRequest) Reset() {
	*x = GetTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenRequest) ProtoMessage() {}

func (x *GetTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenRequest.ProtoReflect.Descriptor instead.
func (*GetTokenRequest) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{105}
}

func (x *GetTokenRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *GetTokenRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// Token 响应消息，包含访问令牌和刷新令牌
type TokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken      string `protobuf:"bytes,1,opt,name=accessToken,proto3" json:"accessToken,omitempty"`            // 访问令牌
	AccessExpiresIn  int64  `protobuf:"varint,2,opt,name=accessExpiresIn,proto3" json:"accessExpiresIn,omitempty"`   // 访问令牌过期时间（秒）
	RefreshToken     string `protobuf:"bytes,3,opt,name=refreshToken,proto3" json:"refreshToken,omitempty"`          // 刷新令牌
	RefreshExpiresIn int64  `protobuf:"varint,4,opt,name=refreshExpiresIn,proto3" json:"refreshExpiresIn,omitempty"` // 刷新令牌过期时间（秒）
}

func (x *TokenResponse) Reset() {
	*x = TokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenResponse) ProtoMessage() {}

func (x *TokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenResponse.ProtoReflect.Descriptor instead.
func (*TokenResponse) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{106}
}

func (x *TokenResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *TokenResponse) GetAccessExpiresIn() int64 {
	if x != nil {
		return x.AccessExpiresIn
	}
	return 0
}

func (x *TokenResponse) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *TokenResponse) GetRefreshExpiresIn() int64 {
	if x != nil {
		return x.RefreshExpiresIn
	}
	return 0
}

// 获取令牌的响应消息
type GetTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint64         `protobuf:"varint,1,opt,name=accountId,proto3" json:"accountId,omitempty"` // 账号ID
	Account   string         `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`      // 账号
	UserName  string         `protobuf:"bytes,3,opt,name=userName,proto3" json:"userName,omitempty"`    // 用户名
	Uuid      string         `protobuf:"bytes,4,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Roles     []string       `protobuf:"bytes,5,rep,name=roles,proto3" json:"roles,omitempty"` // 角色列表
	Token     *TokenResponse `protobuf:"bytes,6,opt,name=token,proto3" json:"token,omitempty"` // 令牌信息
}

func (x *GetTokenResponse) Reset() {
	*x = GetTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenResponse) ProtoMessage() {}

func (x *GetTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenResponse.ProtoReflect.Descriptor instead.
func (*GetTokenResponse) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{107}
}

func (x *GetTokenResponse) GetAccountId() uint64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *GetTokenResponse) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *GetTokenResponse) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *GetTokenResponse) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetTokenResponse) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *GetTokenResponse) GetToken() *TokenResponse {
	if x != nil {
		return x.Token
	}
	return nil
}

// 验证令牌的请求消息
type VerifyTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` // 令牌
}

func (x *VerifyTokenRequest) Reset() {
	*x = VerifyTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyTokenRequest) ProtoMessage() {}

func (x *VerifyTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyTokenRequest.ProtoReflect.Descriptor instead.
func (*VerifyTokenRequest) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{108}
}

func (x *VerifyTokenRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// 验证令牌的响应消息
type VerifyTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsValid      bool     `protobuf:"varint,1,opt,name=isValid,proto3" json:"isValid,omitempty"`          // 令牌是否有效
	ErrorType    int64    `protobuf:"varint,2,opt,name=errorType,proto3" json:"errorType,omitempty"`      // 错误类型
	ErrorMessage string   `protobuf:"bytes,3,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"` // 错误信息
	ExpireTime   int64    `protobuf:"varint,4,opt,name=expireTime,proto3" json:"expireTime,omitempty"`    // 过期时间（Unix 时间戳）
	AccountId    uint64   `protobuf:"varint,5,opt,name=accountId,proto3" json:"accountId,omitempty"`      // 账号ID
	Account      string   `protobuf:"bytes,6,opt,name=account,proto3" json:"account,omitempty"`           // 账号
	Uuid         string   `protobuf:"bytes,7,opt,name=uuid,proto3" json:"uuid,omitempty"`                 // 用户UUID
	UserName     string   `protobuf:"bytes,8,opt,name=userName,proto3" json:"userName,omitempty"`         // 用户名
	Roles        []string `protobuf:"bytes,9,rep,name=roles,proto3" json:"roles,omitempty"`               // 角色列表
}

func (x *VerifyTokenResponse) Reset() {
	*x = VerifyTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyTokenResponse) ProtoMessage() {}

func (x *VerifyTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyTokenResponse.ProtoReflect.Descriptor instead.
func (*VerifyTokenResponse) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{109}
}

func (x *VerifyTokenResponse) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *VerifyTokenResponse) GetErrorType() int64 {
	if x != nil {
		return x.ErrorType
	}
	return 0
}

func (x *VerifyTokenResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *VerifyTokenResponse) GetExpireTime() int64 {
	if x != nil {
		return x.ExpireTime
	}
	return 0
}

func (x *VerifyTokenResponse) GetAccountId() uint64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *VerifyTokenResponse) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *VerifyTokenResponse) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *VerifyTokenResponse) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *VerifyTokenResponse) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

// 注销的请求消息
type LogoutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"` // 用户UUID
	Uuid    string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *LogoutRequest) Reset() {
	*x = LogoutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutRequest) ProtoMessage() {}

func (x *LogoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutRequest.ProtoReflect.Descriptor instead.
func (*LogoutRequest) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{110}
}

func (x *LogoutRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *LogoutRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

// 注销的响应消息
type LogoutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LogoutResponse) Reset() {
	*x = LogoutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutResponse) ProtoMessage() {}

func (x *LogoutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutResponse.ProtoReflect.Descriptor instead.
func (*LogoutResponse) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{111}
}

// 刷新令牌的请求消息
type RefreshTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefreshToken string `protobuf:"bytes,1,opt,name=refreshToken,proto3" json:"refreshToken,omitempty"` // 刷新令牌
}

func (x *RefreshTokenRequest) Reset() {
	*x = RefreshTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenRequest) ProtoMessage() {}

func (x *RefreshTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenRequest.ProtoReflect.Descriptor instead.
func (*RefreshTokenRequest) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{112}
}

func (x *RefreshTokenRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

// 刷新令牌的响应消息
type RefreshTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken     string `protobuf:"bytes,1,opt,name=accessToken,proto3" json:"accessToken,omitempty"`          // 访问令牌
	AccessExpiresIn int64  `protobuf:"varint,2,opt,name=accessExpiresIn,proto3" json:"accessExpiresIn,omitempty"` // 访问令牌过期时间（秒）
}

func (x *RefreshTokenResponse) Reset() {
	*x = RefreshTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenResponse) ProtoMessage() {}

func (x *RefreshTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenResponse.ProtoReflect.Descriptor instead.
func (*RefreshTokenResponse) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{113}
}

func (x *RefreshTokenResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *RefreshTokenResponse) GetAccessExpiresIn() int64 {
	if x != nil {
		return x.AccessExpiresIn
	}
	return 0
}

// --------------------------------字典表--------------------------------
type SysDict struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                  //自增主键
	DictName    string `protobuf:"bytes,2,opt,name=dictName,proto3" json:"dictName,omitempty"`       //字典名称
	DictCode    string `protobuf:"bytes,3,opt,name=dictCode,proto3" json:"dictCode,omitempty"`       //字典编码
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"` //描述
	CreatedBy   string `protobuf:"bytes,5,opt,name=createdBy,proto3" json:"createdBy,omitempty"`     //创建人
	UpdatedBy   string `protobuf:"bytes,6,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`     //更新人
	CreatedAt   int64  `protobuf:"varint,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`    //创建时间
	UpdatedAt   int64  `protobuf:"varint,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`    //最后修改时间
}

func (x *SysDict) Reset() {
	*x = SysDict{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysDict) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysDict) ProtoMessage() {}

func (x *SysDict) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysDict.ProtoReflect.Descriptor instead.
func (*SysDict) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{114}
}

func (x *SysDict) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysDict) GetDictName() string {
	if x != nil {
		return x.DictName
	}
	return ""
}

func (x *SysDict) GetDictCode() string {
	if x != nil {
		return x.DictCode
	}
	return ""
}

func (x *SysDict) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SysDict) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *SysDict) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *SysDict) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SysDict) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type AddSysDictReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictName    string `protobuf:"bytes,1,opt,name=dictName,proto3" json:"dictName,omitempty"`       //字典名称
	DictCode    string `protobuf:"bytes,2,opt,name=dictCode,proto3" json:"dictCode,omitempty"`       //字典编码
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"` //描述
	CreatedBy   string `protobuf:"bytes,4,opt,name=createdBy,proto3" json:"createdBy,omitempty"`     //创建人
	UpdatedBy   string `protobuf:"bytes,5,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`     //更新人
}

func (x *AddSysDictReq) Reset() {
	*x = AddSysDictReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSysDictReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSysDictReq) ProtoMessage() {}

func (x *AddSysDictReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSysDictReq.ProtoReflect.Descriptor instead.
func (*AddSysDictReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{115}
}

func (x *AddSysDictReq) GetDictName() string {
	if x != nil {
		return x.DictName
	}
	return ""
}

func (x *AddSysDictReq) GetDictCode() string {
	if x != nil {
		return x.DictCode
	}
	return ""
}

func (x *AddSysDictReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddSysDictReq) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *AddSysDictReq) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

type AddSysDictResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddSysDictResp) Reset() {
	*x = AddSysDictResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSysDictResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSysDictResp) ProtoMessage() {}

func (x *AddSysDictResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSysDictResp.ProtoReflect.Descriptor instead.
func (*AddSysDictResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{116}
}

type UpdateSysDictReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                  //自增主键
	DictName    string `protobuf:"bytes,2,opt,name=dictName,proto3" json:"dictName,omitempty"`       //字典名称
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"` //描述
	UpdatedBy   string `protobuf:"bytes,4,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`     //更新人
}

func (x *UpdateSysDictReq) Reset() {
	*x = UpdateSysDictReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSysDictReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSysDictReq) ProtoMessage() {}

func (x *UpdateSysDictReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSysDictReq.ProtoReflect.Descriptor instead.
func (*UpdateSysDictReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{117}
}

func (x *UpdateSysDictReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateSysDictReq) GetDictName() string {
	if x != nil {
		return x.DictName
	}
	return ""
}

func (x *UpdateSysDictReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateSysDictReq) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

type UpdateSysDictResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateSysDictResp) Reset() {
	*x = UpdateSysDictResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSysDictResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSysDictResp) ProtoMessage() {}

func (x *UpdateSysDictResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSysDictResp.ProtoReflect.Descriptor instead.
func (*UpdateSysDictResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{118}
}

type DelSysDictReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
	UpdatedBy string `protobuf:"bytes,2,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
}

func (x *DelSysDictReq) Reset() {
	*x = DelSysDictReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelSysDictReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelSysDictReq) ProtoMessage() {}

func (x *DelSysDictReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelSysDictReq.ProtoReflect.Descriptor instead.
func (*DelSysDictReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{119}
}

func (x *DelSysDictReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DelSysDictReq) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

type DelSysDictResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelSysDictResp) Reset() {
	*x = DelSysDictResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelSysDictResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelSysDictResp) ProtoMessage() {}

func (x *DelSysDictResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelSysDictResp.ProtoReflect.Descriptor instead.
func (*DelSysDictResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{120}
}

type GetSysDictByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *GetSysDictByIdReq) Reset() {
	*x = GetSysDictByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSysDictByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSysDictByIdReq) ProtoMessage() {}

func (x *GetSysDictByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSysDictByIdReq.ProtoReflect.Descriptor instead.
func (*GetSysDictByIdReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{121}
}

func (x *GetSysDictByIdReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetSysDictByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *SysDict `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"` //sysDict
}

func (x *GetSysDictByIdResp) Reset() {
	*x = GetSysDictByIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSysDictByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSysDictByIdResp) ProtoMessage() {}

func (x *GetSysDictByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSysDictByIdResp.ProtoReflect.Descriptor instead.
func (*GetSysDictByIdResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{122}
}

func (x *GetSysDictByIdResp) GetData() *SysDict {
	if x != nil {
		return x.Data
	}
	return nil
}

type SearchSysDictReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page        uint64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`              //page
	PageSize    uint64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`      //pageSize
	OrderStr    string `protobuf:"bytes,3,opt,name=orderStr,proto3" json:"orderStr,omitempty"`       //orderStr
	IsAsc       bool   `protobuf:"varint,4,opt,name=isAsc,proto3" json:"isAsc,omitempty"`            //isAsc
	DictName    string `protobuf:"bytes,5,opt,name=dictName,proto3" json:"dictName,omitempty"`       //字典名称
	DictCode    string `protobuf:"bytes,6,opt,name=dictCode,proto3" json:"dictCode,omitempty"`       //字典编码
	Description string `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"` //描述
	CreatedBy   string `protobuf:"bytes,9,opt,name=createdBy,proto3" json:"createdBy,omitempty"`     //创建人
	UpdatedBy   string `protobuf:"bytes,10,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`    //更新人
}

func (x *SearchSysDictReq) Reset() {
	*x = SearchSysDictReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSysDictReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSysDictReq) ProtoMessage() {}

func (x *SearchSysDictReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSysDictReq.ProtoReflect.Descriptor instead.
func (*SearchSysDictReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{123}
}

func (x *SearchSysDictReq) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchSysDictReq) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *SearchSysDictReq) GetOrderStr() string {
	if x != nil {
		return x.OrderStr
	}
	return ""
}

func (x *SearchSysDictReq) GetIsAsc() bool {
	if x != nil {
		return x.IsAsc
	}
	return false
}

func (x *SearchSysDictReq) GetDictName() string {
	if x != nil {
		return x.DictName
	}
	return ""
}

func (x *SearchSysDictReq) GetDictCode() string {
	if x != nil {
		return x.DictCode
	}
	return ""
}

func (x *SearchSysDictReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SearchSysDictReq) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *SearchSysDictReq) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

type SearchSysDictResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  []*SysDict `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`    //sysDict
	Total uint64     `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` //total
}

func (x *SearchSysDictResp) Reset() {
	*x = SearchSysDictResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSysDictResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSysDictResp) ProtoMessage() {}

func (x *SearchSysDictResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSysDictResp.ProtoReflect.Descriptor instead.
func (*SearchSysDictResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{124}
}

func (x *SearchSysDictResp) GetData() []*SysDict {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SearchSysDictResp) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// --------------------------------字典数据表--------------------------------
type SysDictItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                  //自增主键
	DictCode    string `protobuf:"bytes,2,opt,name=dictCode,proto3" json:"dictCode,omitempty"`       //字典ID，关联 sys_dict 表
	ItemText    string `protobuf:"bytes,3,opt,name=itemText,proto3" json:"itemText,omitempty"`       //字典项文本
	ItemCode    string `protobuf:"bytes,4,opt,name=itemCode,proto3" json:"itemCode,omitempty"`       //字典项值
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"` //描述
	SortOrder   int64  `protobuf:"varint,6,opt,name=sortOrder,proto3" json:"sortOrder,omitempty"`    //排序
	CreatedBy   string `protobuf:"bytes,7,opt,name=createdBy,proto3" json:"createdBy,omitempty"`     //创建人
	UpdatedBy   string `protobuf:"bytes,8,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`     //更新人
	CreatedAt   int64  `protobuf:"varint,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`    //创建时间
	UpdatedAt   int64  `protobuf:"varint,10,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`   //最后修改时间
}

func (x *SysDictItem) Reset() {
	*x = SysDictItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysDictItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysDictItem) ProtoMessage() {}

func (x *SysDictItem) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysDictItem.ProtoReflect.Descriptor instead.
func (*SysDictItem) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{125}
}

func (x *SysDictItem) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysDictItem) GetDictCode() string {
	if x != nil {
		return x.DictCode
	}
	return ""
}

func (x *SysDictItem) GetItemText() string {
	if x != nil {
		return x.ItemText
	}
	return ""
}

func (x *SysDictItem) GetItemCode() string {
	if x != nil {
		return x.ItemCode
	}
	return ""
}

func (x *SysDictItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SysDictItem) GetSortOrder() int64 {
	if x != nil {
		return x.SortOrder
	}
	return 0
}

func (x *SysDictItem) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *SysDictItem) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *SysDictItem) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SysDictItem) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type AddSysDictItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictCode    string `protobuf:"bytes,1,opt,name=dictCode,proto3" json:"dictCode,omitempty"`       //字典ID，关联 sys_dict 表
	ItemText    string `protobuf:"bytes,2,opt,name=itemText,proto3" json:"itemText,omitempty"`       //字典项文本
	ItemCode    string `protobuf:"bytes,3,opt,name=itemCode,proto3" json:"itemCode,omitempty"`       //字典项值
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"` //描述
	SortOrder   int64  `protobuf:"varint,5,opt,name=sortOrder,proto3" json:"sortOrder,omitempty"`    //排序
	CreatedBy   string `protobuf:"bytes,6,opt,name=createdBy,proto3" json:"createdBy,omitempty"`     //创建人
	UpdatedBy   string `protobuf:"bytes,7,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`     //更新人
}

func (x *AddSysDictItemReq) Reset() {
	*x = AddSysDictItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSysDictItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSysDictItemReq) ProtoMessage() {}

func (x *AddSysDictItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSysDictItemReq.ProtoReflect.Descriptor instead.
func (*AddSysDictItemReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{126}
}

func (x *AddSysDictItemReq) GetDictCode() string {
	if x != nil {
		return x.DictCode
	}
	return ""
}

func (x *AddSysDictItemReq) GetItemText() string {
	if x != nil {
		return x.ItemText
	}
	return ""
}

func (x *AddSysDictItemReq) GetItemCode() string {
	if x != nil {
		return x.ItemCode
	}
	return ""
}

func (x *AddSysDictItemReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddSysDictItemReq) GetSortOrder() int64 {
	if x != nil {
		return x.SortOrder
	}
	return 0
}

func (x *AddSysDictItemReq) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *AddSysDictItemReq) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

type AddSysDictItemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddSysDictItemResp) Reset() {
	*x = AddSysDictItemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSysDictItemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSysDictItemResp) ProtoMessage() {}

func (x *AddSysDictItemResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSysDictItemResp.ProtoReflect.Descriptor instead.
func (*AddSysDictItemResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{127}
}

type UpdateSysDictItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                  //自增主键
	ItemText    string `protobuf:"bytes,2,opt,name=itemText,proto3" json:"itemText,omitempty"`       //字典项文本
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"` //描述
	SortOrder   int64  `protobuf:"varint,4,opt,name=sortOrder,proto3" json:"sortOrder,omitempty"`    //排序
	UpdatedBy   string `protobuf:"bytes,5,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`     //更新人
}

func (x *UpdateSysDictItemReq) Reset() {
	*x = UpdateSysDictItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSysDictItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSysDictItemReq) ProtoMessage() {}

func (x *UpdateSysDictItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSysDictItemReq.ProtoReflect.Descriptor instead.
func (*UpdateSysDictItemReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{128}
}

func (x *UpdateSysDictItemReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateSysDictItemReq) GetItemText() string {
	if x != nil {
		return x.ItemText
	}
	return ""
}

func (x *UpdateSysDictItemReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateSysDictItemReq) GetSortOrder() int64 {
	if x != nil {
		return x.SortOrder
	}
	return 0
}

func (x *UpdateSysDictItemReq) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

type UpdateSysDictItemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateSysDictItemResp) Reset() {
	*x = UpdateSysDictItemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSysDictItemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSysDictItemResp) ProtoMessage() {}

func (x *UpdateSysDictItemResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSysDictItemResp.ProtoReflect.Descriptor instead.
func (*UpdateSysDictItemResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{129}
}

type DelSysDictItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
	UpdatedBy string `protobuf:"bytes,2,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
}

func (x *DelSysDictItemReq) Reset() {
	*x = DelSysDictItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelSysDictItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelSysDictItemReq) ProtoMessage() {}

func (x *DelSysDictItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelSysDictItemReq.ProtoReflect.Descriptor instead.
func (*DelSysDictItemReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{130}
}

func (x *DelSysDictItemReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DelSysDictItemReq) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

type DelSysDictItemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelSysDictItemResp) Reset() {
	*x = DelSysDictItemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelSysDictItemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelSysDictItemResp) ProtoMessage() {}

func (x *DelSysDictItemResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelSysDictItemResp.ProtoReflect.Descriptor instead.
func (*DelSysDictItemResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{131}
}

type GetSysDictItemByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *GetSysDictItemByIdReq) Reset() {
	*x = GetSysDictItemByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSysDictItemByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSysDictItemByIdReq) ProtoMessage() {}

func (x *GetSysDictItemByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSysDictItemByIdReq.ProtoReflect.Descriptor instead.
func (*GetSysDictItemByIdReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{132}
}

func (x *GetSysDictItemByIdReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetSysDictItemByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *SysDictItem `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"` //sysDictItem
}

func (x *GetSysDictItemByIdResp) Reset() {
	*x = GetSysDictItemByIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSysDictItemByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSysDictItemByIdResp) ProtoMessage() {}

func (x *GetSysDictItemByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSysDictItemByIdResp.ProtoReflect.Descriptor instead.
func (*GetSysDictItemByIdResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{133}
}

func (x *GetSysDictItemByIdResp) GetData() *SysDictItem {
	if x != nil {
		return x.Data
	}
	return nil
}

type SearchSysDictItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page        uint64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`              //page
	PageSize    uint64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`      //pageSize
	OrderStr    string `protobuf:"bytes,3,opt,name=orderStr,proto3" json:"orderStr,omitempty"`       //orderStr
	IsAsc       bool   `protobuf:"varint,4,opt,name=isAsc,proto3" json:"isAsc,omitempty"`            //isAsc
	DictCode    string `protobuf:"bytes,5,opt,name=dictCode,proto3" json:"dictCode,omitempty"`       //字典ID，关联 sys_dict 表
	ItemText    string `protobuf:"bytes,6,opt,name=itemText,proto3" json:"itemText,omitempty"`       //字典项文本
	ItemCode    string `protobuf:"bytes,7,opt,name=itemCode,proto3" json:"itemCode,omitempty"`       //字典项值
	Description string `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"` //描述
	CreatedBy   string `protobuf:"bytes,9,opt,name=createdBy,proto3" json:"createdBy,omitempty"`     //创建人
	UpdatedBy   string `protobuf:"bytes,10,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`    //更新人
}

func (x *SearchSysDictItemReq) Reset() {
	*x = SearchSysDictItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSysDictItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSysDictItemReq) ProtoMessage() {}

func (x *SearchSysDictItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSysDictItemReq.ProtoReflect.Descriptor instead.
func (*SearchSysDictItemReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{134}
}

func (x *SearchSysDictItemReq) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchSysDictItemReq) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *SearchSysDictItemReq) GetOrderStr() string {
	if x != nil {
		return x.OrderStr
	}
	return ""
}

func (x *SearchSysDictItemReq) GetIsAsc() bool {
	if x != nil {
		return x.IsAsc
	}
	return false
}

func (x *SearchSysDictItemReq) GetDictCode() string {
	if x != nil {
		return x.DictCode
	}
	return ""
}

func (x *SearchSysDictItemReq) GetItemText() string {
	if x != nil {
		return x.ItemText
	}
	return ""
}

func (x *SearchSysDictItemReq) GetItemCode() string {
	if x != nil {
		return x.ItemCode
	}
	return ""
}

func (x *SearchSysDictItemReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SearchSysDictItemReq) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *SearchSysDictItemReq) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

type SearchSysDictItemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  []*SysDictItem `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`    //sysDictItem
	Total uint64         `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` //total
}

func (x *SearchSysDictItemResp) Reset() {
	*x = SearchSysDictItemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSysDictItemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSysDictItemResp) ProtoMessage() {}

func (x *SearchSysDictItemResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSysDictItemResp.ProtoReflect.Descriptor instead.
func (*SearchSysDictItemResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{135}
}

func (x *SearchSysDictItemResp) GetData() []*SysDictItem {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SearchSysDictItemResp) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 根据ItemCode 检查数据是否存在
type CheckDictItemCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictCode string `protobuf:"bytes,1,opt,name=dictCode,proto3" json:"dictCode,omitempty"` //字典ID，关联 sys_dict 表
	ItemCode string `protobuf:"bytes,2,opt,name=itemCode,proto3" json:"itemCode,omitempty"` //字典项值
}

func (x *CheckDictItemCodeReq) Reset() {
	*x = CheckDictItemCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckDictItemCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckDictItemCodeReq) ProtoMessage() {}

func (x *CheckDictItemCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckDictItemCodeReq.ProtoReflect.Descriptor instead.
func (*CheckDictItemCodeReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{136}
}

func (x *CheckDictItemCodeReq) GetDictCode() string {
	if x != nil {
		return x.DictCode
	}
	return ""
}

func (x *CheckDictItemCodeReq) GetItemCode() string {
	if x != nil {
		return x.ItemCode
	}
	return ""
}

type CheckDictItemCodeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CheckDictItemCodeResp) Reset() {
	*x = CheckDictItemCodeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckDictItemCodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckDictItemCodeResp) ProtoMessage() {}

func (x *CheckDictItemCodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckDictItemCodeResp.ProtoReflect.Descriptor instead.
func (*CheckDictItemCodeResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{137}
}

// 根据 itemCode 获取字典 name
type GetDictItemNameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictCode string `protobuf:"bytes,1,opt,name=dictCode,proto3" json:"dictCode,omitempty"` //字典ID，关联 sys_dict 表
	ItemCode string `protobuf:"bytes,2,opt,name=itemCode,proto3" json:"itemCode,omitempty"` //字典项值
}

func (x *GetDictItemNameReq) Reset() {
	*x = GetDictItemNameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDictItemNameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDictItemNameReq) ProtoMessage() {}

func (x *GetDictItemNameReq) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDictItemNameReq.ProtoReflect.Descriptor instead.
func (*GetDictItemNameReq) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{138}
}

func (x *GetDictItemNameReq) GetDictCode() string {
	if x != nil {
		return x.DictCode
	}
	return ""
}

func (x *GetDictItemNameReq) GetItemCode() string {
	if x != nil {
		return x.ItemCode
	}
	return ""
}

type GetDictItemTextResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemText string `protobuf:"bytes,1,opt,name=itemText,proto3" json:"itemText,omitempty"` //字典项文本
}

func (x *GetDictItemTextResp) Reset() {
	*x = GetDictItemTextResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDictItemTextResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDictItemTextResp) ProtoMessage() {}

func (x *GetDictItemTextResp) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDictItemTextResp.ProtoReflect.Descriptor instead.
func (*GetDictItemTextResp) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{139}
}

func (x *GetDictItemTextResp) GetItemText() string {
	if x != nil {
		return x.ItemText
	}
	return ""
}

// 上传图片请求消息
type UploadImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageData []byte `protobuf:"bytes,1,opt,name=imageData,proto3" json:"imageData,omitempty"` // 图片的二进制数据
	FileName  string `protobuf:"bytes,2,opt,name=fileName,proto3" json:"fileName,omitempty"`   // 图片文件的名称
	Project   string `protobuf:"bytes,3,opt,name=project,proto3" json:"project,omitempty"`     // 项目名称
}

func (x *UploadImageRequest) Reset() {
	*x = UploadImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadImageRequest) ProtoMessage() {}

func (x *UploadImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadImageRequest.ProtoReflect.Descriptor instead.
func (*UploadImageRequest) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{140}
}

func (x *UploadImageRequest) GetImageData() []byte {
	if x != nil {
		return x.ImageData
	}
	return nil
}

func (x *UploadImageRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *UploadImageRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

// 上传图片响应消息
type UploadImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageUri string `protobuf:"bytes,1,opt,name=imageUri,proto3" json:"imageUri,omitempty"` // 图片名称
	ImageUrl string `protobuf:"bytes,2,opt,name=imageUrl,proto3" json:"imageUrl,omitempty"`
}

func (x *UploadImageResponse) Reset() {
	*x = UploadImageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadImageResponse) ProtoMessage() {}

func (x *UploadImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadImageResponse.ProtoReflect.Descriptor instead.
func (*UploadImageResponse) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{141}
}

func (x *UploadImageResponse) GetImageUri() string {
	if x != nil {
		return x.ImageUri
	}
	return ""
}

func (x *UploadImageResponse) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

var File_portal_proto protoreflect.FileDescriptor

var file_portal_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02,
	0x70, 0x62, 0x22, 0xdb, 0x03, 0x0a, 0x07, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x69, 0x72, 0x65, 0x44, 0x61,
	0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x68, 0x69, 0x72, 0x65, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x49, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x49, 0x73, 0x52,
	0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x69, 0x73, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x69,
	0x73, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x24,
	0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0xf7, 0x01, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x69, 0x72, 0x65, 0x44, 0x61,
	0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x68, 0x69, 0x72, 0x65, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x41, 0x64,
	0x64, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x6c, 0x0a, 0x10,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x13, 0x0a, 0x11, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x1f, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x10, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x23, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x35, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x79,
	0x73, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1f, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62,
	0x2e, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xf2,
	0x03, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x73, 0x41, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x69, 0x73, 0x41, 0x73, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x6f, 0x72,
	0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77,
	0x6f, 0x72, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x69, 0x72,
	0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x68, 0x69, 0x72,
	0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x69, 0x73, 0x44, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x4c, 0x65, 0x61, 0x76, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x69, 0x73, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x26, 0x0a, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x4c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x12, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x45, 0x6e, 0x64, 0x4c, 0x61,
	0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x10, 0x45, 0x6e, 0x64, 0x4c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x4a, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x79, 0x73,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x79, 0x73, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22,
	0x22, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x43, 0x0a, 0x11, 0x46, 0x72, 0x6f, 0x7a,
	0x65, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x14, 0x0a,
	0x12, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x91, 0x01, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x6c, 0x64,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6f, 0x6c, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6e,
	0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x28, 0x0a,
	0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0xf6, 0x01,
	0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x79,
	0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x69, 0x72, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x68, 0x69, 0x72, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x26,
	0x0a, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x1a, 0x0a, 0x08, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x0b, 0x0a,
	0x09, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x37, 0x0a, 0x0b, 0x42, 0x69,
	0x6e, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65,
	0x49, 0x64, 0x73, 0x22, 0x0e, 0x0a, 0x0c, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x24, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4d, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x52, 0x6f, 0x6c, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x04, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x6f,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x2a, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0xa5, 0x03, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x68, 0x69, 0x72, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x68, 0x69, 0x72, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x2a, 0x0a, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x61,
	0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x33, 0x0a, 0x0d,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x22, 0x10, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x22, 0xdf, 0x07, 0x0a, 0x07, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x49, 0x63, 0x6f,
	0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x66, 0x66, 0x69, 0x78, 0x54, 0x61, 0x62, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x66, 0x66, 0x69, 0x78, 0x54, 0x61, 0x62, 0x12, 0x24, 0x0a,
	0x0d, 0x61, 0x66, 0x66, 0x69, 0x78, 0x54, 0x61, 0x62, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x61, 0x66, 0x66, 0x69, 0x78, 0x54, 0x61, 0x62, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x62, 0x61, 0x64,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70,
	0x62, 0x2e, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x42, 0x61, 0x64, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x09, 0x62, 0x61, 0x64, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x62, 0x61, 0x64, 0x67, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x61, 0x64, 0x67, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x68, 0x69, 0x64, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64,
	0x72, 0x65, 0x6e, 0x49, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x12, 0x68, 0x69, 0x64, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x49, 0x6e, 0x4d,
	0x65, 0x6e, 0x75, 0x12, 0x2a, 0x0a, 0x10, 0x68, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x42, 0x72, 0x65,
	0x61, 0x64, 0x63, 0x72, 0x75, 0x6d, 0x62, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x68,
	0x69, 0x64, 0x65, 0x49, 0x6e, 0x42, 0x72, 0x65, 0x61, 0x64, 0x63, 0x72, 0x75, 0x6d, 0x62, 0x12,
	0x1e, 0x0a, 0x0a, 0x68, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x68, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x12,
	0x1c, 0x0a, 0x09, 0x68, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x54, 0x61, 0x62, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x68, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x54, 0x61, 0x62, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x53, 0x72, 0x63, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x53, 0x72, 0x63, 0x12,
	0x22, 0x0a, 0x0c, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x18,
	0x1a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x12, 0x28, 0x0a,
	0x0f, 0x6d, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x4f, 0x66, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x61, 0x62,
	0x18, 0x1b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6d, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x4f, 0x66,
	0x4f, 0x70, 0x65, 0x6e, 0x54, 0x61, 0x62, 0x12, 0x3a, 0x0a, 0x18, 0x6d, 0x65, 0x6e, 0x75, 0x56,
	0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x57, 0x69, 0x74, 0x68, 0x46, 0x6f, 0x72, 0x62, 0x69, 0x64,
	0x64, 0x65, 0x6e, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x18, 0x6d, 0x65, 0x6e, 0x75, 0x56,
	0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x57, 0x69, 0x74, 0x68, 0x46, 0x6f, 0x72, 0x62, 0x69, 0x64,
	0x64, 0x65, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x6e, 0x4e, 0x65, 0x77,
	0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6f, 0x70,
	0x65, 0x6e, 0x49, 0x6e, 0x4e, 0x65, 0x77, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x1a, 0x0a,
	0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0xd5, 0x07, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x53, 0x79, 0x73,
	0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x73, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x66, 0x66,
	0x69, 0x78, 0x54, 0x61, 0x62, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x66, 0x66,
	0x69, 0x78, 0x54, 0x61, 0x62, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x66, 0x66, 0x69, 0x78, 0x54, 0x61,
	0x62, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x61, 0x66,
	0x66, 0x69, 0x78, 0x54, 0x61, 0x62, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x62,
	0x61, 0x64, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x61, 0x64, 0x67,
	0x65, 0x12, 0x32, 0x0a, 0x09, 0x62, 0x61, 0x64, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e,
	0x75, 0x42, 0x61, 0x64, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x62, 0x61, 0x64, 0x67,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x61, 0x64, 0x67, 0x65, 0x56, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x61,
	0x64, 0x67, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x68,
	0x69, 0x64, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x49, 0x6e, 0x4d, 0x65, 0x6e,
	0x75, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x68, 0x69, 0x64, 0x65, 0x43, 0x68, 0x69,
	0x6c, 0x64, 0x72, 0x65, 0x6e, 0x49, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x2a, 0x0a, 0x10, 0x68,
	0x69, 0x64, 0x65, 0x49, 0x6e, 0x42, 0x72, 0x65, 0x61, 0x64, 0x63, 0x72, 0x75, 0x6d, 0x62, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x68, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x42, 0x72, 0x65,
	0x61, 0x64, 0x63, 0x72, 0x75, 0x6d, 0x62, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x69, 0x64, 0x65, 0x49,
	0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x68, 0x69, 0x64,
	0x65, 0x49, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x69, 0x64, 0x65, 0x49,
	0x6e, 0x54, 0x61, 0x62, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x68, 0x69, 0x64, 0x65,
	0x49, 0x6e, 0x54, 0x61, 0x62, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x53, 0x72, 0x63, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x53, 0x72, 0x63, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x67, 0x6e, 0x6f, 0x72,
	0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x69,
	0x67, 0x6e, 0x6f, 0x72, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6b,
	0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x6b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e,
	0x6b, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x16, 0x0a,
	0x06, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c,
	0x6f, 0x61, 0x64, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x4f,
	0x66, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x61, 0x62, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f,
	0x6d, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x4f, 0x66, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x61, 0x62, 0x12,
	0x3a, 0x0a, 0x18, 0x6d, 0x65, 0x6e, 0x75, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x57, 0x69,
	0x74, 0x68, 0x46, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x18, 0x1b, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x18, 0x6d, 0x65, 0x6e, 0x75, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x57, 0x69,
	0x74, 0x68, 0x46, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x6f,
	0x70, 0x65, 0x6e, 0x49, 0x6e, 0x4e, 0x65, 0x77, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x1c,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x6e, 0x4e, 0x65, 0x77, 0x57,
	0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75,
	0x6d, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75,
	0x6d, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x10, 0x0a,
	0x0e, 0x41, 0x64, 0x64, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x22,
	0xe8, 0x07, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e,
	0x75, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x49, 0x63, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x50, 0x61, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x66, 0x66, 0x69, 0x78, 0x54,
	0x61, 0x62, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x66, 0x66, 0x69, 0x78, 0x54,
	0x61, 0x62, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x66, 0x66, 0x69, 0x78, 0x54, 0x61, 0x62, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x61, 0x66, 0x66, 0x69, 0x78,
	0x54, 0x61, 0x62, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x61, 0x64, 0x67,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x12, 0x32,
	0x0a, 0x09, 0x62, 0x61, 0x64, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x42, 0x61,
	0x64, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x62, 0x61, 0x64, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x61, 0x64, 0x67, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x74, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x61, 0x64, 0x67, 0x65,
	0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x68, 0x69, 0x64, 0x65,
	0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x49, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x68, 0x69, 0x64, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72,
	0x65, 0x6e, 0x49, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x2a, 0x0a, 0x10, 0x68, 0x69, 0x64, 0x65,
	0x49, 0x6e, 0x42, 0x72, 0x65, 0x61, 0x64, 0x63, 0x72, 0x75, 0x6d, 0x62, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x10, 0x68, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x42, 0x72, 0x65, 0x61, 0x64, 0x63,
	0x72, 0x75, 0x6d, 0x62, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x4d, 0x65,
	0x6e, 0x75, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x68, 0x69, 0x64, 0x65, 0x49, 0x6e,
	0x4d, 0x65, 0x6e, 0x75, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x54, 0x61,
	0x62, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x68, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x54,
	0x61, 0x62, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x53, 0x72, 0x63, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x66, 0x72, 0x61, 0x6d,
	0x65, 0x53, 0x72, 0x63, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x69, 0x67, 0x6e, 0x6f,
	0x72, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x65, 0x65, 0x70,
	0x41, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6b, 0x65, 0x65,
	0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x19,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f,
	0x61, 0x64, 0x65, 0x64, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x6f, 0x61, 0x64,
	0x65, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x4f, 0x66, 0x4f, 0x70,
	0x65, 0x6e, 0x54, 0x61, 0x62, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6d, 0x61, 0x78,
	0x4e, 0x75, 0x6d, 0x4f, 0x66, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x61, 0x62, 0x12, 0x3a, 0x0a, 0x18,
	0x6d, 0x65, 0x6e, 0x75, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x57, 0x69, 0x74, 0x68, 0x46,
	0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x18,
	0x6d, 0x65, 0x6e, 0x75, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x57, 0x69, 0x74, 0x68, 0x46,
	0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x6e,
	0x49, 0x6e, 0x4e, 0x65, 0x77, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x1d, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x6e, 0x4e, 0x65, 0x77, 0x57, 0x69, 0x6e, 0x64,
	0x6f, 0x77, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x14,
	0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x20, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x1f, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x10, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x23, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x35, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x79,
	0x73, 0x4d, 0x65, 0x6e, 0x75, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1f, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62,
	0x2e, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xba,
	0x08, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75,
	0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x73, 0x41, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x69, 0x73, 0x41, 0x73, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x73, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x66, 0x66, 0x69, 0x78,
	0x54, 0x61, 0x62, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x66, 0x66, 0x69, 0x78,
	0x54, 0x61, 0x62, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x66, 0x66, 0x69, 0x78, 0x54, 0x61, 0x62, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x61, 0x66, 0x66, 0x69,
	0x78, 0x54, 0x61, 0x62, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x61, 0x64,
	0x67, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x12,
	0x32, 0x0a, 0x09, 0x62, 0x61, 0x64, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x42,
	0x61, 0x64, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x62, 0x61, 0x64, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x61, 0x64, 0x67, 0x65, 0x56, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x74, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x61, 0x64, 0x67,
	0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x68, 0x69, 0x64,
	0x65, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x49, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x68, 0x69, 0x64, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64,
	0x72, 0x65, 0x6e, 0x49, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x2a, 0x0a, 0x10, 0x68, 0x69, 0x64,
	0x65, 0x49, 0x6e, 0x42, 0x72, 0x65, 0x61, 0x64, 0x63, 0x72, 0x75, 0x6d, 0x62, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x10, 0x68, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x42, 0x72, 0x65, 0x61, 0x64,
	0x63, 0x72, 0x75, 0x6d, 0x62, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x4d,
	0x65, 0x6e, 0x75, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x68, 0x69, 0x64, 0x65, 0x49,
	0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x54,
	0x61, 0x62, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x68, 0x69, 0x64, 0x65, 0x49, 0x6e,
	0x54, 0x61, 0x62, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x18, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x66, 0x72, 0x61, 0x6d,
	0x65, 0x53, 0x72, 0x63, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x53, 0x72, 0x63, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x69, 0x67, 0x6e,
	0x6f, 0x72, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x65, 0x65,
	0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6b, 0x65,
	0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18,
	0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x6c,
	0x6f, 0x61, 0x64, 0x65, 0x64, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x6f, 0x61,
	0x64, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x4f, 0x66, 0x4f,
	0x70, 0x65, 0x6e, 0x54, 0x61, 0x62, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6d, 0x61,
	0x78, 0x4e, 0x75, 0x6d, 0x4f, 0x66, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x61, 0x62, 0x12, 0x3a, 0x0a,
	0x18, 0x6d, 0x65, 0x6e, 0x75, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x57, 0x69, 0x74, 0x68,
	0x46, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x18, 0x6d, 0x65, 0x6e, 0x75, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x57, 0x69, 0x74, 0x68,
	0x46, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x6f, 0x70, 0x65,
	0x6e, 0x49, 0x6e, 0x4e, 0x65, 0x77, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x20, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x6e, 0x4e, 0x65, 0x77, 0x57, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x18,
	0x21, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12,
	0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x23,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x4a, 0x0a, 0x11, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x1f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x70, 0x62, 0x2e, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x28, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x6e, 0x75, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x35, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x54, 0x72, 0x65, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x05, 0x6d, 0x65, 0x6e, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x05, 0x6d, 0x65, 0x6e, 0x75, 0x73, 0x22, 0xe5, 0x01, 0x0a, 0x08, 0x4d, 0x65, 0x6e,
	0x75, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72,
	0x65, 0x6e, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65,
	0x6e, 0x75, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e,
	0x22, 0xe5, 0x06, 0x0a, 0x09, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x1e,
	0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1e,
	0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a,
	0x0a, 0x08, 0x61, 0x66, 0x66, 0x69, 0x78, 0x54, 0x61, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x61, 0x66, 0x66, 0x69, 0x78, 0x54, 0x61, 0x62, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x66,
	0x66, 0x69, 0x78, 0x54, 0x61, 0x62, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x61, 0x66, 0x66, 0x69, 0x78, 0x54, 0x61, 0x62, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62,
	0x61, 0x64, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x64, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x64, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x61, 0x64, 0x67, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x61, 0x64, 0x67, 0x65,
	0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x68, 0x69, 0x64, 0x65,
	0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x49, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x68, 0x69, 0x64, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72,
	0x65, 0x6e, 0x49, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x2a, 0x0a, 0x10, 0x68, 0x69, 0x64, 0x65,
	0x49, 0x6e, 0x42, 0x72, 0x65, 0x61, 0x64, 0x63, 0x72, 0x75, 0x6d, 0x62, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x10, 0x68, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x42, 0x72, 0x65, 0x61, 0x64, 0x63,
	0x72, 0x75, 0x6d, 0x62, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x4d, 0x65,
	0x6e, 0x75, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x68, 0x69, 0x64, 0x65, 0x49, 0x6e,
	0x4d, 0x65, 0x6e, 0x75, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x54, 0x61,
	0x62, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x68, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x54,
	0x61, 0x62, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x53, 0x72, 0x63, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x66, 0x72, 0x61, 0x6d,
	0x65, 0x53, 0x72, 0x63, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x69, 0x67, 0x6e, 0x6f,
	0x72, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x65, 0x65, 0x70,
	0x41, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6b, 0x65, 0x65,
	0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f,
	0x61, 0x64, 0x65, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x6f, 0x61, 0x64,
	0x65, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x4f, 0x66, 0x4f, 0x70,
	0x65, 0x6e, 0x54, 0x61, 0x62, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6d, 0x61, 0x78,
	0x4e, 0x75, 0x6d, 0x4f, 0x66, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x61, 0x62, 0x12, 0x3a, 0x0a, 0x18,
	0x6d, 0x65, 0x6e, 0x75, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x57, 0x69, 0x74, 0x68, 0x46,
	0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x18,
	0x6d, 0x65, 0x6e, 0x75, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x57, 0x69, 0x74, 0x68, 0x46,
	0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x6e,
	0x49, 0x6e, 0x4e, 0x65, 0x77, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x6e, 0x4e, 0x65, 0x77, 0x57, 0x69, 0x6e, 0x64,
	0x6f, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x18, 0x17, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x1a, 0x38,
	0x0a, 0x0a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc5, 0x01, 0x0a, 0x0f, 0x53, 0x79, 0x73,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0x69, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x53, 0x79, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x18, 0x0a, 0x16, 0x41,
	0x64, 0x64, 0x53, 0x79, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x60, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x79, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x1b, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x79, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x27, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x18, 0x0a,
	0x16, 0x44, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x2b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x79,
	0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x45, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x27, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x79, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x9e, 0x01, 0x0a, 0x18,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x79, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x53, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x53, 0x74, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x41, 0x73, 0x63, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x41, 0x73, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4a, 0x0a, 0x19,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x79, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x79, 0x73,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x82, 0x02, 0x0a, 0x15, 0x53, 0x79, 0x73,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72,
	0x65, 0x6e, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x79,
	0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x18, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x22, 0xcb, 0x01, 0x0a, 0x0d, 0x53, 0x79, 0x73, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x6f, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x53, 0x79, 0x73, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x16, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x53, 0x79, 0x73,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x66,
	0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x19, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x79, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x25, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x53,
	0x79, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x29, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x41, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x53, 0x79, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x25, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x79, 0x73, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd4,
	0x01, 0x0a, 0x16, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x79, 0x73, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x53, 0x74, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x53, 0x74, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x41, 0x73, 0x63, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x41, 0x73, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x56, 0x0a, 0x17, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53,
	0x79, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x25, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x62, 0x2e, 0x53, 0x79, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x19, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x22, 0x45, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53,
	0x79, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x65, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x79, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x65, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x6a, 0x0a, 0x11, 0x53, 0x79, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x54, 0x72, 0x65, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c,
	0x64, 0x72, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x79, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x65,
	0x65, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x6d, 0x0a, 0x0b, 0x53,
	0x79, 0x73, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x27, 0x0a, 0x11, 0x41, 0x64,
	0x64, 0x53, 0x79, 0x73, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x53, 0x79, 0x73, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x3a, 0x0a, 0x14, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x79, 0x73, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x23,
	0x0a, 0x11, 0x44, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x27, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x53, 0x79, 0x73, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x3d, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x23, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x79, 0x73, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x8c, 0x01, 0x0a, 0x14, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x79, 0x73, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x53, 0x74, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x53, 0x74, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x41, 0x73, 0x63, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x41, 0x73, 0x63, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x52, 0x0a, 0x15, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x79, 0x73, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x79, 0x73,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x22, 0x2c, 0x0a, 0x1a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x79,
	0x73, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x3e, 0x0a, 0x1b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x79, 0x73, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x1f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0xeb, 0x01, 0x0a, 0x07, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f,
	0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f,
	0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x22, 0xa5, 0x01, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0x10, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x53,
	0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x7e, 0x0a, 0x10, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0x13, 0x0a, 0x11, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x1f, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x10, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x23, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x35, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x79,
	0x73, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1f, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62,
	0x2e, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8a,
	0x02, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x73, 0x41, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x69, 0x73, 0x41, 0x73, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0x4a, 0x0a, 0x11, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x1f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x70, 0x62, 0x2e, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x55, 0x0a, 0x15, 0x42, 0x69, 0x6e, 0x64, 0x52,
	0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52,
	0x0d, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x22, 0x18,
	0x0a, 0x16, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x31, 0x0a, 0x17, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x2e, 0x0a, 0x18, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x43, 0x0a, 0x0f, 0x42,
	0x69, 0x6e, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x73,
	0x22, 0x12, 0x0a, 0x10, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x2b, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x6f,
	0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49,
	0x64, 0x22, 0x28, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x4d,
	0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x34, 0x0a, 0x1a, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49,
	0x64, 0x22, 0x31, 0x0a, 0x1b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x47, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xab, 0x01,
	0x0a, 0x0d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x45, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x73, 0x49, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x72,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x2a, 0x0a, 0x10, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x73, 0x49, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x72, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x22, 0xb9, 0x01, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x27,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x70, 0x62, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x2a, 0x0a, 0x12, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x8f, 0x02, 0x0a, 0x13, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69,
	0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x3d, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0x0a, 0x13, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0x62, 0x0a, 0x14, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x45, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x73, 0x49, 0x6e, 0x22, 0xeb, 0x01, 0x0a, 0x07, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0xa5, 0x01, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x53, 0x79, 0x73, 0x44, 0x69,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0x10, 0x0a, 0x0e, 0x41,
	0x64, 0x64, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x7e, 0x0a,
	0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0x13, 0x0a,
	0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x3d, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x22, 0x10, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x23, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63,
	0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x35, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53,
	0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1f,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70,
	0x62, 0x2e, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x8a, 0x02, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x41, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x69, 0x73, 0x41, 0x73, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0x4a, 0x0a, 0x11,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x1f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xa9, 0x02, 0x0a, 0x0b, 0x53, 0x79, 0x73,
	0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x78, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x78, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0xe3, 0x01, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x53, 0x79, 0x73, 0x44,
	0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69,
	0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69,
	0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x54, 0x65,
	0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0x14, 0x0a, 0x12, 0x41, 0x64,
	0x64, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x22, 0xa0, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x44, 0x69,
	0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x74, 0x65,
	0x6d, 0x54, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x74, 0x65,
	0x6d, 0x54, 0x65, 0x78, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x22, 0x17, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73,
	0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x22, 0x41, 0x0a, 0x11,
	0x44, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22,
	0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x22, 0x27, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x44,
	0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3d,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x79, 0x73, 0x44,
	0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xaa, 0x02,
	0x0a, 0x14, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53,
	0x74, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53,
	0x74, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x41, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x69, 0x73, 0x41, 0x73, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x78, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x78, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0x52, 0x0a, 0x15, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x4e,
	0x0a, 0x14, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x17,
	0x0a, 0x15, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x4c, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x44, 0x69,
	0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x74, 0x65,
	0x6d, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x74, 0x65,
	0x6d, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x31, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x44, 0x69, 0x63, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x69, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x78, 0x74, 0x22, 0x68, 0x0a, 0x12, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x22, 0x4d, 0x0a, 0x13, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x55, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x55, 0x72, 0x69, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72,
	0x6c, 0x2a, 0x19, 0x0a, 0x10, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x42, 0x61, 0x64, 0x67,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x05, 0x0a, 0x01, 0x4d, 0x10, 0x00, 0x32, 0xcd, 0x06, 0x0a,
	0x0e, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x33, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x12, 0x11, 0x2e,
	0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79,
	0x73, 0x55, 0x73, 0x65, 0x72, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x33, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x79,
	0x73, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a,
	0x15, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x79, 0x73, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x2e,
	0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53,
	0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x79, 0x73, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0e, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x72, 0x6f, 0x7a,
	0x65, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e,
	0x70, 0x62, 0x2e, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x16,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x05, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x12,
	0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e,
	0x70, 0x62, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2d, 0x0a, 0x08,
	0x42, 0x69, 0x6e, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x69,
	0x6e, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x42,
	0x69, 0x6e, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16,
	0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x6f, 0x6c, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x36, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12,
	0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x63, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x32, 0xef, 0x02, 0x0a,
	0x0e, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x33, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x11, 0x2e,
	0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71,
	0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79,
	0x73, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x33, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75,
	0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75,
	0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x4d,
	0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x79,
	0x73, 0x4d, 0x65, 0x6e, 0x75, 0x42, 0x79, 0x49, 0x64, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x1a,
	0x15, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x79, 0x73, 0x4d, 0x65,
	0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6e,
	0x75, 0x54, 0x72, 0x65, 0x65, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x6e, 0x75, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x32, 0xb7,
	0x03, 0x0a, 0x16, 0x53, 0x79, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4b, 0x0a, 0x12, 0x41, 0x64, 0x64,
	0x53, 0x79, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x19, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x79, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e,
	0x41, 0x64, 0x64, 0x53, 0x79, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x79, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e,
	0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x12,
	0x44, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e,
	0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x53, 0x79, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x79, 0x49, 0x64, 0x12, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x54, 0x0a, 0x15, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x79, 0x73, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x70, 0x62,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x79, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x79, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x32, 0xea, 0x03, 0x0a, 0x14, 0x53, 0x79, 0x73,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x45, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x53, 0x79, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x79,
	0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x18,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x79, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x79, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x62,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x53,
	0x79, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x2e, 0x70,
	0x62, 0x2e, 0x44, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x53, 0x79,
	0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x51, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x79, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x4e, 0x0a, 0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x79, 0x73, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x79, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x53, 0x79, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x51, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x65, 0x65, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x79, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x65,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x32, 0xd3, 0x03, 0x0a, 0x12, 0x53, 0x79, 0x73, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x0e,
	0x41, 0x64, 0x64, 0x53, 0x79, 0x73, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x79, 0x73, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x79,
	0x73, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a,
	0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79,
	0x73, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70,
	0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x53, 0x79,
	0x73, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x44,
	0x65, 0x6c, 0x53, 0x79, 0x73, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53,
	0x79, 0x73, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x12, 0x19,
	0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x79, 0x73, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53,
	0x79, 0x73, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x79, 0x73, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x53, 0x79, 0x73, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x5a, 0x0a, 0x17, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x79, 0x73, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x79, 0x73, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x79, 0x73, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x32, 0xaf, 0x05, 0x0a, 0x0e,
	0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x33,
	0x0a, 0x0a, 0x41, 0x64, 0x64, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x11, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x12, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73,
	0x52, 0x6f, 0x6c, 0x65, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x33, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x12,
	0x11, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73,
	0x52, 0x6f, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x16, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x15,
	0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x12, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x6f, 0x6c,
	0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x2e, 0x70, 0x62,
	0x2e, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x69, 0x6e, 0x64,
	0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x51, 0x0a, 0x14, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x6f, 0x6c, 0x65,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0c, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x6f, 0x6c,
	0x65, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x52,
	0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e,
	0x42, 0x69, 0x6e, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x3f, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65,
	0x6e, 0x75, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x6f,
	0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x5a, 0x0a, 0x17, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x1e, 0x2e, 0x70,
	0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x70,
	0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x32, 0xfb, 0x01,
	0x0a, 0x0e, 0x53, 0x79, 0x73, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x35, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x13, 0x2e, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x70, 0x62, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x4c, 0x6f, 0x67, 0x6f, 0x75,
	0x74, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0c, 0x52, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xb7, 0x02, 0x0a, 0x0e,
	0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x33,
	0x0a, 0x0a, 0x41, 0x64, 0x64, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x12, 0x11, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x12, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73,
	0x44, 0x69, 0x63, 0x74, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x33, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x12,
	0x11, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x44, 0x69,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73,
	0x44, 0x69, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x16, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x15,
	0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x32, 0x85, 0x04, 0x0a, 0x12, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x0e,
	0x41, 0x64, 0x64, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x15,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x79,
	0x73, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a,
	0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79,
	0x73, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70,
	0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x53, 0x79,
	0x73, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x44,
	0x65, 0x6c, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71,
	0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53,
	0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x79, 0x49, 0x64, 0x12, 0x19,
	0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53,
	0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x48, 0x0a, 0x11, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44,
	0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x19,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x78, 0x74, 0x12, 0x16, 0x2e, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x63,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x32, 0x4e, 0x0a,
	0x0c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3e, 0x0a,
	0x0b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x16, 0x2e, 0x70,
	0x62, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3c, 0x5a,
	0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x61, 0x6e, 0x73,
	0x68, 0x69, 0x63, 0x68, 0x65, 0x6e, 0x67, 0x2f, 0x6b, 0x75, 0x62, 0x65, 0x2d, 0x6f, 0x6e, 0x65,
	0x63, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x70, 0x6f,
	0x72, 0x74, 0x61, 0x6c, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_portal_proto_rawDescOnce sync.Once
	file_portal_proto_rawDescData = file_portal_proto_rawDesc
)

func file_portal_proto_rawDescGZIP() []byte {
	file_portal_proto_rawDescOnce.Do(func() {
		file_portal_proto_rawDescData = protoimpl.X.CompressGZIP(file_portal_proto_rawDescData)
	})
	return file_portal_proto_rawDescData
}

var file_portal_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_portal_proto_msgTypes = make([]protoimpl.MessageInfo, 143)
var file_portal_proto_goTypes = []any{
	(SysMenuBadgeType)(0),               // 0: pb.SysMenuBadgeType
	(*SysUser)(nil),                     // 1: pb.SysUser
	(*AddSysUserReq)(nil),               // 2: pb.AddSysUserReq
	(*AddSysUserResp)(nil),              // 3: pb.AddSysUserResp
	(*UpdateSysUserReq)(nil),            // 4: pb.UpdateSysUserReq
	(*UpdateSysUserResp)(nil),           // 5: pb.UpdateSysUserResp
	(*DelSysUserReq)(nil),               // 6: pb.DelSysUserReq
	(*DelSysUserResp)(nil),              // 7: pb.DelSysUserResp
	(*GetSysUserByIdReq)(nil),           // 8: pb.GetSysUserByIdReq
	(*GetSysUserByIdResp)(nil),          // 9: pb.GetSysUserByIdResp
	(*SearchSysUserReq)(nil),            // 10: pb.SearchSysUserReq
	(*SearchSysUserResp)(nil),           // 11: pb.SearchSysUserResp
	(*ResetPasswordReq)(nil),            // 12: pb.ResetPasswordReq
	(*ResetPasswordResp)(nil),           // 13: pb.ResetPasswordResp
	(*FrozenAccountsReq)(nil),           // 14: pb.FrozenAccountsReq
	(*FrozenAccountsResp)(nil),          // 15: pb.FrozenAccountsResp
	(*ChangePasswordReq)(nil),           // 16: pb.ChangePasswordReq
	(*ChangePasswordResp)(nil),          // 17: pb.ChangePasswordResp
	(*UpdateGlobalSysUserReq)(nil),      // 18: pb.UpdateGlobalSysUserReq
	(*UpdateGlobalSysUserResp)(nil),     // 19: pb.UpdateGlobalSysUserResp
	(*LeaveReq)(nil),                    // 20: pb.LeaveReq
	(*LeaveResp)(nil),                   // 21: pb.LeaveResp
	(*BindRoleReq)(nil),                 // 22: pb.BindRoleReq
	(*BindRoleResp)(nil),                // 23: pb.BindRoleResp
	(*GetRoleByUserIdReq)(nil),          // 24: pb.GetRoleByUserIdReq
	(*GetRoleByUserIdResp)(nil),         // 25: pb.GetRoleByUserIdResp
	(*GetUserInfoReq)(nil),              // 26: pb.GetUserInfoReq
	(*GetUserInfoResp)(nil),             // 27: pb.GetUserInfoResp
	(*UpdateIconReq)(nil),               // 28: pb.UpdateIconReq
	(*UpdateIconResp)(nil),              // 29: pb.UpdateIconResp
	(*SysMenu)(nil),                     // 30: pb.SysMenu
	(*AddSysMenuReq)(nil),               // 31: pb.AddSysMenuReq
	(*AddSysMenuResp)(nil),              // 32: pb.AddSysMenuResp
	(*UpdateSysMenuReq)(nil),            // 33: pb.UpdateSysMenuReq
	(*UpdateSysMenuResp)(nil),           // 34: pb.UpdateSysMenuResp
	(*DelSysMenuReq)(nil),               // 35: pb.DelSysMenuReq
	(*DelSysMenuResp)(nil),              // 36: pb.DelSysMenuResp
	(*GetSysMenuByIdReq)(nil),           // 37: pb.GetSysMenuByIdReq
	(*GetSysMenuByIdResp)(nil),          // 38: pb.GetSysMenuByIdResp
	(*SearchSysMenuReq)(nil),            // 39: pb.SearchSysMenuReq
	(*SearchSysMenuResp)(nil),           // 40: pb.SearchSysMenuResp
	(*GetMenuTreeReq)(nil),              // 41: pb.GetMenuTreeReq
	(*GetMenuTreeResp)(nil),             // 42: pb.GetMenuTreeResp
	(*MenuNode)(nil),                    // 43: pb.MenuNode
	(*RouteMeta)(nil),                   // 44: pb.RouteMeta
	(*SysOrganization)(nil),             // 45: pb.SysOrganization
	(*AddSysOrganizationReq)(nil),       // 46: pb.AddSysOrganizationReq
	(*AddSysOrganizationResp)(nil),      // 47: pb.AddSysOrganizationResp
	(*UpdateSysOrganizationReq)(nil),    // 48: pb.UpdateSysOrganizationReq
	(*UpdateSysOrganizationResp)(nil),   // 49: pb.UpdateSysOrganizationResp
	(*DelSysOrganizationReq)(nil),       // 50: pb.DelSysOrganizationReq
	(*DelSysOrganizationResp)(nil),      // 51: pb.DelSysOrganizationResp
	(*GetSysOrganizationByIdReq)(nil),   // 52: pb.GetSysOrganizationByIdReq
	(*GetSysOrganizationByIdResp)(nil),  // 53: pb.GetSysOrganizationByIdResp
	(*SearchSysOrganizationReq)(nil),    // 54: pb.SearchSysOrganizationReq
	(*SearchSysOrganizationResp)(nil),   // 55: pb.SearchSysOrganizationResp
	(*SysOrganizationSearch)(nil),       // 56: pb.SysOrganizationSearch
	(*GetOrganizationTreeReq)(nil),      // 57: pb.GetOrganizationTreeReq
	(*SysPermission)(nil),               // 58: pb.SysPermission
	(*AddSysPermissionReq)(nil),         // 59: pb.AddSysPermissionReq
	(*AddSysPermissionResp)(nil),        // 60: pb.AddSysPermissionResp
	(*UpdateSysPermissionReq)(nil),      // 61: pb.UpdateSysPermissionReq
	(*UpdateSysPermissionResp)(nil),     // 62: pb.UpdateSysPermissionResp
	(*DelSysPermissionReq)(nil),         // 63: pb.DelSysPermissionReq
	(*DelSysPermissionResp)(nil),        // 64: pb.DelSysPermissionResp
	(*GetSysPermissionByIdReq)(nil),     // 65: pb.GetSysPermissionByIdReq
	(*GetSysPermissionByIdResp)(nil),    // 66: pb.GetSysPermissionByIdResp
	(*SearchSysPermissionReq)(nil),      // 67: pb.SearchSysPermissionReq
	(*SearchSysPermissionResp)(nil),     // 68: pb.SearchSysPermissionResp
	(*GetSysPermissionTreeReq)(nil),     // 69: pb.GetSysPermissionTreeReq
	(*GetSysPermissionTreeResp)(nil),    // 70: pb.GetSysPermissionTreeResp
	(*SysPermissionTree)(nil),           // 71: pb.SysPermissionTree
	(*SysPosition)(nil),                 // 72: pb.SysPosition
	(*AddSysPositionReq)(nil),           // 73: pb.AddSysPositionReq
	(*AddSysPositionResp)(nil),          // 74: pb.AddSysPositionResp
	(*UpdateSysPositionReq)(nil),        // 75: pb.UpdateSysPositionReq
	(*UpdateSysPositionResp)(nil),       // 76: pb.UpdateSysPositionResp
	(*DelSysPositionReq)(nil),           // 77: pb.DelSysPositionReq
	(*DelSysPositionResp)(nil),          // 78: pb.DelSysPositionResp
	(*GetSysPositionByIdReq)(nil),       // 79: pb.GetSysPositionByIdReq
	(*GetSysPositionByIdResp)(nil),      // 80: pb.GetSysPositionByIdResp
	(*SearchSysPositionReq)(nil),        // 81: pb.SearchSysPositionReq
	(*SearchSysPositionResp)(nil),       // 82: pb.SearchSysPositionResp
	(*SearchSysPositionByUserReq)(nil),  // 83: pb.SearchSysPositionByUserReq
	(*SearchSysPositionByUserResp)(nil), // 84: pb.SearchSysPositionByUserResp
	(*SysRole)(nil),                     // 85: pb.SysRole
	(*AddSysRoleReq)(nil),               // 86: pb.AddSysRoleReq
	(*AddSysRoleResp)(nil),              // 87: pb.AddSysRoleResp
	(*UpdateSysRoleReq)(nil),            // 88: pb.UpdateSysRoleReq
	(*UpdateSysRoleResp)(nil),           // 89: pb.UpdateSysRoleResp
	(*DelSysRoleReq)(nil),               // 90: pb.DelSysRoleReq
	(*DelSysRoleResp)(nil),              // 91: pb.DelSysRoleResp
	(*GetSysRoleByIdReq)(nil),           // 92: pb.GetSysRoleByIdReq
	(*GetSysRoleByIdResp)(nil),          // 93: pb.GetSysRoleByIdResp
	(*SearchSysRoleReq)(nil),            // 94: pb.SearchSysRoleReq
	(*SearchSysRoleResp)(nil),           // 95: pb.SearchSysRoleResp
	(*BindRolePermissionReq)(nil),       // 96: pb.BindRolePermissionReq
	(*BindRolePermissionResp)(nil),      // 97: pb.BindRolePermissionResp
	(*SearchRolePermissionReq)(nil),     // 98: pb.SearchRolePermissionReq
	(*SearchRolePermissionResp)(nil),    // 99: pb.SearchRolePermissionResp
	(*BindRoleMenuReq)(nil),             // 100: pb.BindRoleMenuReq
	(*BindRoleMenuResp)(nil),            // 101: pb.BindRoleMenuResp
	(*SearchRoleMenuReq)(nil),           // 102: pb.SearchRoleMenuReq
	(*SearchRoleMenuResp)(nil),          // 103: pb.SearchRoleMenuResp
	(*SearchRolePermissionIdsReq)(nil),  // 104: pb.SearchRolePermissionIdsReq
	(*SearchRolePermissionIdsResp)(nil), // 105: pb.SearchRolePermissionIdsResp
	(*GetTokenRequest)(nil),             // 106: pb.GetTokenRequest
	(*TokenResponse)(nil),               // 107: pb.TokenResponse
	(*GetTokenResponse)(nil),            // 108: pb.GetTokenResponse
	(*VerifyTokenRequest)(nil),          // 109: pb.VerifyTokenRequest
	(*VerifyTokenResponse)(nil),         // 110: pb.VerifyTokenResponse
	(*LogoutRequest)(nil),               // 111: pb.LogoutRequest
	(*LogoutResponse)(nil),              // 112: pb.LogoutResponse
	(*RefreshTokenRequest)(nil),         // 113: pb.RefreshTokenRequest
	(*RefreshTokenResponse)(nil),        // 114: pb.RefreshTokenResponse
	(*SysDict)(nil),                     // 115: pb.SysDict
	(*AddSysDictReq)(nil),               // 116: pb.AddSysDictReq
	(*AddSysDictResp)(nil),              // 117: pb.AddSysDictResp
	(*UpdateSysDictReq)(nil),            // 118: pb.UpdateSysDictReq
	(*UpdateSysDictResp)(nil),           // 119: pb.UpdateSysDictResp
	(*DelSysDictReq)(nil),               // 120: pb.DelSysDictReq
	(*DelSysDictResp)(nil),              // 121: pb.DelSysDictResp
	(*GetSysDictByIdReq)(nil),           // 122: pb.GetSysDictByIdReq
	(*GetSysDictByIdResp)(nil),          // 123: pb.GetSysDictByIdResp
	(*SearchSysDictReq)(nil),            // 124: pb.SearchSysDictReq
	(*SearchSysDictResp)(nil),           // 125: pb.SearchSysDictResp
	(*SysDictItem)(nil),                 // 126: pb.SysDictItem
	(*AddSysDictItemReq)(nil),           // 127: pb.AddSysDictItemReq
	(*AddSysDictItemResp)(nil),          // 128: pb.AddSysDictItemResp
	(*UpdateSysDictItemReq)(nil),        // 129: pb.UpdateSysDictItemReq
	(*UpdateSysDictItemResp)(nil),       // 130: pb.UpdateSysDictItemResp
	(*DelSysDictItemReq)(nil),           // 131: pb.DelSysDictItemReq
	(*DelSysDictItemResp)(nil),          // 132: pb.DelSysDictItemResp
	(*GetSysDictItemByIdReq)(nil),       // 133: pb.GetSysDictItemByIdReq
	(*GetSysDictItemByIdResp)(nil),      // 134: pb.GetSysDictItemByIdResp
	(*SearchSysDictItemReq)(nil),        // 135: pb.SearchSysDictItemReq
	(*SearchSysDictItemResp)(nil),       // 136: pb.SearchSysDictItemResp
	(*CheckDictItemCodeReq)(nil),        // 137: pb.CheckDictItemCodeReq
	(*CheckDictItemCodeResp)(nil),       // 138: pb.CheckDictItemCodeResp
	(*GetDictItemNameReq)(nil),          // 139: pb.GetDictItemNameReq
	(*GetDictItemTextResp)(nil),         // 140: pb.GetDictItemTextResp
	(*UploadImageRequest)(nil),          // 141: pb.UploadImageRequest
	(*UploadImageResponse)(nil),         // 142: pb.UploadImageResponse
	nil,                                 // 143: pb.RouteMeta.QueryEntry
}
var file_portal_proto_depIdxs = []int32{
	1,   // 0: pb.GetSysUserByIdResp.data:type_name -> pb.SysUser
	1,   // 1: pb.SearchSysUserResp.data:type_name -> pb.SysUser
	0,   // 2: pb.SysMenu.badgeType:type_name -> pb.SysMenuBadgeType
	0,   // 3: pb.AddSysMenuReq.badgeType:type_name -> pb.SysMenuBadgeType
	0,   // 4: pb.UpdateSysMenuReq.badgeType:type_name -> pb.SysMenuBadgeType
	30,  // 5: pb.GetSysMenuByIdResp.data:type_name -> pb.SysMenu
	0,   // 6: pb.SearchSysMenuReq.badgeType:type_name -> pb.SysMenuBadgeType
	30,  // 7: pb.SearchSysMenuResp.data:type_name -> pb.SysMenu
	43,  // 8: pb.GetMenuTreeResp.menus:type_name -> pb.MenuNode
	44,  // 9: pb.MenuNode.meta:type_name -> pb.RouteMeta
	43,  // 10: pb.MenuNode.children:type_name -> pb.MenuNode
	143, // 11: pb.RouteMeta.query:type_name -> pb.RouteMeta.QueryEntry
	45,  // 12: pb.GetSysOrganizationByIdResp.data:type_name -> pb.SysOrganization
	56,  // 13: pb.SearchSysOrganizationResp.data:type_name -> pb.SysOrganizationSearch
	56,  // 14: pb.SysOrganizationSearch.children:type_name -> pb.SysOrganizationSearch
	58,  // 15: pb.GetSysPermissionByIdResp.data:type_name -> pb.SysPermission
	58,  // 16: pb.SearchSysPermissionResp.data:type_name -> pb.SysPermission
	71,  // 17: pb.GetSysPermissionTreeResp.data:type_name -> pb.SysPermissionTree
	71,  // 18: pb.SysPermissionTree.children:type_name -> pb.SysPermissionTree
	72,  // 19: pb.GetSysPositionByIdResp.data:type_name -> pb.SysPosition
	72,  // 20: pb.SearchSysPositionResp.data:type_name -> pb.SysPosition
	1,   // 21: pb.SearchSysPositionByUserResp.data:type_name -> pb.SysUser
	85,  // 22: pb.GetSysRoleByIdResp.data:type_name -> pb.SysRole
	85,  // 23: pb.SearchSysRoleResp.data:type_name -> pb.SysRole
	107, // 24: pb.GetTokenResponse.token:type_name -> pb.TokenResponse
	115, // 25: pb.GetSysDictByIdResp.data:type_name -> pb.SysDict
	115, // 26: pb.SearchSysDictResp.data:type_name -> pb.SysDict
	126, // 27: pb.GetSysDictItemByIdResp.data:type_name -> pb.SysDictItem
	126, // 28: pb.SearchSysDictItemResp.data:type_name -> pb.SysDictItem
	2,   // 29: pb.SysUserService.AddSysUser:input_type -> pb.AddSysUserReq
	4,   // 30: pb.SysUserService.UpdateSysUser:input_type -> pb.UpdateSysUserReq
	6,   // 31: pb.SysUserService.DelSysUser:input_type -> pb.DelSysUserReq
	8,   // 32: pb.SysUserService.GetSysUserById:input_type -> pb.GetSysUserByIdReq
	10,  // 33: pb.SysUserService.SearchSysUser:input_type -> pb.SearchSysUserReq
	18,  // 34: pb.SysUserService.UpdateGlobalSysUser:input_type -> pb.UpdateGlobalSysUserReq
	12,  // 35: pb.SysUserService.ResetPassword:input_type -> pb.ResetPasswordReq
	14,  // 36: pb.SysUserService.FrozenAccounts:input_type -> pb.FrozenAccountsReq
	16,  // 37: pb.SysUserService.ChangePassword:input_type -> pb.ChangePasswordReq
	20,  // 38: pb.SysUserService.Leave:input_type -> pb.LeaveReq
	22,  // 39: pb.SysUserService.BindRole:input_type -> pb.BindRoleReq
	24,  // 40: pb.SysUserService.GetRoleByUserId:input_type -> pb.GetRoleByUserIdReq
	26,  // 41: pb.SysUserService.GetUserInfo:input_type -> pb.GetUserInfoReq
	28,  // 42: pb.SysUserService.UpdateIcon:input_type -> pb.UpdateIconReq
	31,  // 43: pb.SysMenuService.AddSysMenu:input_type -> pb.AddSysMenuReq
	33,  // 44: pb.SysMenuService.UpdateSysMenu:input_type -> pb.UpdateSysMenuReq
	35,  // 45: pb.SysMenuService.DelSysMenu:input_type -> pb.DelSysMenuReq
	37,  // 46: pb.SysMenuService.GetSysMenuById:input_type -> pb.GetSysMenuByIdReq
	39,  // 47: pb.SysMenuService.SearchSysMenu:input_type -> pb.SearchSysMenuReq
	41,  // 48: pb.SysMenuService.GetMenuTree:input_type -> pb.GetMenuTreeReq
	46,  // 49: pb.SysOrganizationService.AddSysOrganization:input_type -> pb.AddSysOrganizationReq
	48,  // 50: pb.SysOrganizationService.UpdateSysOrganization:input_type -> pb.UpdateSysOrganizationReq
	50,  // 51: pb.SysOrganizationService.DelSysOrganization:input_type -> pb.DelSysOrganizationReq
	52,  // 52: pb.SysOrganizationService.GetSysOrganizationById:input_type -> pb.GetSysOrganizationByIdReq
	54,  // 53: pb.SysOrganizationService.SearchSysOrganization:input_type -> pb.SearchSysOrganizationReq
	59,  // 54: pb.SysPermissionService.AddSysPermission:input_type -> pb.AddSysPermissionReq
	61,  // 55: pb.SysPermissionService.UpdateSysPermission:input_type -> pb.UpdateSysPermissionReq
	63,  // 56: pb.SysPermissionService.DelSysPermission:input_type -> pb.DelSysPermissionReq
	65,  // 57: pb.SysPermissionService.GetSysPermissionById:input_type -> pb.GetSysPermissionByIdReq
	67,  // 58: pb.SysPermissionService.SearchSysPermission:input_type -> pb.SearchSysPermissionReq
	69,  // 59: pb.SysPermissionService.GetSysPermissionTree:input_type -> pb.GetSysPermissionTreeReq
	73,  // 60: pb.SysPositionService.AddSysPosition:input_type -> pb.AddSysPositionReq
	75,  // 61: pb.SysPositionService.UpdateSysPosition:input_type -> pb.UpdateSysPositionReq
	77,  // 62: pb.SysPositionService.DelSysPosition:input_type -> pb.DelSysPositionReq
	79,  // 63: pb.SysPositionService.GetSysPositionById:input_type -> pb.GetSysPositionByIdReq
	81,  // 64: pb.SysPositionService.SearchSysPosition:input_type -> pb.SearchSysPositionReq
	83,  // 65: pb.SysPositionService.SearchSysPositionByUser:input_type -> pb.SearchSysPositionByUserReq
	86,  // 66: pb.SysRoleService.AddSysRole:input_type -> pb.AddSysRoleReq
	88,  // 67: pb.SysRoleService.UpdateSysRole:input_type -> pb.UpdateSysRoleReq
	90,  // 68: pb.SysRoleService.DelSysRole:input_type -> pb.DelSysRoleReq
	92,  // 69: pb.SysRoleService.GetSysRoleById:input_type -> pb.GetSysRoleByIdReq
	94,  // 70: pb.SysRoleService.SearchSysRole:input_type -> pb.SearchSysRoleReq
	96,  // 71: pb.SysRoleService.BindRolePermission:input_type -> pb.BindRolePermissionReq
	98,  // 72: pb.SysRoleService.SearchRolePermission:input_type -> pb.SearchRolePermissionReq
	100, // 73: pb.SysRoleService.BindRoleMenu:input_type -> pb.BindRoleMenuReq
	102, // 74: pb.SysRoleService.SearchRoleMenu:input_type -> pb.SearchRoleMenuReq
	104, // 75: pb.SysRoleService.SearchRolePermissionIds:input_type -> pb.SearchRolePermissionIdsReq
	106, // 76: pb.SysAuthService.GetToken:input_type -> pb.GetTokenRequest
	109, // 77: pb.SysAuthService.VerifyToken:input_type -> pb.VerifyTokenRequest
	111, // 78: pb.SysAuthService.Logout:input_type -> pb.LogoutRequest
	113, // 79: pb.SysAuthService.RefreshToken:input_type -> pb.RefreshTokenRequest
	116, // 80: pb.SysDictService.AddSysDict:input_type -> pb.AddSysDictReq
	118, // 81: pb.SysDictService.UpdateSysDict:input_type -> pb.UpdateSysDictReq
	120, // 82: pb.SysDictService.DelSysDict:input_type -> pb.DelSysDictReq
	122, // 83: pb.SysDictService.GetSysDictById:input_type -> pb.GetSysDictByIdReq
	124, // 84: pb.SysDictService.SearchSysDict:input_type -> pb.SearchSysDictReq
	127, // 85: pb.SysDictItemService.AddSysDictItem:input_type -> pb.AddSysDictItemReq
	129, // 86: pb.SysDictItemService.UpdateSysDictItem:input_type -> pb.UpdateSysDictItemReq
	131, // 87: pb.SysDictItemService.DelSysDictItem:input_type -> pb.DelSysDictItemReq
	133, // 88: pb.SysDictItemService.GetSysDictItemById:input_type -> pb.GetSysDictItemByIdReq
	135, // 89: pb.SysDictItemService.SearchSysDictItem:input_type -> pb.SearchSysDictItemReq
	137, // 90: pb.SysDictItemService.CheckDictItemCode:input_type -> pb.CheckDictItemCodeReq
	139, // 91: pb.SysDictItemService.GetDictItemText:input_type -> pb.GetDictItemNameReq
	141, // 92: pb.ImageService.UploadImage:input_type -> pb.UploadImageRequest
	3,   // 93: pb.SysUserService.AddSysUser:output_type -> pb.AddSysUserResp
	5,   // 94: pb.SysUserService.UpdateSysUser:output_type -> pb.UpdateSysUserResp
	7,   // 95: pb.SysUserService.DelSysUser:output_type -> pb.DelSysUserResp
	9,   // 96: pb.SysUserService.GetSysUserById:output_type -> pb.GetSysUserByIdResp
	11,  // 97: pb.SysUserService.SearchSysUser:output_type -> pb.SearchSysUserResp
	19,  // 98: pb.SysUserService.UpdateGlobalSysUser:output_type -> pb.UpdateGlobalSysUserResp
	13,  // 99: pb.SysUserService.ResetPassword:output_type -> pb.ResetPasswordResp
	15,  // 100: pb.SysUserService.FrozenAccounts:output_type -> pb.FrozenAccountsResp
	17,  // 101: pb.SysUserService.ChangePassword:output_type -> pb.ChangePasswordResp
	21,  // 102: pb.SysUserService.Leave:output_type -> pb.LeaveResp
	23,  // 103: pb.SysUserService.BindRole:output_type -> pb.BindRoleResp
	25,  // 104: pb.SysUserService.GetRoleByUserId:output_type -> pb.GetRoleByUserIdResp
	27,  // 105: pb.SysUserService.GetUserInfo:output_type -> pb.GetUserInfoResp
	29,  // 106: pb.SysUserService.UpdateIcon:output_type -> pb.UpdateIconResp
	32,  // 107: pb.SysMenuService.AddSysMenu:output_type -> pb.AddSysMenuResp
	34,  // 108: pb.SysMenuService.UpdateSysMenu:output_type -> pb.UpdateSysMenuResp
	36,  // 109: pb.SysMenuService.DelSysMenu:output_type -> pb.DelSysMenuResp
	38,  // 110: pb.SysMenuService.GetSysMenuById:output_type -> pb.GetSysMenuByIdResp
	40,  // 111: pb.SysMenuService.SearchSysMenu:output_type -> pb.SearchSysMenuResp
	42,  // 112: pb.SysMenuService.GetMenuTree:output_type -> pb.GetMenuTreeResp
	47,  // 113: pb.SysOrganizationService.AddSysOrganization:output_type -> pb.AddSysOrganizationResp
	49,  // 114: pb.SysOrganizationService.UpdateSysOrganization:output_type -> pb.UpdateSysOrganizationResp
	51,  // 115: pb.SysOrganizationService.DelSysOrganization:output_type -> pb.DelSysOrganizationResp
	53,  // 116: pb.SysOrganizationService.GetSysOrganizationById:output_type -> pb.GetSysOrganizationByIdResp
	55,  // 117: pb.SysOrganizationService.SearchSysOrganization:output_type -> pb.SearchSysOrganizationResp
	60,  // 118: pb.SysPermissionService.AddSysPermission:output_type -> pb.AddSysPermissionResp
	62,  // 119: pb.SysPermissionService.UpdateSysPermission:output_type -> pb.UpdateSysPermissionResp
	64,  // 120: pb.SysPermissionService.DelSysPermission:output_type -> pb.DelSysPermissionResp
	66,  // 121: pb.SysPermissionService.GetSysPermissionById:output_type -> pb.GetSysPermissionByIdResp
	68,  // 122: pb.SysPermissionService.SearchSysPermission:output_type -> pb.SearchSysPermissionResp
	70,  // 123: pb.SysPermissionService.GetSysPermissionTree:output_type -> pb.GetSysPermissionTreeResp
	74,  // 124: pb.SysPositionService.AddSysPosition:output_type -> pb.AddSysPositionResp
	76,  // 125: pb.SysPositionService.UpdateSysPosition:output_type -> pb.UpdateSysPositionResp
	78,  // 126: pb.SysPositionService.DelSysPosition:output_type -> pb.DelSysPositionResp
	80,  // 127: pb.SysPositionService.GetSysPositionById:output_type -> pb.GetSysPositionByIdResp
	82,  // 128: pb.SysPositionService.SearchSysPosition:output_type -> pb.SearchSysPositionResp
	84,  // 129: pb.SysPositionService.SearchSysPositionByUser:output_type -> pb.SearchSysPositionByUserResp
	87,  // 130: pb.SysRoleService.AddSysRole:output_type -> pb.AddSysRoleResp
	89,  // 131: pb.SysRoleService.UpdateSysRole:output_type -> pb.UpdateSysRoleResp
	91,  // 132: pb.SysRoleService.DelSysRole:output_type -> pb.DelSysRoleResp
	93,  // 133: pb.SysRoleService.GetSysRoleById:output_type -> pb.GetSysRoleByIdResp
	95,  // 134: pb.SysRoleService.SearchSysRole:output_type -> pb.SearchSysRoleResp
	97,  // 135: pb.SysRoleService.BindRolePermission:output_type -> pb.BindRolePermissionResp
	99,  // 136: pb.SysRoleService.SearchRolePermission:output_type -> pb.SearchRolePermissionResp
	101, // 137: pb.SysRoleService.BindRoleMenu:output_type -> pb.BindRoleMenuResp
	103, // 138: pb.SysRoleService.SearchRoleMenu:output_type -> pb.SearchRoleMenuResp
	105, // 139: pb.SysRoleService.SearchRolePermissionIds:output_type -> pb.SearchRolePermissionIdsResp
	108, // 140: pb.SysAuthService.GetToken:output_type -> pb.GetTokenResponse
	110, // 141: pb.SysAuthService.VerifyToken:output_type -> pb.VerifyTokenResponse
	112, // 142: pb.SysAuthService.Logout:output_type -> pb.LogoutResponse
	114, // 143: pb.SysAuthService.RefreshToken:output_type -> pb.RefreshTokenResponse
	117, // 144: pb.SysDictService.AddSysDict:output_type -> pb.AddSysDictResp
	119, // 145: pb.SysDictService.UpdateSysDict:output_type -> pb.UpdateSysDictResp
	121, // 146: pb.SysDictService.DelSysDict:output_type -> pb.DelSysDictResp
	123, // 147: pb.SysDictService.GetSysDictById:output_type -> pb.GetSysDictByIdResp
	125, // 148: pb.SysDictService.SearchSysDict:output_type -> pb.SearchSysDictResp
	128, // 149: pb.SysDictItemService.AddSysDictItem:output_type -> pb.AddSysDictItemResp
	130, // 150: pb.SysDictItemService.UpdateSysDictItem:output_type -> pb.UpdateSysDictItemResp
	132, // 151: pb.SysDictItemService.DelSysDictItem:output_type -> pb.DelSysDictItemResp
	134, // 152: pb.SysDictItemService.GetSysDictItemById:output_type -> pb.GetSysDictItemByIdResp
	136, // 153: pb.SysDictItemService.SearchSysDictItem:output_type -> pb.SearchSysDictItemResp
	138, // 154: pb.SysDictItemService.CheckDictItemCode:output_type -> pb.CheckDictItemCodeResp
	140, // 155: pb.SysDictItemService.GetDictItemText:output_type -> pb.GetDictItemTextResp
	142, // 156: pb.ImageService.UploadImage:output_type -> pb.UploadImageResponse
	93,  // [93:157] is the sub-list for method output_type
	29,  // [29:93] is the sub-list for method input_type
	29,  // [29:29] is the sub-list for extension type_name
	29,  // [29:29] is the sub-list for extension extendee
	0,   // [0:29] is the sub-list for field type_name
}

func init() { file_portal_proto_init() }
func file_portal_proto_init() {
	if File_portal_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_portal_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*SysUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AddSysUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*AddSysUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateSysUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateSysUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*DelSysUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*DelSysUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetSysUserByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetSysUserByIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*SearchSysUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*SearchSysUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ResetPasswordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*ResetPasswordResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*FrozenAccountsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*FrozenAccountsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*ChangePasswordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*ChangePasswordResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateGlobalSysUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateGlobalSysUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*LeaveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*LeaveResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*BindRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*BindRoleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*GetRoleByUserIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*GetRoleByUserIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateIconReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateIconResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*SysMenu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*AddSysMenuReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*AddSysMenuResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateSysMenuReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateSysMenuResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*DelSysMenuReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*DelSysMenuResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*GetSysMenuByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*GetSysMenuByIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*SearchSysMenuReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*SearchSysMenuResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*GetMenuTreeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*GetMenuTreeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*MenuNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*RouteMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*SysOrganization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*AddSysOrganizationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*AddSysOrganizationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[47].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateSysOrganizationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[48].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateSysOrganizationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[49].Exporter = func(v any, i int) any {
			switch v := v.(*DelSysOrganizationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[50].Exporter = func(v any, i int) any {
			switch v := v.(*DelSysOrganizationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[51].Exporter = func(v any, i int) any {
			switch v := v.(*GetSysOrganizationByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[52].Exporter = func(v any, i int) any {
			switch v := v.(*GetSysOrganizationByIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[53].Exporter = func(v any, i int) any {
			switch v := v.(*SearchSysOrganizationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[54].Exporter = func(v any, i int) any {
			switch v := v.(*SearchSysOrganizationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[55].Exporter = func(v any, i int) any {
			switch v := v.(*SysOrganizationSearch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[56].Exporter = func(v any, i int) any {
			switch v := v.(*GetOrganizationTreeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[57].Exporter = func(v any, i int) any {
			switch v := v.(*SysPermission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[58].Exporter = func(v any, i int) any {
			switch v := v.(*AddSysPermissionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[59].Exporter = func(v any, i int) any {
			switch v := v.(*AddSysPermissionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[60].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateSysPermissionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[61].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateSysPermissionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[62].Exporter = func(v any, i int) any {
			switch v := v.(*DelSysPermissionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[63].Exporter = func(v any, i int) any {
			switch v := v.(*DelSysPermissionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[64].Exporter = func(v any, i int) any {
			switch v := v.(*GetSysPermissionByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[65].Exporter = func(v any, i int) any {
			switch v := v.(*GetSysPermissionByIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[66].Exporter = func(v any, i int) any {
			switch v := v.(*SearchSysPermissionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[67].Exporter = func(v any, i int) any {
			switch v := v.(*SearchSysPermissionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[68].Exporter = func(v any, i int) any {
			switch v := v.(*GetSysPermissionTreeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[69].Exporter = func(v any, i int) any {
			switch v := v.(*GetSysPermissionTreeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[70].Exporter = func(v any, i int) any {
			switch v := v.(*SysPermissionTree); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[71].Exporter = func(v any, i int) any {
			switch v := v.(*SysPosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[72].Exporter = func(v any, i int) any {
			switch v := v.(*AddSysPositionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[73].Exporter = func(v any, i int) any {
			switch v := v.(*AddSysPositionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[74].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateSysPositionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[75].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateSysPositionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[76].Exporter = func(v any, i int) any {
			switch v := v.(*DelSysPositionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[77].Exporter = func(v any, i int) any {
			switch v := v.(*DelSysPositionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[78].Exporter = func(v any, i int) any {
			switch v := v.(*GetSysPositionByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[79].Exporter = func(v any, i int) any {
			switch v := v.(*GetSysPositionByIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[80].Exporter = func(v any, i int) any {
			switch v := v.(*SearchSysPositionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[81].Exporter = func(v any, i int) any {
			switch v := v.(*SearchSysPositionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[82].Exporter = func(v any, i int) any {
			switch v := v.(*SearchSysPositionByUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[83].Exporter = func(v any, i int) any {
			switch v := v.(*SearchSysPositionByUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[84].Exporter = func(v any, i int) any {
			switch v := v.(*SysRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[85].Exporter = func(v any, i int) any {
			switch v := v.(*AddSysRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[86].Exporter = func(v any, i int) any {
			switch v := v.(*AddSysRoleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[87].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateSysRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[88].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateSysRoleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[89].Exporter = func(v any, i int) any {
			switch v := v.(*DelSysRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[90].Exporter = func(v any, i int) any {
			switch v := v.(*DelSysRoleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[91].Exporter = func(v any, i int) any {
			switch v := v.(*GetSysRoleByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[92].Exporter = func(v any, i int) any {
			switch v := v.(*GetSysRoleByIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[93].Exporter = func(v any, i int) any {
			switch v := v.(*SearchSysRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[94].Exporter = func(v any, i int) any {
			switch v := v.(*SearchSysRoleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[95].Exporter = func(v any, i int) any {
			switch v := v.(*BindRolePermissionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[96].Exporter = func(v any, i int) any {
			switch v := v.(*BindRolePermissionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[97].Exporter = func(v any, i int) any {
			switch v := v.(*SearchRolePermissionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[98].Exporter = func(v any, i int) any {
			switch v := v.(*SearchRolePermissionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[99].Exporter = func(v any, i int) any {
			switch v := v.(*BindRoleMenuReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[100].Exporter = func(v any, i int) any {
			switch v := v.(*BindRoleMenuResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[101].Exporter = func(v any, i int) any {
			switch v := v.(*SearchRoleMenuReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[102].Exporter = func(v any, i int) any {
			switch v := v.(*SearchRoleMenuResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[103].Exporter = func(v any, i int) any {
			switch v := v.(*SearchRolePermissionIdsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[104].Exporter = func(v any, i int) any {
			switch v := v.(*SearchRolePermissionIdsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[105].Exporter = func(v any, i int) any {
			switch v := v.(*GetTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[106].Exporter = func(v any, i int) any {
			switch v := v.(*TokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[107].Exporter = func(v any, i int) any {
			switch v := v.(*GetTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[108].Exporter = func(v any, i int) any {
			switch v := v.(*VerifyTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[109].Exporter = func(v any, i int) any {
			switch v := v.(*VerifyTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[110].Exporter = func(v any, i int) any {
			switch v := v.(*LogoutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[111].Exporter = func(v any, i int) any {
			switch v := v.(*LogoutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[112].Exporter = func(v any, i int) any {
			switch v := v.(*RefreshTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[113].Exporter = func(v any, i int) any {
			switch v := v.(*RefreshTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[114].Exporter = func(v any, i int) any {
			switch v := v.(*SysDict); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[115].Exporter = func(v any, i int) any {
			switch v := v.(*AddSysDictReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[116].Exporter = func(v any, i int) any {
			switch v := v.(*AddSysDictResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[117].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateSysDictReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[118].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateSysDictResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[119].Exporter = func(v any, i int) any {
			switch v := v.(*DelSysDictReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[120].Exporter = func(v any, i int) any {
			switch v := v.(*DelSysDictResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[121].Exporter = func(v any, i int) any {
			switch v := v.(*GetSysDictByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[122].Exporter = func(v any, i int) any {
			switch v := v.(*GetSysDictByIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[123].Exporter = func(v any, i int) any {
			switch v := v.(*SearchSysDictReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[124].Exporter = func(v any, i int) any {
			switch v := v.(*SearchSysDictResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[125].Exporter = func(v any, i int) any {
			switch v := v.(*SysDictItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[126].Exporter = func(v any, i int) any {
			switch v := v.(*AddSysDictItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[127].Exporter = func(v any, i int) any {
			switch v := v.(*AddSysDictItemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[128].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateSysDictItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[129].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateSysDictItemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[130].Exporter = func(v any, i int) any {
			switch v := v.(*DelSysDictItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[131].Exporter = func(v any, i int) any {
			switch v := v.(*DelSysDictItemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[132].Exporter = func(v any, i int) any {
			switch v := v.(*GetSysDictItemByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[133].Exporter = func(v any, i int) any {
			switch v := v.(*GetSysDictItemByIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[134].Exporter = func(v any, i int) any {
			switch v := v.(*SearchSysDictItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[135].Exporter = func(v any, i int) any {
			switch v := v.(*SearchSysDictItemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[136].Exporter = func(v any, i int) any {
			switch v := v.(*CheckDictItemCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[137].Exporter = func(v any, i int) any {
			switch v := v.(*CheckDictItemCodeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[138].Exporter = func(v any, i int) any {
			switch v := v.(*GetDictItemNameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[139].Exporter = func(v any, i int) any {
			switch v := v.(*GetDictItemTextResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[140].Exporter = func(v any, i int) any {
			switch v := v.(*UploadImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[141].Exporter = func(v any, i int) any {
			switch v := v.(*UploadImageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_portal_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   143,
			NumExtensions: 0,
			NumServices:   10,
		},
		GoTypes:           file_portal_proto_goTypes,
		DependencyIndexes: file_portal_proto_depIdxs,
		EnumInfos:         file_portal_proto_enumTypes,
		MessageInfos:      file_portal_proto_msgTypes,
	}.Build()
	File_portal_proto = out.File
	file_portal_proto_rawDesc = nil
	file_portal_proto_goTypes = nil
	file_portal_proto_depIdxs = nil
}
