// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: portal.proto

package server

import (
	"context"

	"github.com/yanshicheng/kube-onec/application/portal/rpc/internal/logic/sysauthservice"
	"github.com/yanshicheng/kube-onec/application/portal/rpc/internal/svc"
	"github.com/yanshicheng/kube-onec/application/portal/rpc/pb"
)

type SysAuthServiceServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedSysAuthServiceServer
}

func NewSysAuthServiceServer(svcCtx *svc.ServiceContext) *SysAuthServiceServer {
	return &SysAuthServiceServer{
		svcCtx: svcCtx,
	}
}

// 获取令牌
func (s *SysAuthServiceServer) GetToken(ctx context.Context, in *pb.GetTokenRequest) (*pb.GetTokenResponse, error) {
	l := sysauthservicelogic.NewGetTokenLogic(ctx, s.svcCtx)
	return l.GetToken(in)
}

// 验证令牌
func (s *SysAuthServiceServer) VerifyToken(ctx context.Context, in *pb.VerifyTokenRequest) (*pb.VerifyTokenResponse, error) {
	l := sysauthservicelogic.NewVerifyTokenLogic(ctx, s.svcCtx)
	return l.VerifyToken(in)
}

// 注销
func (s *SysAuthServiceServer) Logout(ctx context.Context, in *pb.LogoutRequest) (*pb.LogoutResponse, error) {
	l := sysauthservicelogic.NewLogoutLogic(ctx, s.svcCtx)
	return l.Logout(in)
}

// 刷新令牌
func (s *SysAuthServiceServer) RefreshToken(ctx context.Context, in *pb.RefreshTokenRequest) (*pb.RefreshTokenResponse, error) {
	l := sysauthservicelogic.NewRefreshTokenLogic(ctx, s.svcCtx)
	return l.RefreshToken(in)
}
