// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: portal.proto

package server

import (
	"context"

	"github.com/yanshicheng/kube-onec/application/portal/rpc/internal/logic/sysuserservice"
	"github.com/yanshicheng/kube-onec/application/portal/rpc/internal/svc"
	"github.com/yanshicheng/kube-onec/application/portal/rpc/pb"
)

type SysUserServiceServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedSysUserServiceServer
}

func NewSysUserServiceServer(svcCtx *svc.ServiceContext) *SysUserServiceServer {
	return &SysUserServiceServer{
		svcCtx: svcCtx,
	}
}

// -----------------------账号信息表-----------------------
func (s *SysUserServiceServer) AddSysUser(ctx context.Context, in *pb.AddSysUserReq) (*pb.AddSysUserResp, error) {
	l := sysuserservicelogic.NewAddSysUserLogic(ctx, s.svcCtx)
	return l.AddSysUser(in)
}

func (s *SysUserServiceServer) UpdateSysUser(ctx context.Context, in *pb.UpdateSysUserReq) (*pb.UpdateSysUserResp, error) {
	l := sysuserservicelogic.NewUpdateSysUserLogic(ctx, s.svcCtx)
	return l.UpdateSysUser(in)
}

func (s *SysUserServiceServer) DelSysUser(ctx context.Context, in *pb.DelSysUserReq) (*pb.DelSysUserResp, error) {
	l := sysuserservicelogic.NewDelSysUserLogic(ctx, s.svcCtx)
	return l.DelSysUser(in)
}

func (s *SysUserServiceServer) GetSysUserById(ctx context.Context, in *pb.GetSysUserByIdReq) (*pb.GetSysUserByIdResp, error) {
	l := sysuserservicelogic.NewGetSysUserByIdLogic(ctx, s.svcCtx)
	return l.GetSysUserById(in)
}

func (s *SysUserServiceServer) SearchSysUser(ctx context.Context, in *pb.SearchSysUserReq) (*pb.SearchSysUserResp, error) {
	l := sysuserservicelogic.NewSearchSysUserLogic(ctx, s.svcCtx)
	return l.SearchSysUser(in)
}

func (s *SysUserServiceServer) UpdateGlobalSysUser(ctx context.Context, in *pb.UpdateGlobalSysUserReq) (*pb.UpdateGlobalSysUserResp, error) {
	l := sysuserservicelogic.NewUpdateGlobalSysUserLogic(ctx, s.svcCtx)
	return l.UpdateGlobalSysUser(in)
}

func (s *SysUserServiceServer) ResetPassword(ctx context.Context, in *pb.ResetPasswordReq) (*pb.ResetPasswordResp, error) {
	l := sysuserservicelogic.NewResetPasswordLogic(ctx, s.svcCtx)
	return l.ResetPassword(in)
}

func (s *SysUserServiceServer) FrozenAccounts(ctx context.Context, in *pb.FrozenAccountsReq) (*pb.FrozenAccountsResp, error) {
	l := sysuserservicelogic.NewFrozenAccountsLogic(ctx, s.svcCtx)
	return l.FrozenAccounts(in)
}

func (s *SysUserServiceServer) ChangePassword(ctx context.Context, in *pb.ChangePasswordReq) (*pb.ChangePasswordResp, error) {
	l := sysuserservicelogic.NewChangePasswordLogic(ctx, s.svcCtx)
	return l.ChangePassword(in)
}

func (s *SysUserServiceServer) Leave(ctx context.Context, in *pb.LeaveReq) (*pb.LeaveResp, error) {
	l := sysuserservicelogic.NewLeaveLogic(ctx, s.svcCtx)
	return l.Leave(in)
}

func (s *SysUserServiceServer) BindRole(ctx context.Context, in *pb.BindRoleReq) (*pb.BindRoleResp, error) {
	l := sysuserservicelogic.NewBindRoleLogic(ctx, s.svcCtx)
	return l.BindRole(in)
}

func (s *SysUserServiceServer) GetRoleByUserId(ctx context.Context, in *pb.GetRoleByUserIdReq) (*pb.GetRoleByUserIdResp, error) {
	l := sysuserservicelogic.NewGetRoleByUserIdLogic(ctx, s.svcCtx)
	return l.GetRoleByUserId(in)
}

func (s *SysUserServiceServer) GetUserInfo(ctx context.Context, in *pb.GetUserInfoReq) (*pb.GetUserInfoResp, error) {
	l := sysuserservicelogic.NewGetUserInfoLogic(ctx, s.svcCtx)
	return l.GetUserInfo(in)
}

func (s *SysUserServiceServer) UpdateIcon(ctx context.Context, in *pb.UpdateIconReq) (*pb.UpdateIconResp, error) {
	l := sysuserservicelogic.NewUpdateIconLogic(ctx, s.svcCtx)
	return l.UpdateIcon(in)
}
